var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.314,1,1.123]],["body/interfaces/Action.html",[0,0.485,1,2.024,2,1.929,3,0.206,4,0.206,5,0.183,6,5.374,7,0.094,8,0.6,9,2.459,10,0.857,11,0.138,12,0.013,13,0.206,14,0.012,15,0.012]],["title/injectables/ActionDisplayManagerService.html",[16,0.449,17,2.885]],["body/injectables/ActionDisplayManagerService.html",[1,1.229,3,0.146,4,0.146,5,0.13,7,0.067,8,0.484,11,0.146,12,0.014,13,0.195,14,0.01,15,0.01,16,0.653,17,4.195,18,1.273,19,5.225,20,5.687,21,2.726,22,3.437,23,1.169,24,5.019,25,4.856,26,0.986,27,5.225,28,0.8,29,3.811,30,4.405,31,0.817,32,5.818,33,0.687,34,0.469,35,0.687,36,4.379,37,0.687,38,0.891,39,4.856,40,4.379,41,1.953,42,0.286,43,0.635,44,1.713,45,3.158,46,1.817,47,3.811,48,2.327,49,3.255,50,1.647,51,0.959,52,2.59,53,3.811,54,1.229,55,1.186,56,0.217,57,2.45,58,3.811,59,1.144,60,3.811,61,3.437,62,3.811,63,3.811,64,5.063,65,3.158,66,3.437,67,3.158,68,3.811,69,3.811,70,2.45,71,2.114,72,0.925,73,3.811,74,3.811,75,3.811,76,3.811,77,2.59,78,3.811,79,3.158,80,3.811,81,3.811,82,3.811,83,3.811,84,3.811,85,3.811,86,3.811]],["title/interfaces/ActionDisplayServiceWithSetup.html",[0,0.314,39,2.681]],["body/interfaces/ActionDisplayServiceWithSetup.html",[0,0.465,2,1.85,3,0.198,4,0.198,5,0.176,7,0.091,8,0.585,11,0.158,12,0.014,13,0.198,14,0.012,15,0.012,25,5.203,27,5.599,38,0.758,39,4.714,41,2.179,42,0.243,51,1.297,87,4.647,88,5.153,89,3.738]],["title/classes/ActionDisplaySetupManager.html",[24,2.885,56,0.149]],["body/classes/ActionDisplaySetupManager.html",[1,1.158,3,0.138,4,0.138,5,0.123,7,0.063,8,0.465,11,0.152,12,0.014,13,0.187,14,0.009,15,0.009,16,0.627,17,2.976,19,5.399,20,5.877,21,2.817,22,3.239,23,1.225,24,4.572,25,4.759,26,0.948,27,5.121,28,0.754,30,3.75,31,0.859,33,0.648,34,0.442,35,0.648,37,0.878,38,0.91,39,5.018,41,1.907,42,0.279,43,0.598,44,1.614,45,2.976,46,1.981,47,3.592,48,2.193,49,3.129,50,1.553,51,0.904,52,2.441,53,3.592,54,1.158,55,1.118,56,0.208,57,2.309,58,3.592,59,1.247,60,3.592,61,3.239,62,3.592,63,3.592,64,6.181,65,4.572,66,4.388,67,4.031,68,4.866,69,3.592,70,2.309,71,3.281,72,0.872,73,3.592,74,3.592,75,3.592,76,3.592,77,2.441,78,3.592,79,2.976,80,3.592,81,3.592,82,3.592,83,3.592,84,3.592,85,3.592,86,3.592,90,2.088,91,5.591,92,4.127,93,1.225,94,1.06,95,4.127,96,4.127,97,4.127]],["title/components/ActionPawnComponent.html",[98,0.876,99,1.565]],["body/components/ActionPawnComponent.html",[1,2.141,3,0.13,4,0.13,5,0.116,7,0.06,10,0.691,11,0.087,12,0.014,13,0.13,14,0.009,15,0.009,21,1.468,31,0.779,34,0.746,42,0.273,43,0.566,44,1.526,52,2.308,56,0.145,93,0.855,94,0.74,98,1.349,99,2.597,100,2.19,101,1.655,102,1.655,103,1.655,104,4.372,105,4.667,106,3.396,107,1.655,108,2.379,109,2.379,110,2.915,111,3.029,112,2.507,113,2.024,114,1.681,115,2.024,116,5.381,117,2.024,118,5.381,119,3.606,120,2.974,121,1.808,122,3.116,123,4.441,124,2.974,125,3.994,126,3.903,127,3.903,128,3.903,129,2.814,130,3.903,131,2.814,132,3.903,133,1.725,134,3.378,135,2.184,136,2.45,137,2.814,138,2.074,139,1.974,140,1.468,141,1.264,142,1.042,143,3.903,144,3.903,145,3.88,146,2.814,147,1.655,148,2.281,149,1.448,150,1.655,151,2.815,152,1.655,153,1.655,154,1.526,155,2.281,156,1.526,157,2.281,158,1.526,159,1.311,160,1.526,161,1.655,162,1.526,163,1.311,164,1.413,165,1.655,166,1.526,167,1.655,168,1.526,169,1.526,170,1.655,171,1.526,172,1.655,173,2.815,174,1.468,175,1.468,176,1.526,177,1.588,178,1.468,179,2.024,180,1.949,181,1.468,182,1.468,183,1.468,184,1.655,185,1.655]],["title/interfaces/ActionPawnPiece.html",[0,0.314,124,1.931]],["body/interfaces/ActionPawnPiece.html",[0,0.468,2,1.859,3,0.199,4,0.199,5,0.177,7,0.091,8,0.587,11,0.133,12,0.014,13,0.199,14,0.012,15,0.012,42,0.29,87,4.67,122,3.935,124,3.406,186,5.178,187,2.554,188,3.061,189,5.608,190,3.734,191,5.178]],["title/components/ActionPawnSpaceComponent.html",[98,0.876,154,1.565]],["body/components/ActionPawnSpaceComponent.html",[1,2.182,3,0.135,4,0.135,5,0.12,7,0.062,11,0.091,12,0.014,13,0.135,14,0.009,15,0.009,21,1.522,31,0.475,34,0.591,42,0.29,43,0.587,44,1.582,52,2.392,56,0.151,93,0.886,94,0.767,98,1.374,99,2.636,100,2.245,101,1.715,102,1.715,103,1.715,104,3.462,105,2.711,107,1.715,108,2.438,109,2.438,110,2.928,111,3.042,112,3.195,113,2.075,114,1.723,115,2.075,117,2.075,119,3.696,120,3.405,124,3.03,133,1.788,134,3.462,135,2.263,140,2.075,141,2.183,147,1.715,148,2.338,149,1.476,150,1.715,151,2.857,152,1.715,153,1.715,154,2.636,155,2.338,156,1.582,157,2.338,158,1.582,159,1.359,160,1.582,161,1.715,162,1.582,163,1.359,164,1.465,165,1.715,166,2.636,167,1.715,168,1.582,169,2.636,170,1.715,171,1.582,172,1.715,173,2.857,174,1.522,175,1.522,176,1.582,177,1.646,178,1.522,179,2.075,180,1.997,181,1.522,182,1.522,183,1.522,184,1.715,185,1.715,192,4.8,193,4.329,194,3.175,195,2.438,196,4.8,197,4.8,198,3.52,199,2.917,200,3.175,201,4.045]],["title/components/AdaptionActionDisplayCardComponent.html",[98,0.876,156,1.565]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.25,3,0.111,4,0.111,5,0.098,7,0.1,8,0.399,11,0.074,12,0.014,13,0.111,14,0.008,15,0.008,21,2.977,26,0.813,28,0.605,29,2.884,30,4.037,31,0.725,33,0.52,34,0.603,35,0.52,37,0.52,38,0.424,42,0.306,43,0.481,44,2.874,45,2.39,48,1.761,49,1.854,51,0.726,52,1.96,56,0.123,57,1.854,93,1.05,94,0.909,98,1.234,99,1.296,100,1.951,101,1.405,102,1.405,103,1.405,104,4.111,107,1.405,108,2.12,109,2.12,110,2.85,111,2.961,112,2.293,113,1.804,114,1.498,115,1.804,117,1.804,120,2.315,124,1.6,133,1.465,135,1.854,140,1.804,147,1.405,148,2.033,149,1.54,150,1.405,151,2.617,152,1.405,153,1.405,154,2.414,155,2.033,156,2.414,157,2.033,158,1.296,159,1.114,160,1.296,161,1.405,162,1.296,163,1.114,164,1.2,165,1.405,166,1.296,167,1.405,168,2.414,169,2.414,170,1.405,171,1.296,172,1.405,173,2.617,174,1.247,175,1.247,176,1.296,177,1.349,178,1.247,179,1.804,180,1.736,181,1.247,182,1.247,183,1.247,184,1.405,185,1.405,193,3.763,202,4.923,203,5.14,204,2.601,205,3.763,206,4.421,207,4.172,208,3.152,209,4.172,210,4.172,211,5.7,212,3.024,213,4.845,214,4.794,215,3.314,216,3.48,217,3.314,218,1.854,219,3.457,220,4.172,221,3.314,222,1.53,223,2.08,224,2.884,225,2.601,226,2.08,227,3.314,228,3.314,229,3.314,230,3.314,231,3.314,232,2.884,233,4.451]],["title/injectables/AdaptionActionDisplayService.html",[16,0.449,30,2.366]],["body/injectables/AdaptionActionDisplayService.html",[1,2.174,3,0.086,4,0.086,5,0.076,7,0.083,8,0.33,11,0.154,12,0.014,13,0.086,14,0.007,15,0.007,16,0.445,18,0.749,19,5.587,23,1.119,25,3.247,26,0.673,27,3.927,28,0.725,30,2.348,31,0.904,33,0.855,34,0.583,35,0.855,37,1.017,38,0.829,42,0.297,43,0.373,46,0.805,48,2.11,49,2.222,51,0.564,52,1.523,54,0.723,55,0.698,56,0.096,59,1.315,65,3.494,66,3.117,67,2.863,70,1.441,71,2.629,72,0.544,77,1.523,93,1.562,94,1.352,120,2.34,124,3.383,125,2.893,135,1.441,139,1.303,141,2.013,142,0.761,149,0.606,163,0.865,188,1.616,190,1.617,195,2.957,202,5.587,211,5.409,212,2.869,222,3.235,223,1.617,226,1.617,234,2.242,235,4.846,236,4.846,237,2.53,238,3.494,239,3.494,240,3.971,241,3.971,242,3.456,243,5.446,244,5.883,245,2.576,246,3.901,247,4.67,248,3.971,249,3.971,250,3.471,251,2.576,252,2.576,253,3.971,254,2.576,255,3.971,256,2.576,257,2.576,258,2.576,259,2.576,260,2.576,261,3.971,262,2.576,263,2.576,264,3.971,265,2.576,266,2.576,267,2.576,268,2.863,269,2.576,270,2.576,271,3.971,272,2.576,273,2.576,274,1.726,275,1.617,276,1.441,277,2.576,278,1.726,279,2.242,280,1.726,281,3.247,282,1.726,283,1.368,284,1.857,285,1.617,286,2.576,287,2.576,288,3.971,289,2.576,290,2.576,291,1.726,292,2.576,293,2.242,294,2.576,295,2.576,296,3.971,297,3.117,298,2.242,299,2.576,300,2.576,301,3.042,302,2.576,303,2.576,304,1.726,305,2.576,306,2.576,307,3.971,308,2.576,309,2.576,310,2.576,311,1.523,312,1.438,313,2.576,314,2.492,315,2.576,316,2.021,317,2.576,318,3.971,319,2.576,320,2.576,321,1.368,322,1.857,323,2.576,324,2.576,325,2.021,326,1.857,327,2.576,328,2.576,329,2.576]],["title/classes/Animal.html",[56,0.149,159,1.344]],["body/classes/Animal.html",[0,0.26,1,0.929,3,0.111,4,0.111,5,0.098,7,0.051,8,0.398,9,1.758,10,0.537,11,0.147,12,0.014,13,0.188,14,0.008,15,0.008,23,1.235,28,0.875,31,0.875,33,0.519,34,0.661,35,0.519,38,0.613,42,0.314,46,1.496,51,0.725,56,0.178,59,1.342,72,1.304,90,1.674,120,2.718,121,1.609,124,1.598,129,2.386,135,1.852,139,1.674,142,1.153,149,1.126,159,1.609,195,2.488,212,2.848,222,3.15,226,2.077,237,2.291,238,2.386,239,2.386,268,2.386,278,2.218,281,2.218,282,2.218,283,1.758,284,2.386,285,2.077,301,3.872,304,2.218,312,1.734,314,2.077,321,1.758,322,2.386,326,2.386,330,2.386,331,3.375,332,4.448,333,4.716,334,2.711,335,4.448,336,3.15,337,3.759,338,3.872,339,4.79,340,2.88,341,3.938,342,3.31,343,3.31,344,3.31,345,2.88,346,3.31,347,3.31,348,3.31,349,3.31,350,3.31,351,3.31,352,3.31,353,3.31,354,2.077,355,2.291,356,2.386,357,4.035,358,2.386,359,2.386,360,2.077,361,2.598,362,1.463,363,3.454,364,4.418,365,2.598,366,2.598,367,2.598,368,2.598,369,2.598,370,2.598,371,2.598,372,3.759,373,2.598,374,2.598,375,2.598,376,3.209,377,2.598,378,2.598,379,2.598,380,2.598,381,2.598,382,2.386,383,2.598,384,2.598,385,2.598,386,2.598,387,2.598,388,2.598,389,2.598,390,2.598,391,2.598,392,3.759,393,2.598,394,3.759,395,2.598,396,3.759,397,2.598,398,2.598,399,2.598,400,2.598]],["title/components/AnimalCardComponent.html",[98,0.876,158,1.565]],["body/components/AnimalCardComponent.html",[1,1.765,3,0.089,4,0.089,5,0.079,7,0.091,8,0.338,11,0.059,12,0.014,13,0.089,14,0.007,15,0.007,21,0.998,23,1.06,26,0.689,28,0.742,31,0.855,33,0.417,34,0.529,35,0.417,37,0.775,38,0.632,42,0.312,43,0.385,44,1.038,48,1.41,49,2.274,50,0.998,51,0.581,52,1.569,56,0.099,77,1.569,93,1.378,94,1.192,98,1.081,99,2.164,100,1.654,101,1.125,102,1.125,103,1.125,105,1.778,107,1.125,108,1.796,109,1.796,110,2.748,111,2.855,112,1.08,113,1.529,114,1.542,115,1.529,117,1.529,119,2.723,124,2.671,133,1.173,134,1.666,135,1.485,139,1.343,140,1.529,141,0.86,142,0.417,147,1.125,148,1.723,149,1.402,150,1.125,151,2.345,152,1.125,153,1.125,154,1.038,155,1.723,156,1.038,157,1.723,158,2.164,159,2.2,160,1.038,161,1.125,162,1.038,163,0.892,164,0.961,165,1.125,166,2.164,167,1.125,168,1.038,169,1.038,170,1.125,171,1.038,172,1.125,173,2.345,174,0.998,175,0.998,176,1.038,177,1.08,178,0.998,179,1.529,180,1.471,181,0.998,182,0.998,183,0.998,184,1.125,185,1.125,190,1.666,199,1.914,200,2.083,204,2.083,205,3.189,206,3.875,207,3.536,208,2.763,209,3.536,210,3.536,212,2.753,213,4.342,216,3.168,218,1.485,222,1.225,223,1.666,226,1.666,232,2.31,233,3.989,274,1.778,283,1.41,334,2.366,336,2.274,354,1.666,401,6.422,402,5.791,403,4.937,404,4.937,405,4.937,406,4.937,407,4.937,408,5.963,409,4.937,410,5.963,411,5.963,412,5.532,413,5.532,414,2.654,415,4.215,416,4.109,417,2.654,418,2.654,419,4.063,420,2.654,421,2.654,422,2.654,423,5.963,424,4.063,425,2.654,426,5.532,427,2.654,428,4.063,429,4.063,430,2.654,431,2.654,432,2.654,433,2.654,434,1.569,435,2.31,436,2.654,437,2.654,438,2.654,439,2.31,440,2.31,441,2.083,442,2.083,443,2.31,444,2.654,445,2.654,446,2.654,447,2.654,448,2.654,449,2.654,450,2.654,451,2.654,452,2.654,453,4.063,454,2.654,455,2.654,456,2.654,457,2.654,458,2.654,459,2.654,460,2.654,461,2.654,462,2.654,463,2.654,464,4.063,465,4.063,466,4.063]],["title/interfaces/AnimalConfig.html",[0,0.314,338,2.511]],["body/interfaces/AnimalConfig.html",[0,0.278,1,0.993,2,1.106,3,0.118,4,0.118,5,0.105,7,0.054,8,0.418,9,1.106,10,0.564,11,0.15,12,0.014,13,0.195,14,0.008,15,0.008,23,1.152,28,0.647,34,0.379,38,0.644,42,0.318,46,1.57,51,0.775,56,0.187,59,1.372,72,1.344,120,1.709,124,1.709,135,1.981,139,1.791,142,1.171,149,1.182,159,1.19,195,2.584,212,2.32,222,3.222,226,2.222,237,2.735,238,2.553,239,2.553,268,2.553,278,2.372,281,2.372,282,2.372,283,1.881,284,2.553,285,2.222,301,3.993,304,2.372,312,1.82,314,2.222,321,1.881,322,2.553,326,2.553,330,2.553,331,2.813,332,4.845,333,4.263,334,2.847,335,4.845,336,1.981,337,2.779,338,3.668,341,3.76,354,2.222,355,2.922,356,2.553,357,4.528,358,2.553,359,2.553,360,2.222,361,2.779,362,1.565,363,4.845,364,4.587,365,2.779,366,2.779,367,2.779,368,2.779,369,2.779,370,2.779,371,2.779,372,3.945,373,2.779,374,2.779,375,2.779,376,3.368,377,2.779,378,2.779,379,2.779,380,2.779,381,2.779,382,2.553,383,2.779,384,2.779,385,2.779,386,2.779,387,2.779,388,2.779,389,2.779,390,2.779,391,2.779,392,3.945,393,2.779,394,3.945,395,2.779,396,3.945,397,2.779,398,2.779,399,2.779,400,2.779]],["title/classes/AnimalElements.html",[56,0.149,333,2.681]],["body/classes/AnimalElements.html",[0,0.259,1,0.925,3,0.11,4,0.11,5,0.098,7,0.05,8,0.397,9,1.03,10,0.536,11,0.126,12,0.014,13,0.188,14,0.008,15,0.008,23,1.169,26,0.809,28,0.872,31,0.845,33,0.881,34,0.66,35,0.881,37,0.75,38,0.789,42,0.313,46,1.754,51,0.722,56,0.178,59,1.382,72,1.301,90,1.668,93,1.046,94,0.905,120,1.591,121,1.605,124,1.591,135,1.844,139,1.668,142,1.151,149,1.448,159,1.108,195,2.483,212,2.842,222,3.44,226,2.069,237,2.66,238,2.377,239,4.049,242,4.156,268,3.443,278,2.209,281,2.209,282,2.209,283,1.751,284,2.377,285,2.069,301,3.865,304,2.209,312,1.729,314,2.069,321,1.751,322,2.377,326,2.377,330,2.377,331,2.722,332,3.443,333,4.379,334,2.459,335,3.443,336,1.844,337,2.587,338,2.997,341,3.657,354,2.069,355,2.286,356,2.377,357,4.406,358,2.377,359,2.377,360,2.069,361,2.587,362,1.457,363,4.049,364,4.408,365,4.408,366,2.587,367,2.587,368,2.587,369,2.587,370,2.587,371,3.748,372,3.748,373,2.587,374,2.587,375,3.748,376,3.2,377,2.587,378,2.587,379,2.587,380,2.587,381,2.587,382,2.377,383,2.587,384,4.408,385,2.587,386,2.587,387,4.408,388,2.587,389,2.587,390,2.587,391,2.587,392,3.748,393,2.587,394,3.748,395,2.587,396,3.748,397,2.587,398,2.587,399,2.587,400,2.587,467,4.776,468,3.296,469,4.776,470,3.296,471,3.296,472,3.296,473,3.296,474,3.296,475,3.296,476,3.296,477,3.296,478,3.296]],["title/injectables/AnimalProviderService.html",[16,0.449,415,2.681]],["body/injectables/AnimalProviderService.html",[3,0.108,4,0.108,5,0.096,7,0.049,8,0.392,9,1.736,10,0.623,11,0.145,12,0.014,13,0.108,14,0.008,15,0.008,16,0.529,18,0.941,23,1.259,26,0.798,28,0.861,31,0.857,33,0.958,34,0.654,35,0.958,37,0.958,38,0.782,42,0.305,43,0.469,46,1.736,48,2.503,49,2.636,50,1.772,51,0.709,54,0.908,55,0.876,56,0.12,59,1.436,72,1.477,77,1.913,93,1.337,94,1.157,138,1.719,139,1.637,142,0.739,159,2.348,246,3.831,274,3.723,275,2.03,276,3.109,279,2.815,291,2.168,331,2.456,332,2.333,334,2.694,335,2.333,338,4.387,340,2.815,354,2.03,357,1.913,358,2.333,359,2.333,363,2.333,415,3.157,479,6.457,480,2.815,481,5.556,482,4.835,483,5.556,484,6.103,485,4.711,486,4.711,487,6.103,488,3.235,489,4.387,490,4.683,491,4.711,492,4.711,493,4.711,494,3.235,495,4.711,496,3.235,497,3.235,498,3.157,499,3.235,500,3.235,501,4.711,502,3.235,503,2.756,504,3.235,505,2.333,506,3.235,507,2.333,508,2.03,509,2.168,510,2.539,511,3.235,512,3.235,513,3.235,514,3.235,515,3.235,516,2.815,517,3.235,518,3.235,519,3.235,520,3.235,521,3.235,522,2.815,523,3.235,524,4.711,525,3.235,526,5.556,527,3.235,528,3.235,529,3.235,530,3.235,531,3.235,532,4.711,533,3.235,534,3.235,535,4.711,536,3.235,537,3.235,538,3.235,539,3.235,540,3.235,541,3.235,542,3.235,543,3.235,544,3.235,545,3.235,546,3.235,547,3.235,548,2.333,549,3.235,550,3.235,551,3.235,552,3.235,553,3.235]],["title/components/AppComponent.html",[98,0.876,160,1.565]],["body/components/AppComponent.html",[1,1.846,3,0.149,4,0.149,5,0.132,7,0.068,8,0.488,10,0.498,11,0.099,12,0.014,13,0.149,14,0.01,15,0.01,21,1.671,31,0.521,34,0.629,42,0.27,43,0.644,44,1.738,55,1.591,56,0.165,93,0.973,94,0.842,98,1.441,99,1.738,100,2.391,101,1.884,102,1.884,103,1.884,107,1.884,110,2.961,111,3.077,112,1.808,113,2.21,114,1.835,115,2.21,117,2.21,140,2.21,147,1.884,148,2.49,149,1.547,150,1.884,151,2.968,152,1.884,153,1.884,154,1.738,155,2.49,156,1.738,157,2.49,158,1.738,159,1.493,160,2.739,161,1.884,162,2.739,163,1.493,164,2.383,165,1.884,166,1.738,167,1.884,168,1.738,169,1.738,170,1.884,171,1.738,172,1.884,173,2.968,174,1.671,175,1.671,176,1.738,177,1.808,178,1.671,179,2.21,180,2.127,181,1.671,182,1.671,183,1.671,184,1.884,185,1.884,336,3.287,554,3.867,555,6.58,556,5.874,557,5.874,558,6.58,559,5.112,560,4.443,561,2.361,562,4.443,563,3.487,564,4.443]],["title/classes/Area.html",[56,0.149,237,1.628]],["body/classes/Area.html",[0,0.273,3,0.116,4,0.116,5,0.103,7,0.088,8,0.412,9,2.083,10,0.778,11,0.169,12,0.014,13,0.166,14,0.008,15,0.008,23,1.166,26,0.84,28,0.634,31,0.904,33,0.907,34,0.619,35,0.907,37,0.989,38,0.74,41,1.769,42,0.237,46,1.969,51,0.76,56,0.129,59,1.239,70,1.941,71,3.044,72,1.047,90,1.755,141,2.042,142,0.545,187,2.093,195,3.332,237,2.566,297,2.723,301,2.178,311,2.052,312,1.794,314,4.787,325,3.889,331,3.066,362,1.534,565,2.723,566,3.227,567,5.03,568,4.787,569,3.684,570,3.32,571,2.118,572,2.93,573,4.955,574,3.32,575,3.873,576,4.312,577,4.955,578,3.47,579,3.47,580,3.47,581,1.843,582,3.543,583,2.723,584,2.723,585,2.723,586,3.47,587,4.312,588,3.47,589,2.45,590,3.02,591,2.773,592,3.543,593,3.47,594,1.843,595,2.723,596,3.02,597,2.101,598,1.046,599,3.02,600,2.723,601,2.052,602,4.312,603,3.02,604,3.02,605,3.02,606,5.03,607,3.02,608,3.02,609,3.02,610,3.02,611,3.02,612,3.02,613,3.02,614,2.178,615,4.312,616,2.502,617,2.502,618,2.502,619,2.502,620,3.11,621,3.02,622,3.02,623,3.02,624,2.178,625,3.02,626,3.02,627,3.02,628,3.02,629,3.02]],["title/injectables/AreaRegistryService.html",[16,0.449,246,2.511]],["body/injectables/AreaRegistryService.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.497,9,1.424,10,0.67,11,0.169,12,0.014,13,0.152,14,0.01,15,0.01,16,0.67,18,1.326,23,1.182,26,1.013,28,0.833,31,0.901,33,1.046,34,0.714,35,1.046,37,0.938,38,0.584,41,1.279,42,0.29,43,0.661,50,2.248,54,1.279,55,1.235,56,0.17,59,1.31,93,1.549,94,1.341,149,1.072,187,2.163,212,2.105,237,2.432,246,3.75,275,3.75,276,2.551,498,3.055,503,2.712,582,4.003,592,2.422,598,1.374,630,2.248,631,2.862,632,4.658,633,3.343,634,4.308,635,3.957,636,3.174,637,4.559,638,5.1,639,3.968,640,5.975,641,3.578,642,3.729,643,3.055,644,3.968,645,3.578,646,3.287,647,3.578,648,3.578,649,3.287,650,3.578,651,3.287,652,2.307,653,2.862,654,4.559]],["title/interfaces/AreaState.html",[0,0.314,592,2.126]],["body/interfaces/AreaState.html",[0,0.333,2,1.325,3,0.142,4,0.142,5,0.126,7,0.098,8,0.474,9,2.24,10,0.639,11,0.095,12,0.014,13,0.19,14,0.009,15,0.009,23,1.009,41,1.598,42,0.264,46,1.779,51,0.929,56,0.158,59,1.351,70,2.374,71,2.048,72,1.204,141,2.083,142,0.666,187,2.328,195,3.433,237,2.797,297,3.329,301,2.663,311,2.509,312,2.062,314,4.5,325,4.47,331,2.518,362,1.875,565,3.329,566,2.518,567,3.692,568,4.925,571,1.914,576,3.692,587,3.692,589,2.415,591,2.374,592,3.809,596,3.692,597,2.726,598,1.278,599,4.957,600,4.47,601,3.368,602,5.982,603,3.692,604,3.692,605,3.692,606,5.596,607,3.692,608,3.692,609,3.692,610,3.692,611,3.692,612,3.692,613,3.692,614,2.663,615,4.957,616,3.059,617,3.059,618,3.059,619,3.059,620,3.575,621,3.692,622,3.692,623,3.692,624,2.663,625,3.692,626,3.692,627,3.692,628,3.692,629,3.692,655,2.374]],["title/injectables/AreaStateService.html",[16,0.449,638,2.885]],["body/injectables/AreaStateService.html",[3,0.144,4,0.144,5,0.128,7,0.066,8,0.479,9,1.349,10,0.647,11,0.166,12,0.014,13,0.144,14,0.01,15,0.01,16,0.647,18,1.255,23,1.208,26,0.977,31,0.903,33,1.086,34,0.741,35,1.086,37,1.132,38,0.886,42,0.266,43,0.626,50,2.168,54,1.211,55,1.169,56,0.161,59,1.133,71,3.132,93,1.262,94,1.092,121,1.936,142,0.678,149,1.015,187,2.087,237,2.935,275,3.617,503,2.346,569,4.025,571,1.451,582,4.025,592,3.678,598,1.301,630,2.168,633,3.225,635,3.225,636,3.062,638,4.155,642,3.63,651,3.113,652,2.184,656,2.71,657,4.655,658,4.155,659,4.155,660,4.155,661,4.677,662,5.763,663,3.388,664,4.155,665,3.388,666,3.113,667,3.388,668,3.388,669,3.113,670,3.388,671,3.113,672,3.388,673,3.388,674,3.113,675,3.388,676,4.317,677,4.317,678,4.317]],["title/injectables/AuthService.html",[16,0.449,679,2.126]],["body/injectables/AuthService.html",[3,0.119,4,0.119,5,0.105,7,0.054,8,0.419,10,0.806,11,0.156,12,0.014,13,0.119,14,0.008,15,0.008,16,0.565,18,1.032,23,1.202,26,0.854,28,0.92,31,0.889,33,1,34,0.682,35,1,37,1.056,38,0.645,41,1.643,42,0.302,43,0.515,46,1.829,51,0.778,54,0.996,55,0.962,56,0.132,59,0.99,72,1.237,79,4.221,114,1.109,121,1.693,125,2.676,142,1.128,175,1.895,177,2.593,283,1.886,312,1.286,321,1.886,331,3.089,679,2.676,680,3.09,681,5.095,682,5.854,683,5.037,684,5.854,685,3.462,686,5.037,687,5.264,688,5.854,689,3.09,690,4.682,691,5.181,692,5.037,693,5.037,694,5.544,695,3.55,696,5.854,697,3.55,698,4.384,699,3.767,700,3.55,701,2.325,702,2.979,703,3.55,704,5.037,705,3.55,706,3.55,707,3.55,708,3.55,709,3.55,710,3.55,711,3.632,712,2.379,713,3.09,714,3.55,715,2.787,716,2.787,717,2.787,718,2.787,719,3.55,720,2.56,721,3.09,722,3.55,723,3.55,724,3.55,725,3.55,726,3.55,727,3.55,728,2.787,729,3.55,730,3.55,731,3.09,732,3.55,733,3.09,734,3.55,735,3.09,736,3.55,737,2.229,738,3.55,739,3.55,740,3.55,741,3.55,742,3.55,743,3.55,744,2.379,745,5.037,746,3.55,747,3.55,748,3.55,749,3.55,750,3.55,751,3.55,752,3.55,753,3.09]],["title/injectables/CognitoClientService.html",[16,0.449,690,2.681]],["body/injectables/CognitoClientService.html",[3,0.116,4,0.116,5,0.103,7,0.053,8,0.411,10,0.915,11,0.149,12,0.014,13,0.116,14,0.008,15,0.008,16,0.554,18,1.005,23,0.905,26,0.837,28,1.053,31,0.813,33,0.988,34,0.713,35,0.988,37,0.988,38,0.633,42,0.273,43,0.501,54,0.969,55,0.936,56,0.129,59,1.237,72,1.506,94,0.655,114,1.543,134,3.619,141,1.6,142,1.144,175,1.858,179,1.3,180,1.251,685,4.388,690,3.31,694,3.007,698,4.299,699,4.452,701,3.426,702,4.095,711,2.491,715,2.712,716,2.712,717,2.712,718,2.712,728,2.712,737,3.619,744,3.31,754,6.204,755,2.491,756,5.766,757,4.299,758,4.94,759,4.299,760,4.94,761,4.299,762,4.537,763,3.455,764,4.94,765,3.455,766,3.455,767,5.766,768,3.455,769,4.299,770,4.8,771,3.455,772,6.292,773,3.455,774,3.455,775,4.94,776,3.455,777,3.455,778,3.455,779,3.455,780,3.007,781,2.315,782,3.455,783,3.455,784,3.455,785,3.455,786,3.455,787,3.455,788,5.766,789,5.766,790,3.455,791,5.766,792,3.455,793,5.766,794,6.292,795,5.766,796,3.455,797,5.766,798,4.94,799,4.94,800,3.455,801,3.455,802,3.455,803,3.455,804,3.455,805,3.562,806,3.455,807,3.455]],["title/components/DrawPoolGameComponent.html",[98,0.876,162,1.565]],["body/components/DrawPoolGameComponent.html",[1,1.99,3,0.079,4,0.079,5,0.07,7,0.036,8,0.309,10,0.417,11,0.127,12,0.014,13,0.079,14,0.006,15,0.006,21,1.728,23,1.074,26,0.63,28,0.679,30,3.713,31,0.785,33,0.372,34,0.492,35,0.372,37,0.721,38,0.769,42,0.314,43,0.343,44,0.926,45,1.707,48,1.258,49,2.081,51,0.519,56,0.088,70,1.325,71,2.513,72,1.269,77,1.4,93,1.239,94,1.268,98,1.006,99,2.036,100,1.514,101,1.004,102,1.004,103,1.004,105,1.587,107,1.004,110,2.69,111,2.795,112,0.964,113,1.399,114,1.435,115,1.399,117,1.399,120,2.218,125,3.455,140,1.399,141,1.205,147,1.004,148,1.577,149,1.224,150,1.004,151,2.207,152,1.004,153,1.004,154,0.926,155,1.577,156,2.036,157,1.577,158,2.036,159,1.543,160,0.926,161,1.004,162,2.036,163,2.11,164,2.856,165,1.004,166,2.036,167,1.004,168,2.036,169,2.036,170,1.004,171,0.926,172,1.004,173,2.207,174,0.891,175,0.891,176,0.926,177,0.964,178,0.891,179,1.399,180,1.347,181,0.891,182,0.891,183,0.891,184,1.004,185,1.004,199,1.707,200,1.859,202,2.682,203,1.859,219,1.707,220,2.061,224,2.061,233,2.682,237,1.87,246,3.941,274,3.79,275,1.486,276,2.081,278,1.587,280,1.587,282,1.587,291,1.587,293,2.061,334,2.446,354,1.486,402,1.859,415,4.208,416,3.941,439,2.061,440,2.061,442,1.859,489,3.267,508,1.486,522,2.061,548,2.682,563,5.372,598,1.705,652,1.198,744,2.492,808,5.957,809,2.061,810,2.57,811,3.998,812,3.72,813,3.72,814,4.593,815,4.593,816,5.656,817,5.656,818,4.593,819,5.205,820,5.205,821,2.061,822,3.488,823,4.593,824,3.72,825,3.237,826,2.368,827,2.368,828,2.368,829,2.368,830,2.368,831,2.368,832,2.368,833,3.72,834,2.368,835,1.325,836,2.061,837,1.4,838,3.72,839,2.368,840,1.859,841,2.368,842,2.368,843,2.368,844,2.368,845,2.368,846,2.368,847,2.368,848,2.368,849,1.587,850,2.368,851,3.72,852,3.72,853,2.368,854,2.368,855,1.859,856,2.368,857,2.368,858,2.368,859,2.368,860,2.368,861,2.368,862,2.368,863,2.368,864,2.368,865,2.368,866,2.368,867,2.368,868,2.368,869,2.919,870,3.72]],["title/components/ElementComponent.html",[98,0.876,166,1.565]],["body/components/ElementComponent.html",[1,1.756,3,0.135,4,0.135,5,0.12,7,0.062,10,0.702,11,0.09,12,0.014,13,0.135,14,0.009,15,0.009,21,1.514,31,0.789,34,0.754,42,0.276,43,0.584,44,1.574,56,0.15,93,0.882,94,0.763,98,1.371,99,1.574,100,2.237,101,1.706,102,1.706,103,1.706,107,1.706,108,2.43,109,2.43,110,2.926,111,3.04,112,1.638,113,2.068,114,1.717,115,2.068,117,2.068,119,3.683,121,1.847,123,4.513,125,4.024,129,2.902,131,2.902,133,1.779,134,3.45,136,2.526,137,2.902,138,2.139,139,2.036,140,1.514,142,1.056,146,2.902,147,1.706,148,2.33,149,1.781,150,1.706,151,2.852,152,1.706,153,1.706,154,1.574,155,2.33,156,1.574,157,2.33,158,1.574,159,1.353,160,1.574,161,1.706,162,1.574,163,1.353,164,1.457,165,1.706,166,2.631,167,1.706,168,1.574,169,1.574,170,1.706,171,1.574,172,1.706,173,2.852,174,1.514,175,1.514,176,1.574,177,1.638,178,1.514,179,2.068,180,1.99,181,1.514,182,1.514,183,1.514,184,1.706,185,1.706,222,2.89,223,2.526,589,2.654,871,3.503,872,5.497,873,5.497,874,4.025,875,4.025,876,4.025,877,4.025,878,4.025,879,4.025,880,4.025,881,4.314]],["title/interfaces/ElementConfig.html",[0,0.314,357,2.366]],["body/interfaces/ElementConfig.html",[0,0.38,2,1.512,3,0.162,4,0.162,5,0.144,7,0.074,8,0.516,11,0.154,12,0.014,13,0.208,14,0.01,15,0.01,42,0.282,50,1.821,59,0.951,72,1.312,250,3.469,280,3.243,357,3.672,507,3.49,589,3.404,882,3.799,883,3.799,884,5.914,885,6.988,886,5.217,887,3.799,888,4.84,889,4.84,890,3.49,891,4.212,892,3.799,893,3.799,894,4.212,895,4.212,896,4.212,897,3.799,898,4.212,899,5.872,900,4.212,901,3.799,902,4.212,903,4.212,904,3.799,905,4.212,906,4.212,907,3.799,908,4.212,909,4.212,910,3.799,911,4.212,912,4.212]],["title/injectables/ElementDrawPoolService.html",[16,0.449,247,2.885]],["body/injectables/ElementDrawPoolService.html",[3,0.122,4,0.122,5,0.108,7,0.056,8,0.426,11,0.158,12,0.014,13,0.122,14,0.008,15,0.008,16,0.575,18,1.059,23,1.229,25,4.85,26,0.869,28,0.665,31,0.894,33,0.931,34,0.636,35,0.931,37,0.931,38,0.825,41,1.808,42,0.297,43,0.528,46,1.854,48,1.934,49,2.869,51,0.797,54,1.022,55,0.986,56,0.136,57,2.037,59,1.167,61,2.857,65,4.279,67,3.697,70,2.037,71,3.11,77,2.153,93,1.487,94,1.287,114,1.137,121,1.723,125,3.423,141,1.179,142,1.011,163,2.587,188,2.087,190,2.285,222,3.252,223,2.285,247,3.697,250,2.594,274,2.44,276,2.037,291,2.44,312,1.318,355,2.622,356,2.625,490,4.317,509,2.44,744,3.435,913,6.7,914,3.168,915,5.935,916,3.697,917,3.697,918,5.935,919,4.279,920,3.641,921,5.127,922,5.127,923,3.641,924,5.127,925,3.641,926,2.625,927,3.435,928,3.697,929,3.641,930,2.625,931,3.641,932,3.641,933,5.127,934,3.641,935,3.641,936,3.641,937,2.857,938,3.641,939,2.857,940,3.641,941,3.641,942,3.641,943,3.641,944,6.442,945,3.641,946,3.641,947,3.641,948,3.641,949,3.641,950,3.641,951,3.641]],["title/interfaces/ElementPiece.html",[0,0.314,222,1.847]],["body/interfaces/ElementPiece.html",[0,0.463,2,1.841,3,0.197,4,0.197,5,0.175,7,0.09,8,0.583,11,0.132,12,0.014,13,0.197,14,0.012,15,0.012,42,0.288,122,3.922,141,1.909,187,2.54,188,3.048,190,3.698,222,3.238,589,3.287,886,5.59,952,5.128,953,5.892]],["title/components/ElementSpaceComponent.html",[98,0.876,168,1.565]],["body/components/ElementSpaceComponent.html",[1,1.761,3,0.135,4,0.135,5,0.12,7,0.062,10,0.454,11,0.091,12,0.014,13,0.135,14,0.009,15,0.009,21,1.522,31,0.647,34,0.591,42,0.29,43,0.587,44,1.582,56,0.151,93,0.886,94,0.767,98,1.374,99,1.582,100,2.245,101,1.715,102,1.715,103,1.715,104,3.939,107,1.715,108,2.438,109,2.438,110,2.928,111,3.042,112,1.646,113,2.075,114,1.723,115,2.075,117,2.075,119,3.696,121,1.853,123,4.525,131,2.917,133,1.788,134,3.462,136,2.539,137,2.917,138,2.149,139,2.046,140,2.075,141,2.183,142,0.635,146,2.917,147,1.715,148,2.338,149,1.884,150,1.715,151,2.857,152,1.715,153,1.715,154,1.582,155,2.338,156,1.582,157,2.338,158,1.582,159,1.359,160,1.582,161,1.715,162,1.582,163,1.359,164,1.465,165,1.715,166,2.636,167,1.715,168,2.636,169,1.582,170,1.715,171,1.582,172,1.715,173,2.857,174,1.522,175,1.522,176,1.582,177,1.646,178,1.522,179,2.075,180,1.997,181,1.522,182,1.522,183,1.522,184,1.715,185,1.715,194,3.175,195,2.438,196,4.8,197,4.8,198,3.52,199,2.917,219,4.525,222,2.897,223,2.539,376,2.711,840,4.925,954,4.045]],["title/components/EyeballComponent.html",[98,0.876,169,1.565]],["body/components/EyeballComponent.html",[1,1.853,3,0.15,4,0.15,5,0.133,7,0.068,10,0.502,12,0.014,13,0.15,14,0.01,15,0.01,21,1.684,31,0.525,34,0.632,42,0.271,43,0.649,44,1.751,56,0.167,98,1.446,99,1.751,100,2.402,101,1.897,102,1.897,103,1.897,104,3.705,107,1.897,108,2.609,109,2.609,110,2.964,111,3.079,112,1.822,113,2.22,114,1.844,115,2.22,117,2.22,121,1.983,123,4.762,131,3.227,133,1.979,136,2.809,137,3.227,138,2.378,139,2.264,140,1.684,142,0.702,146,3.227,147,1.897,148,2.502,149,1.553,150,1.897,151,2.977,152,1.897,153,1.897,154,1.751,155,2.502,156,1.751,157,2.502,158,1.751,159,1.504,160,1.751,161,1.897,162,1.751,163,1.504,164,1.621,165,1.897,166,1.751,167,1.897,168,1.751,169,2.746,170,1.897,171,1.751,172,1.897,173,2.977,174,1.684,175,1.684,176,1.751,177,1.822,178,1.684,179,2.22,180,2.137,181,1.684,182,1.684,183,1.684,184,1.897,185,1.897,955,3.895,956,5.748,957,5.902,958,5.902,959,4.476]],["title/classes/Faction.html",[56,0.149,334,1.505]],["body/classes/Faction.html",[0,0.323,3,0.137,4,0.137,5,0.122,7,0.063,8,0.463,10,0.761,11,0.167,12,0.014,13,0.186,14,0.009,15,0.009,26,0.944,31,0.924,33,1.064,34,0.815,35,1.064,37,1.113,38,0.974,41,1.152,42,0.169,46,1.283,56,0.153,90,2.077,121,1.872,129,2.961,142,0.993,187,2.29,250,3.982,334,2.096,362,1.815,503,1.671,566,3.364,569,3.885,570,3.734,571,2.279,572,3.295,574,3.734,575,4.238,581,3.36,582,3.767,583,3.223,584,3.223,585,3.223,591,2.298,594,2.182,595,3.223,597,2.362,598,1.237,960,3.223,961,5.572,962,5.572,963,5.572,964,4.89,965,5.903,966,4.849,967,4.106,968,6.363,969,4.849,970,4.106,971,4.849,972,4.106,973,3.574,974,2.961,975,2.298,976,2.752,977,2.752,978,2.961,979,2.961,980,2.182,981,1.983,982,4.106,983,4.106,984,4.106,985,4.106,986,4.106,987,2.077,988,3.574,989,3.574,990,5.903,991,4.238]],["title/interfaces/FactionAssignment.html",[0,0.314,849,2.681]],["body/interfaces/FactionAssignment.html",[0,0.394,2,1.565,3,0.167,4,0.167,5,0.149,7,0.077,8,0.528,9,2.362,10,0.867,11,0.142,12,0.014,13,0.212,14,0.011,15,0.011,16,0.712,23,0.996,38,0.641,41,1.781,42,0.311,43,0.726,46,1.983,51,1.097,54,1.405,55,1.357,56,0.186,59,0.985,149,1.178,187,1.814,276,2.803,334,2.622,489,3.144,508,3.144,548,3.612,598,1.509,616,3.612,630,1.884,631,3.144,632,3.754,643,3.356,652,2.534,653,3.144,849,5.066,855,3.931,964,5.452,987,2.534,992,3.356,993,4.254,994,4.359,995,4.359,996,4.359,997,4.359,998,4.359,999,4.359,1000,4.359,1001,4.359,1002,4.359]],["title/injectables/FactionRegistryService.html",[16,0.449,489,2.511]],["body/injectables/FactionRegistryService.html",[0,0.306,3,0.13,4,0.13,5,0.116,7,0.059,8,0.446,9,1.921,10,0.744,11,0.168,12,0.014,13,0.18,14,0.009,15,0.009,16,0.602,18,1.131,23,1.234,26,0.91,28,0.711,31,0.906,33,0.965,34,0.659,35,0.965,37,0.843,38,0.688,41,1.86,42,0.286,43,0.564,46,1.921,50,2.02,51,0.852,54,1.092,55,1.054,56,0.145,59,1.368,93,1.615,94,1.397,149,0.915,187,1.944,212,1.796,276,2.177,334,2.617,489,3.37,498,2.607,503,2.503,508,4.367,548,2.805,582,3.822,598,1.172,616,2.805,630,2.617,631,2.442,632,4.509,633,3.005,634,3.872,635,3.71,636,2.853,641,3.053,642,2.177,643,3.598,645,3.053,646,2.805,647,3.053,648,3.053,649,2.805,650,3.053,652,1.968,653,2.442,849,5.109,855,3.053,964,3.872,987,1.968,992,2.607,993,4.443,994,5.351,995,4.673,996,4.673,997,4.673,998,3.386,999,3.386,1000,3.386,1001,3.386,1002,3.386,1003,3.89,1004,3.89,1005,3.89,1006,3.89,1007,3.89,1008,3.89]],["title/interfaces/FactionState.html",[0,0.314,987,2.024]],["body/interfaces/FactionState.html",[0,0.403,2,1.601,3,0.171,4,0.171,5,0.152,7,0.078,8,0.535,10,0.895,11,0.158,12,0.014,13,0.215,14,0.011,15,0.011,34,0.815,38,0.902,42,0.21,56,0.191,142,1.105,187,2.55,250,3.99,334,1.928,362,2.266,566,2.847,597,2.986,598,1.544,960,4.022,964,5.489,965,6.625,966,4.46,968,6.129,969,4.46,971,4.46,987,3.258,988,4.46,989,4.46,990,6.43,991,4.719]],["title/injectables/FactionStateService.html",[16,0.449,993,2.681]],["body/injectables/FactionStateService.html",[3,0.144,4,0.144,5,0.128,7,0.066,8,0.479,9,1.349,10,0.647,11,0.166,12,0.014,13,0.144,14,0.01,15,0.01,16,0.647,18,1.255,23,1.208,26,0.977,31,0.903,33,1.086,34,0.741,35,1.086,37,1.132,38,0.886,42,0.266,43,0.626,50,2.168,54,1.211,55,1.169,56,0.161,59,1.133,71,3.132,93,1.262,94,1.092,121,1.936,142,0.678,149,1.015,187,2.087,334,2.713,503,2.346,508,3.617,569,4.025,571,1.451,582,4.025,598,1.301,630,2.168,633,3.225,635,3.225,636,3.062,642,3.63,652,2.184,656,2.71,657,4.655,658,4.155,659,4.155,660,4.155,661,4.677,663,3.388,664,4.155,665,3.388,666,3.113,667,3.388,668,3.388,669,3.113,670,3.388,671,3.113,672,3.388,673,3.388,674,3.113,675,3.388,987,3.502,992,2.893,993,3.862,1009,5.763,1010,4.317,1011,4.317,1012,4.317]],["title/classes/GameElement.html",[56,0.149,566,1.769]],["body/classes/GameElement.html",[0,0.329,3,0.14,4,0.14,5,0.124,7,0.064,8,0.47,9,2.23,10,0.634,11,0.16,12,0.014,13,0.189,14,0.009,15,0.009,26,0.958,28,0.766,31,0.897,33,0.887,34,0.605,35,0.887,37,0.887,38,0.818,41,1.793,42,0.232,46,1.996,51,0.918,56,0.156,59,1.111,90,2.12,121,1.898,142,0.887,312,1.518,345,3.647,503,2.299,566,2.498,569,4.115,570,4.282,571,2.674,572,3.779,574,3.786,575,4.583,581,4.16,591,3.161,594,3.395,597,1.777,614,2.631,617,3.022,618,3.022,620,2.631,974,4.073,975,3.161,976,3.786,977,3.786,978,4.073,979,4.073,980,3.002,981,2.728,1013,4.862,1014,3.289,1015,3.786,1016,5.649,1017,4.191,1018,4.191,1019,4.191,1020,4.191,1021,4.191,1022,3.647,1023,4.191,1024,2.808,1025,2.345,1026,2.345,1027,2.345,1028,4.917,1029,3.022,1030,3.647,1031,3.022,1032,3.022,1033,3.647,1034,3.647,1035,2.631,1036,3.647,1037,3.647,1038,3.289]],["title/injectables/GameElementRegistryService.html",[16,0.449,632,2.366]],["body/injectables/GameElementRegistryService.html",[3,0.135,4,0.135,5,0.12,7,0.062,8,0.458,9,1.959,10,0.703,11,0.163,12,0.014,13,0.135,14,0.009,15,0.009,16,0.618,18,1.174,23,1.206,26,0.934,28,0.738,31,0.874,33,0.984,34,0.672,35,0.984,37,0.865,38,0.706,41,1.759,42,0.29,43,0.586,46,1.262,50,2.534,51,0.884,54,1.133,55,1.094,56,0.15,59,1.464,93,1.475,94,1.277,138,2.146,142,0.634,149,1.828,187,1.462,212,1.864,312,1.462,362,1.785,498,3.692,503,2.961,566,1.785,597,1.712,598,1.217,630,2.851,631,2.535,632,3.258,633,3.509,634,4.521,635,4.071,636,2.927,642,3.945,643,3.692,646,3.972,649,3.972,652,2.043,653,2.535,657,3.258,720,2.912,980,2.146,1039,5.949,1040,4.038,1041,6.735,1042,5.509,1043,5.509,1044,4.038,1045,4.038,1046,4.038,1047,4.038,1048,4.038,1049,2.535,1050,3.515,1051,3.515,1052,4.038,1053,3.515,1054,3.515,1055,3.515,1056,4.038,1057,3.515,1058,3.17,1059,4.038,1060,4.038]],["title/interfaces/GameElementState.html",[0,0.314,597,1.696]],["body/interfaces/GameElementState.html",[0,0.389,2,1.546,3,0.165,4,0.165,5,0.147,7,0.076,8,0.524,9,2.405,10,0.818,11,0.111,12,0.014,13,0.211,14,0.01,15,0.01,38,0.634,41,1.767,42,0.259,46,1.968,51,1.084,56,0.184,59,1.238,142,0.989,312,1.792,503,2.014,566,2.187,569,3.682,570,3.315,571,2.531,572,2.926,575,3.315,581,4.002,591,2.769,594,3.347,597,2.67,614,3.106,617,3.568,618,3.568,620,3.106,974,3.568,975,2.769,976,3.315,977,3.315,978,3.568,979,3.568,980,2.629,981,2.389,1013,3.106,1014,3.883,1015,3.315,1024,3.315,1025,2.769,1026,2.769,1027,2.769,1028,5.482,1029,3.568,1030,4.306,1031,3.568,1032,3.568,1033,4.306,1034,4.306,1035,3.106,1036,4.306,1037,4.306,1038,3.883]],["title/injectables/GameElementStateService.html",[16,0.449,657,2.366]],["body/injectables/GameElementStateService.html",[3,0.12,4,0.12,5,0.107,7,0.055,8,0.423,9,1.842,10,0.661,11,0.162,12,0.014,13,0.12,14,0.008,15,0.008,16,0.57,18,1.046,23,1.217,26,0.862,28,0.657,31,0.879,33,1.061,34,0.724,35,1.061,37,1.061,38,0.943,41,1.427,42,0.278,43,0.522,50,2.411,51,0.788,54,1.01,55,0.974,56,0.134,59,1.329,70,2.013,71,3.094,72,0.76,93,1.114,94,0.964,121,1.708,138,1.911,142,0.565,149,1.838,312,1.303,362,1.59,503,2.608,566,1.59,569,3.832,571,1.209,597,2.717,598,1.084,630,2.857,633,3.299,635,3.299,636,2.701,642,4.192,652,1.82,653,2.258,656,2.258,657,3.006,658,3.666,659,3.666,660,3.666,661,4.251,664,3.666,666,3.666,669,3.666,671,2.594,674,2.594,720,2.594,821,3.131,822,4.294,825,4.425,837,2.127,980,1.911,1039,5.961,1049,2.258,1050,6.412,1051,3.131,1053,3.131,1054,3.131,1055,3.131,1057,3.131,1058,2.824,1061,5.084,1062,3.598,1063,3.598,1064,3.598,1065,5.084,1066,3.598,1067,3.598,1068,3.598,1069,3.598,1070,3.598,1071,3.598,1072,3.598,1073,3.598,1074,3.598,1075,3.598,1076,3.598,1077,3.598,1078,3.598,1079,3.598,1080,3.598]],["title/injectables/GameManagementClientService.html",[16,0.449,1081,2.681]],["body/injectables/GameManagementClientService.html",[3,0.12,4,0.12,5,0.107,7,0.055,10,0.84,11,0.157,12,0.014,13,0.12,14,0.008,15,0.008,16,0.57,18,1.045,23,0.797,26,0.861,28,0.928,31,0.864,33,1.101,34,0.751,35,1.101,37,1.132,42,0.288,43,0.521,51,0.787,54,1.008,55,0.973,56,0.134,72,1.073,114,1.122,142,1.005,598,2.114,630,2.818,679,3.831,685,4.801,701,3.119,702,4.654,737,4.526,755,2.59,781,3.403,1081,3.403,1082,6.518,1083,5.019,1084,3.986,1085,3.986,1086,4.42,1087,5.573,1088,5.573,1089,5.079,1090,5.079,1091,3.592,1092,6.404,1093,3.592,1094,5.079,1095,3.986,1096,3.592,1097,2.819,1098,5.079,1099,3.592,1100,4.42,1101,3.592,1102,3.592,1103,3.592,1104,5.079,1105,3.592,1106,5.079,1107,5.303,1108,3.592,1109,3.592,1110,2.819,1111,5.079,1112,2.819,1113,5.892,1114,4.42,1115,2.819,1116,3.592,1117,3.592,1118,5.079,1119,3.126,1120,3.592,1121,3.592,1122,3.592,1123,3.592,1124,3.592,1125,3.592,1126,3.592,1127,3.592,1128,3.592,1129,3.592]],["title/injectables/GameService.html",[16,0.449,1130,2.885]],["body/injectables/GameService.html",[3,0.153,4,0.153,5,0.136,7,0.07,9,1.43,10,0.846,11,0.15,12,0.014,13,0.153,14,0.01,15,0.01,16,0.672,18,1.331,23,0.94,26,1.015,28,1.094,31,0.831,33,1.048,34,0.715,35,1.048,37,1.048,42,0.302,43,0.664,54,1.284,55,1.239,56,0.17,72,0.967,142,0.718,598,2.012,630,2.765,679,4.007,685,4.661,702,4.46,712,3.067,737,4.191,781,3.067,1081,5.149,1083,3.067,1084,4.701,1085,4.701,1087,6.164,1095,4.701,1097,5.559,1110,3.592,1112,3.592,1119,5.212,1130,4.319,1131,3.983,1132,3.592,1133,4.576,1134,4.576,1135,5.989,1136,4.576,1137,5.989,1138,4.576,1139,5.989,1140,3.983,1141,4.576,1142,3.983,1143,3.983,1144,4.576,1145,4.576,1146,4.576]],["title/interfaces/GameState.html",[0,0.314,981,1.931]],["body/interfaces/GameState.html",[0,0.42,2,1.671,3,0.179,4,0.179,5,0.159,7,0.082,8,0.55,11,0.161,12,0.014,13,0.221,14,0.011,15,0.011,42,0.295,72,1.13,237,3.138,334,2.9,355,3.138,592,3.986,655,2.993,981,3.722,987,3.795,1013,3.358,1147,4.198,1148,5.757,1149,4.432,1150,6.615,1151,4.432,1152,3.795,1153,5.349,1154,5.349,1155,5.349,1156,3.857]],["title/injectables/GameStateClientService.html",[16,0.449,1157,2.885]],["body/injectables/GameStateClientService.html",[3,0.181,4,0.181,5,0.161,7,0.083,11,0.121,12,0.014,13,0.181,14,0.011,15,0.011,16,0.747,18,1.573,26,1.129,31,0.782,33,0.849,34,0.579,35,0.849,37,0.849,38,0.853,41,1.869,42,0.296,43,0.784,51,1.185,54,1.518,55,1.465,56,0.201,121,2.238,142,0.849,571,2.531,630,2.715,755,3.9,837,4.267,975,4.214,1049,3.395,1157,4.802,1158,6.66,1159,6.66,1160,4.727,1161,5.409,1162,5.409,1163,5.409,1164,4.245,1165,5.409,1166,5.409]],["title/interfaces/GameStatePatch.html",[0,0.314,1160,2.511]],["body/interfaces/GameStatePatch.html",[0,0.464,2,1.845,3,0.197,4,0.197,5,0.175,7,0.09,8,0.584,11,0.157,12,0.014,13,0.197,14,0.012,15,0.012,42,0.243,250,3.793,571,1.985,1013,3.707,1025,3.305,1026,3.305,1027,4.434,1160,4.409,1167,5.14,1168,6.752,1169,7.759]],["title/injectables/GameStatePatchService.html",[16,0.449,1170,2.885]],["body/injectables/GameStatePatchService.html",[3,0.162,4,0.162,5,0.144,7,0.074,11,0.139,12,0.014,13,0.162,14,0.01,15,0.01,16,0.699,18,1.413,26,1.055,31,0.731,33,0.977,34,0.667,35,0.977,37,0.977,42,0.298,43,0.705,54,1.363,55,1.316,56,0.181,125,2.582,142,0.977,571,2.435,594,3.85,630,2.585,655,2.719,753,4.229,837,4.063,975,3.845,981,3.946,1025,2.719,1026,2.719,1027,3.484,1049,3.908,1160,4.811,1164,3.814,1168,4.229,1170,4.489,1171,4.229,1172,5.419,1173,6.226,1174,6.226,1175,6.226,1176,6.226,1177,6.226,1178,4.859,1179,6.226,1180,4.859,1181,4.859,1182,4.229,1183,4.859,1184,4.859,1185,4.859,1186,4.859,1187,4.859,1188,4.859]],["title/injectables/GameStateService.html",[16,0.449,822,2.681]],["body/injectables/GameStateService.html",[0,0.341,3,0.097,4,0.097,5,0.086,7,0.044,11,0.155,12,0.014,13,0.097,14,0.007,15,0.007,16,0.486,18,0.84,23,1.02,26,0.735,28,0.792,31,0.897,33,1.088,34,0.743,35,1.088,37,1.151,38,1.017,41,1.621,42,0.291,43,0.419,48,1.535,51,0.633,54,0.811,55,0.783,56,0.108,59,0.852,72,0.916,121,1.456,142,0.816,237,2.117,312,2.092,316,3.402,321,1.535,334,1.956,355,2.117,571,2.33,592,3.581,594,3.453,598,1.567,630,2.898,651,2.084,655,1.617,656,1.814,712,1.937,805,3.125,822,3.872,837,4.555,975,3.233,981,2.093,987,3.41,992,1.937,1049,1.814,1151,3.872,1152,3.41,1157,4.166,1160,3.627,1164,2.268,1170,4.166,1189,3.772,1190,4.334,1191,4.334,1192,4.334,1193,4.334,1194,3.772,1195,4.334,1196,4.334,1197,4.334,1198,5.029,1199,3.772,1200,3.772,1201,3.772,1202,5.778,1203,5.029,1204,3.772,1205,3.772,1206,3.772,1207,5.029,1208,2.89,1209,5.201,1210,5.201,1211,2.89,1212,4.334,1213,4.334,1214,2.89,1215,2.89,1216,3.772,1217,2.89,1218,3.772,1219,2.89,1220,3.772,1221,2.89,1222,2.89,1223,5.388,1224,4.526,1225,4.334,1226,4.334,1227,4.334,1228,2.89,1229,3.772,1230,2.89,1231,3.772,1232,2.89,1233,3.772,1234,2.89,1235,2.89,1236,2.515,1237,2.89,1238,2.515,1239,2.89,1240,2.515,1241,2.89,1242,2.89,1243,2.89,1244,2.084,1245,2.89,1246,2.89,1247,2.89,1248,2.89,1249,2.89,1250,2.89,1251,2.89,1252,5.201,1253,2.515,1254,2.89,1255,2.89,1256,2.89,1257,2.89,1258,2.89,1259,2.89,1260,2.515,1261,2.89,1262,2.89,1263,2.89,1264,2.89,1265,2.89,1266,2.89,1267,2.89,1268,2.89,1269,2.89]],["title/injectables/GameStateStoreService.html",[16,0.449,1151,2.681]],["body/injectables/GameStateStoreService.html",[3,0.054,4,0.054,5,0.048,7,0.071,8,0.227,11,0.15,12,0.014,13,0.054,14,0.005,15,0.005,16,0.306,18,0.47,23,1.143,26,0.703,28,0.645,31,0.855,33,0.998,34,0.665,35,0.974,37,1.037,38,0.945,41,1.693,42,0.23,43,0.235,46,1.104,50,0.608,51,0.354,54,0.454,55,0.438,56,0.06,59,1.356,72,0.876,89,0.859,93,0.597,94,0.786,110,0.586,121,0.916,141,1.817,142,0.88,149,0.975,212,0.747,237,1.438,291,1.827,312,2.031,316,1.269,321,1.448,334,1.329,355,2.174,362,0.715,382,1.966,503,1.438,516,2.372,571,2.572,581,1.448,589,1.758,592,2.837,594,3.567,597,2.264,600,5.532,601,2.452,624,1.711,630,2.759,636,3.102,651,1.166,655,1.977,713,2.372,837,4.336,869,2.139,899,2.139,927,2.779,975,1.525,976,1.827,977,1.827,980,2.203,981,3.871,987,2.702,992,1.084,1024,1.084,1025,0.905,1026,0.905,1027,0.905,1035,2.603,1038,2.139,1049,1.711,1058,3.255,1083,1.827,1149,4.349,1151,3.759,1152,2.702,1156,1.166,1172,2.372,1182,1.408,1189,2.372,1194,2.372,1198,4.368,1199,2.372,1200,2.372,1201,2.372,1203,4.368,1204,2.372,1205,2.372,1206,3.609,1207,4.368,1216,2.372,1218,2.372,1220,2.372,1223,5.532,1224,3.609,1229,2.372,1231,2.372,1233,2.372,1236,1.408,1238,1.408,1240,1.408,1244,1.166,1253,1.408,1260,3.609,1270,1.408,1271,2.726,1272,2.726,1273,2.726,1274,2.726,1275,2.372,1276,2.726,1277,1.966,1278,2.726,1279,2.726,1280,2.726,1281,5.609,1282,2.726,1283,4.147,1284,2.726,1285,2.726,1286,2.726,1287,2.726,1288,4.147,1289,5.019,1290,2.726,1291,2.726,1292,2.726,1293,4.148,1294,2.726,1295,6.489,1296,2.726,1297,2.726,1298,3.338,1299,2.372,1300,2.726,1301,5.609,1302,4.147,1303,2.726,1304,2.726,1305,2.726,1306,2.726,1307,4.147,1308,2.779,1309,3.609,1310,3.363,1311,2.726,1312,2.726,1313,2.372,1314,2.726,1315,3.075,1316,2.726,1317,4.147,1318,2.726,1319,4.147,1320,2.098,1321,2.726,1322,2.372,1323,3.533,1324,3.533,1325,3.533,1326,2.726,1327,2.726,1328,3.533,1329,3.533,1330,3.533,1331,2.726,1332,2.726,1333,1.617,1334,1.617,1335,2.726,1336,1.617,1337,1.617,1338,1.617,1339,1.617,1340,1.617,1341,6.206,1342,1.617,1343,2.726,1344,2.726,1345,4.147,1346,1.617,1347,1.617,1348,1.617,1349,2.726,1350,1.617,1351,1.617,1352,1.617,1353,1.617,1354,4.63,1355,2.726,1356,2.726,1357,1.617,1358,2.726,1359,1.617,1360,1.617,1361,1.617,1362,1.617,1363,1.617,1364,1.617,1365,1.617,1366,1.617,1367,1.617,1368,1.617,1369,1.617,1370,1.617,1371,1.617,1372,1.617,1373,2.726,1374,5.838,1375,1.617,1376,1.617,1377,2.726,1378,1.617,1379,2.726,1380,2.726,1381,2.726,1382,2.726,1383,1.617,1384,2.726,1385,2.726,1386,1.617,1387,1.617,1388,1.617,1389,1.617,1390,2.726,1391,1.617,1392,1.617,1393,1.617,1394,1.617,1395,1.617,1396,1.617,1397,1.617,1398,1.408,1399,1.617,1400,1.617,1401,1.617,1402,1.617,1403,3.533,1404,1.617,1405,1.617,1406,1.617,1407,1.617,1408,1.617,1409,1.617,1410,1.617,1411,1.617,1412,1.617]],["title/components/LobbyPageComponent.html",[98,0.876,171,1.565]],["body/components/LobbyPageComponent.html",[1,1.411,3,0.091,4,0.091,5,0.081,7,0.077,8,0.346,9,1.299,10,0.799,11,0.135,12,0.014,13,0.091,14,0.007,15,0.007,21,1.029,23,0.652,26,0.705,28,0.759,31,0.819,33,0.882,34,0.682,35,0.882,37,0.948,38,0.644,42,0.292,43,0.396,44,1.07,56,0.102,93,1.101,94,0.953,98,1.101,99,1.07,100,1.692,101,1.159,102,1.159,103,1.159,107,1.159,110,2.763,111,2.87,112,1.113,113,1.564,114,1.299,115,1.564,117,1.564,140,1.564,142,0.429,147,1.159,148,1.762,149,1.183,150,1.159,151,2.382,152,1.159,153,1.159,154,1.07,155,1.762,156,1.07,157,1.762,158,1.07,159,0.919,160,1.07,161,1.159,162,1.07,163,0.919,164,0.99,165,1.159,166,1.07,167,1.159,168,1.07,169,1.07,170,1.159,171,2.198,172,2.804,173,2.382,174,1.029,175,1.892,176,1.07,177,1.113,178,1.029,179,1.564,180,1.505,181,1.029,182,1.029,183,1.892,184,1.159,185,1.159,216,2.672,233,2.997,331,2.223,416,4.152,442,2.146,598,1.918,685,4.129,702,3.763,737,3.526,781,2.786,810,2.814,811,4.377,835,1.53,836,2.38,1084,3.263,1085,4.41,1095,3.263,1097,4.743,1107,4.995,1112,2.146,1115,2.146,1130,4.589,1142,4.89,1143,4.89,1313,3.618,1413,6.197,1414,6.197,1415,1.453,1416,5.029,1417,5.029,1418,5.029,1419,5.029,1420,5.029,1421,5.029,1422,5.029,1423,5.029,1424,5.029,1425,5.029,1426,5.029,1427,5.029,1428,5.029,1429,5.029,1430,2.326,1431,2.326,1432,4.377,1433,4.377,1434,5.029,1435,5.618,1436,4.157,1437,4.157,1438,2.734,1439,4.157,1440,2.734,1441,2.734,1442,2.734,1443,5.618,1444,2.734,1445,4.157,1446,2.734,1447,4.157,1448,2.734,1449,2.734,1450,4.157,1451,2.734,1452,2.734,1453,2.734,1454,2.734,1455,2.734,1456,2.734,1457,5.029,1458,2.734,1459,2.734,1460,6.043,1461,2.734,1462,2.734,1463,2.734,1464,2.734,1465,2.734,1466,2.734,1467,2.734,1468,2.734,1469,2.734,1470,4.157,1471,4.157,1472,4.157,1473,4.157,1474,4.157]],["title/injectables/LocalStorageService.html",[16,0.449,691,2.885]],["body/injectables/LocalStorageService.html",[3,0.171,4,0.171,5,0.152,7,0.078,10,0.926,11,0.158,12,0.014,13,0.171,14,0.011,15,0.011,16,0.722,18,1.487,26,1.09,31,0.826,33,1.104,34,0.754,35,1.104,37,1.104,38,0.945,42,0.21,43,0.741,54,1.435,55,1.385,56,0.19,94,1.399,141,2.083,142,0.803,691,4.637,1293,4.416,1475,6.425,1476,4.45,1477,6.432,1478,6.432,1479,6.432,1480,6.432,1481,5.114,1482,6.432,1483,5.114,1484,6.432,1485,5.114,1486,5.114,1487,5.114,1488,5.114]],["title/interfaces/LoginFormData.html",[0,0.314,1489,2.885]],["body/interfaces/LoginFormData.html",[0,0.361,2,1.435,3,0.154,4,0.154,5,0.136,7,0.07,8,0.499,10,0.847,11,0.134,12,0.014,13,0.154,14,0.01,15,0.01,23,1.05,28,0.839,38,0.857,42,0.31,43,0.666,56,0.171,72,0.971,98,1.315,108,2.031,109,2.031,110,1.663,111,1.728,113,1.728,114,1.435,115,1.728,117,1.728,133,2.031,140,1.728,174,1.728,175,2.516,183,1.728,208,3.36,216,3.19,218,2.57,561,2.441,679,3.554,699,4.464,701,3.485,810,3.36,835,2.57,1320,2.324,1415,2.441,1430,2.57,1431,2.57,1489,4.823,1490,3.605,1491,3.605,1492,4.198,1493,3.769,1494,3.769,1495,2.883,1496,2.716,1497,3.955,1498,5.225,1499,3.605,1500,3.769,1501,3.998,1502,2.716,1503,3.998,1504,2.883,1505,3.769,1506,2.883,1507,3.998,1508,3.998,1509,3.998,1510,3.312,1511,2.883,1512,3.998,1513,3.998,1514,2.883,1515,2.883,1516,2.883,1517,2.883]],["title/components/LoginPageComponent.html",[98,0.876,174,1.505]],["body/components/LoginPageComponent.html",[0,0.266,1,1.599,3,0.113,4,0.113,5,0.1,7,0.052,8,0.405,10,0.546,11,0.109,12,0.014,13,0.113,14,0.008,15,0.008,21,1.273,23,0.894,26,0.825,28,0.889,31,0.731,33,0.531,34,0.61,35,0.531,37,0.531,38,0.798,42,0.282,43,0.491,44,1.323,56,0.126,72,0.715,93,0.741,94,0.641,98,1.248,99,1.323,100,1.981,101,1.434,102,1.434,103,1.434,107,1.434,108,2.151,109,2.151,110,2.858,111,2.97,112,1.377,113,1.831,114,1.52,115,1.831,117,1.831,133,1.496,140,1.831,147,1.434,148,2.063,149,1.34,150,1.434,151,2.642,152,1.434,153,1.434,154,1.323,155,2.063,156,1.323,157,2.063,158,1.323,159,1.137,160,1.323,161,1.434,162,1.323,163,1.137,164,1.225,165,1.434,166,1.323,167,1.434,168,1.323,169,1.323,170,1.434,171,1.323,172,1.434,173,2.642,174,2.345,175,2.778,176,1.323,177,1.377,178,1.273,179,2.345,180,2.257,181,2.144,182,1.273,183,2.144,184,1.434,185,1.434,208,3.189,216,3.028,218,1.893,561,1.797,679,3.764,699,3.904,701,3.048,810,3.189,835,1.893,1320,1.711,1415,1.797,1430,2.723,1431,2.723,1489,3.509,1490,5.182,1491,5.182,1492,4.316,1493,3.577,1494,3.577,1495,2.123,1496,2.001,1497,4.189,1498,4.96,1499,2.655,1500,3.577,1501,4.96,1502,4.189,1503,2.944,1504,2.123,1505,3.054,1506,3.912,1507,2.944,1508,2.944,1509,2.944,1510,2.439,1511,2.123,1512,2.944,1513,2.944,1514,2.123,1515,2.123,1516,2.123,1517,2.123,1518,2.655,1519,3.819,1520,2.944,1521,2.944,1522,4.866]],["title/components/LogoutPageComponent.html",[98,0.876,176,1.565]],["body/components/LogoutPageComponent.html",[1,1.787,3,0.139,4,0.139,5,0.124,7,0.064,11,0.093,12,0.014,13,0.139,14,0.009,15,0.009,21,1.566,23,0.883,26,0.953,28,1.027,31,0.66,33,0.653,34,0.682,35,0.653,37,0.653,38,0.72,42,0.262,43,0.604,44,1.628,56,0.155,98,1.395,99,1.628,100,2.289,101,1.765,102,1.765,103,1.765,107,1.765,110,2.939,111,3.053,112,1.694,113,2.116,114,1.757,115,2.116,117,2.116,140,1.566,147,1.765,148,2.384,149,1.497,150,1.765,151,2.891,152,1.765,153,1.765,154,1.628,155,2.384,156,1.628,157,2.384,158,1.628,159,1.399,160,1.628,161,1.765,162,1.628,163,1.399,164,1.507,165,1.765,166,1.628,167,1.765,168,1.628,169,1.628,170,1.765,171,1.628,172,1.765,173,2.891,174,1.566,175,1.566,176,2.668,177,3.148,178,1.566,179,2.116,180,2.036,181,1.566,182,1.566,183,2.68,184,1.765,185,1.765,205,4.414,206,4.998,213,5.353,561,2.212,679,3.9,1132,3.267,1415,2.212,1430,3.147,1431,3.147,1497,4.438,1499,3.267,1523,5.542,1524,5.542,1525,4.162,1526,4.162,1527,4.162,1528,3.267,1529,5.623]],["title/interfaces/Piece.html",[0,0.314,188,1.628]],["body/interfaces/Piece.html",[0,0.404,2,1.608,3,0.172,4,0.172,5,0.153,7,0.079,8,0.537,10,0.93,11,0.166,12,0.014,13,0.236,14,0.011,15,0.011,34,0.863,42,0.211,89,2.734,122,4.038,141,2.609,142,0.808,188,3.012,434,3.043,589,3.384,1530,3.711,1531,5.146,1532,4.479,1533,3.23,1534,5.146]],["title/classes/Pile.html",[56,0.149,355,1.628]],["body/classes/Pile.html",[0,0.187,3,0.08,4,0.08,5,0.071,7,0.036,8,0.31,10,0.517,11,0.156,12,0.014,13,0.154,14,0.006,15,0.006,23,1.115,26,0.633,28,0.435,31,0.88,33,0.819,34,0.559,35,0.819,37,1.076,38,0.806,41,1.591,42,0.189,46,1.63,51,0.521,56,0.139,57,1.332,59,0.468,72,1.271,89,1.984,90,1.204,93,0.521,94,0.708,121,1.255,122,2.64,141,2.263,142,1.051,145,2.692,163,1.255,164,1.89,187,1.668,188,3.027,250,3.535,311,3.852,331,2.66,341,1.332,355,3.212,362,1.052,434,2.208,503,0.969,566,2.88,569,3.196,570,2.502,571,2.022,572,2.208,574,2.502,575,3.088,581,3.461,582,3.012,583,1.868,584,1.868,585,1.868,589,2.962,591,1.332,594,1.264,595,1.868,597,1.583,598,0.717,601,2.725,624,1.494,655,2.92,916,2.692,917,3.763,919,4.697,926,4.338,927,4.215,928,3.322,930,5.691,937,1.868,973,2.071,974,1.716,975,1.332,976,1.595,977,1.595,978,1.716,979,1.716,980,1.264,981,1.149,991,1.595,1015,2.502,1035,3.276,1149,2.502,1152,2.868,1277,2.692,1293,3.276,1298,2.692,1308,3.799,1310,2.502,1320,1.889,1533,4.575,1535,1.716,1536,4.096,1537,3.616,1538,4.096,1539,3.249,1540,4.45,1541,3.734,1542,3.616,1543,2.93,1544,2.93,1545,2.93,1546,2.93,1547,2.93,1548,2.93,1549,2.93,1550,2.38,1551,2.38,1552,2.38,1553,2.38,1554,3.616,1555,2.38,1556,2.93,1557,3.763,1558,3.763,1559,2.93,1560,2.93,1561,2.93,1562,2.38,1563,2.38,1564,2.93,1565,2.38,1566,2.93,1567,1.595,1568,1.716,1569,1.868,1570,1.868,1571,1.868,1572,1.868,1573,1.868,1574,1.868,1575,2.692,1576,1.868,1577,1.868,1578,1.868,1579,1.868,1580,1.868,1581,1.868,1582,1.868,1583,1.868,1584,1.868,1585,2.93,1586,2.93,1587,1.868,1588,1.868,1589,1.868,1590,1.868,1591,1.868,1592,1.716,1593,2.93,1594,2.93,1595,1.868,1596,2.93,1597,2.93,1598,1.868,1599,1.868,1600,2.93,1601,2.93,1602,1.868,1603,2.93,1604,2.93,1605,2.93,1606,1.868,1607,1.868]],["title/classes/PileAdapter.html",[56,0.149,341,2.239]],["body/classes/PileAdapter.html",[0,0.236,3,0.1,4,0.1,5,0.089,7,0.046,10,0.5,11,0.119,12,0.014,13,0.178,14,0.007,15,0.007,23,0.924,26,0.755,28,0.548,31,0.801,33,0.835,34,0.57,35,0.835,37,0.987,38,0.754,41,1.492,42,0.218,46,1.392,51,0.657,56,0.166,57,1.679,59,0.59,72,1.393,89,1.594,90,1.518,93,0.657,94,0.845,121,1.498,122,2.255,141,2.32,142,1.124,145,3.214,163,1.008,164,1.614,187,1.614,188,2.966,250,3.452,311,4.145,331,1.97,341,2.494,355,3.174,362,1.326,434,2.636,566,1.97,571,1.008,581,3.725,589,2.666,597,1.89,598,0.904,601,1.774,624,1.883,916,2.163,917,3.834,919,5.055,926,4.244,927,4.416,928,3.834,930,5.588,937,3.498,991,2.01,1015,2.01,1035,3.695,1149,2.01,1152,2.69,1277,2.163,1293,2.798,1298,2.163,1308,2.987,1310,2.01,1320,1.518,1533,4.283,1535,2.163,1536,3.498,1537,2.355,1538,2.355,1539,3.879,1540,4.936,1542,2.355,1543,2.355,1544,2.355,1545,2.355,1546,2.355,1547,2.355,1548,2.355,1549,2.355,1554,4.174,1556,2.355,1557,3.214,1558,3.214,1559,2.355,1560,2.355,1561,2.355,1564,2.355,1566,2.355,1567,2.01,1568,2.163,1569,2.355,1570,2.355,1571,2.355,1572,2.355,1573,2.355,1574,2.355,1575,3.214,1576,2.355,1577,2.355,1578,2.355,1579,2.355,1580,2.355,1581,2.355,1582,2.355,1583,2.355,1584,2.355,1585,3.498,1586,3.498,1587,2.355,1588,2.355,1589,2.355,1590,2.355,1591,2.355,1592,2.163,1593,3.498,1594,3.498,1595,2.355,1596,3.498,1597,3.498,1598,2.355,1599,2.355,1600,3.498,1601,3.498,1602,2.355,1603,3.498,1604,3.498,1605,3.498,1606,2.355,1607,2.355,1608,3,1609,3,1610,3,1611,3,1612,3,1613,3,1614,3]],["title/interfaces/PileConfig.html",[0,0.314,1615,3.14]],["body/interfaces/PileConfig.html",[0,0.404,2,1.604,3,0.172,4,0.172,5,0.153,7,0.079,8,0.536,10,0.872,11,0.144,12,0.014,13,0.216,14,0.011,15,0.011,42,0.265,50,1.932,59,1.01,72,1.085,120,3.914,336,4.536,505,3.703,890,3.703,891,4.469,892,4.03,893,4.03,897,4.03,901,4.03,904,4.03,907,4.03,910,4.03,939,4.03,1615,5.061,1616,4.03,1617,4.03,1618,5.135,1619,4.469,1620,4.469,1621,4.469,1622,4.469,1623,4.469,1624,4.469,1625,4.469,1626,4.469,1627,4.469,1628,4.469,1629,4.469,1630,4.469]],["title/injectables/PileRegistryService.html",[16,0.449,490,2.681]],["body/injectables/PileRegistryService.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.497,9,1.424,10,0.67,11,0.169,12,0.014,13,0.152,14,0.01,15,0.01,16,0.67,18,1.326,23,1.182,26,1.013,28,0.833,31,0.901,33,1.046,34,0.714,35,1.046,37,0.938,38,0.584,41,1.279,42,0.29,43,0.661,50,2.248,54,1.279,55,1.235,56,0.17,59,1.31,93,1.549,94,1.341,149,1.072,187,2.163,212,2.105,276,2.551,355,2.432,490,4.004,498,3.055,503,2.712,509,4.004,582,4.003,598,1.374,630,2.248,631,2.862,632,4.658,633,3.343,634,4.308,635,3.957,636,3.174,639,3.968,641,3.578,642,3.729,643,3.055,644,3.968,645,3.578,646,3.287,647,3.578,648,3.578,649,3.287,650,3.578,652,2.307,653,2.862,1152,2.307,1244,3.287,1631,4.559,1632,5.1,1633,5.975,1634,4.559]],["title/interfaces/PileState.html",[0,0.314,1152,2.024]],["body/interfaces/PileState.html",[0,0.248,2,0.984,3,0.105,4,0.105,5,0.094,7,0.048,8,0.384,10,0.676,11,0.103,12,0.014,13,0.183,14,0.008,15,0.008,23,0.946,31,0.37,37,0.725,38,0.701,41,1.536,42,0.225,46,1.444,51,0.69,56,0.172,57,1.763,59,0.62,72,1.418,89,1.674,94,0.597,122,3.247,141,2.389,142,1.139,145,3.332,163,1.059,164,1.673,187,1.982,188,3.001,250,3.247,311,4.204,331,2.043,341,1.763,355,3.158,362,1.393,434,2.733,566,2.043,571,1.059,581,3.41,589,2.721,597,2.32,598,0.95,601,1.864,624,1.978,655,1.763,916,2.272,917,2.272,919,4.346,926,3.946,927,4.301,928,3.332,930,5.632,991,2.112,1015,2.112,1035,3.784,1149,2.112,1152,3.247,1277,2.272,1293,2.901,1298,2.272,1308,3.097,1310,2.112,1320,1.594,1533,4.351,1535,2.272,1536,3.627,1537,2.473,1538,2.473,1540,3.627,1542,2.473,1543,2.473,1544,2.473,1545,2.473,1546,2.473,1547,2.473,1548,2.473,1549,2.473,1554,3.627,1556,2.473,1557,3.332,1558,3.332,1559,2.473,1560,2.473,1561,2.473,1564,2.473,1566,2.473,1567,2.112,1568,2.272,1569,3.627,1570,3.627,1571,3.627,1572,3.627,1573,3.627,1574,3.627,1575,4.628,1576,4.295,1577,2.473,1578,2.473,1579,2.473,1580,2.473,1581,2.473,1582,2.473,1583,2.473,1584,2.473,1585,3.627,1586,3.627,1587,2.473,1588,2.473,1589,2.473,1590,2.473,1591,2.473,1592,2.272,1593,3.627,1594,3.627,1595,2.473,1596,3.627,1597,3.627,1598,2.473,1599,2.473,1600,3.627,1601,3.627,1602,2.473,1603,3.627,1604,3.627,1605,3.627,1606,2.473,1607,2.473]],["title/injectables/PileStateService.html",[16,0.449,1632,2.885]],["body/injectables/PileStateService.html",[3,0.144,4,0.144,5,0.128,7,0.066,8,0.479,9,1.349,10,0.647,11,0.166,12,0.014,13,0.144,14,0.01,15,0.01,16,0.647,18,1.255,23,1.208,26,0.977,31,0.903,33,1.086,34,0.741,35,1.086,37,1.132,38,0.886,42,0.266,43,0.626,50,2.168,54,1.211,55,1.169,56,0.161,59,1.133,71,3.132,93,1.262,94,1.092,121,1.936,142,0.678,149,1.015,187,2.087,355,2.935,503,2.346,509,3.862,569,4.025,571,1.451,582,4.025,598,1.301,630,2.168,633,3.225,635,3.225,636,3.062,642,3.63,652,2.184,656,2.71,657,4.655,658,4.155,659,4.155,660,4.155,661,4.677,663,3.388,664,4.155,665,3.388,666,3.113,667,3.388,668,3.388,669,3.113,670,3.388,671,3.113,672,3.388,673,3.388,674,3.113,675,3.388,1152,3.502,1244,3.113,1632,4.155,1635,5.763,1636,4.317,1637,4.317,1638,4.317]],["title/interfaces/PlayerAuthData.html",[0,0.314,687,2.681]],["body/interfaces/PlayerAuthData.html",[0,0.454,2,1.806,3,0.193,4,0.193,5,0.172,7,0.088,8,0.577,10,0.921,11,0.173,12,0.013,13,0.193,14,0.011,15,0.011,250,3.758,687,4.647,701,3.556,731,6.704,733,6.704,735,6.704,1639,5.031]],["title/injectables/PlayerService.html",[16,0.449,416,2.511]],["body/injectables/PlayerService.html",[3,0.129,4,0.129,5,0.114,7,0.059,8,0.443,10,0.853,11,0.161,12,0.014,13,0.129,14,0.009,15,0.009,16,0.598,18,1.119,23,1.088,26,0.903,28,0.973,31,0.863,33,1.036,34,0.707,35,1.036,37,0.959,42,0.294,43,0.558,46,1.91,51,0.843,54,1.08,55,1.042,56,0.143,59,1.048,72,0.813,93,1.339,94,1.159,125,3.682,142,0.604,283,2.044,312,1.393,416,3.345,598,1.159,630,2.818,679,3.809,681,3.348,685,4.498,701,3.046,702,4.239,712,2.578,720,2.774,737,3.837,781,2.578,805,2.774,1081,4.925,1083,2.578,1086,4.637,1088,3.348,1100,4.637,1107,5.179,1110,3.02,1114,3.348,1115,3.02,1132,3.02,1432,6.239,1592,2.774,1640,3.348,1641,6.113,1642,5.329,1643,5.329,1644,5.329,1645,5.329,1646,3.847,1647,3.847,1648,5.329,1649,3.847,1650,3.847,1651,5.329,1652,5.329,1653,3.847,1654,3.847,1655,3.847,1656,3.847,1657,5.329,1658,5.329,1659,3.847,1660,3.847,1661,3.847,1662,3.847,1663,3.847,1664,5.329,1665,3.847,1666,3.847,1667,5.329]],["title/interfaces/SignUpConfirmFormData.html",[0,0.314,1668,2.885]],["body/interfaces/SignUpConfirmFormData.html",[0,0.354,2,1.406,3,0.15,4,0.15,5,0.134,7,0.069,8,0.492,10,0.842,11,0.133,12,0.014,13,0.15,14,0.01,15,0.01,23,1.039,28,0.822,38,0.848,42,0.308,43,0.653,56,0.168,72,0.951,98,1.297,108,1.99,109,1.99,110,1.63,111,1.693,113,1.693,114,1.406,115,1.693,117,1.693,133,1.99,140,1.693,178,1.693,179,2.491,180,2.718,181,2.751,183,1.693,208,3.315,216,3.147,218,2.518,561,2.391,701,3.465,762,5.413,810,3.315,835,2.518,1320,2.277,1415,2.391,1430,2.518,1431,2.518,1492,4.156,1493,3.718,1494,3.718,1495,2.825,1496,2.661,1497,3.916,1500,3.718,1502,2.661,1504,2.825,1505,3.718,1506,2.825,1511,2.825,1514,2.825,1515,2.825,1516,2.825,1517,2.825,1528,3.532,1668,4.775,1669,3.016,1670,3.016,1671,3.916,1672,3.245,1673,3.245,1674,3.917,1675,3.917,1676,3.917,1677,3.917,1678,3.917,1679,3.917,1680,3.245,1681,3.917]],["title/components/SignUpConfirmPageComponent.html",[98,0.876,178,1.505]],["body/components/SignUpConfirmPageComponent.html",[0,0.255,1,1.563,3,0.109,4,0.109,5,0.096,7,0.05,8,0.393,10,0.53,11,0.106,12,0.014,13,0.109,14,0.008,15,0.008,21,1.222,23,0.874,26,0.801,28,0.863,31,0.718,33,0.51,34,0.596,35,0.51,37,0.51,38,0.783,42,0.278,43,0.471,44,1.27,56,0.121,72,0.686,93,0.711,94,0.616,98,1.22,99,1.27,100,1.923,101,1.377,102,1.377,103,1.377,107,1.377,108,2.089,109,2.089,110,2.841,111,2.952,112,1.322,113,1.777,114,1.476,115,1.777,117,1.777,133,1.436,140,1.777,147,1.377,148,2.003,149,1.309,150,1.377,151,2.592,152,1.377,153,1.377,154,1.27,155,2.003,156,1.27,157,2.003,158,1.27,159,1.091,160,1.27,161,1.377,162,1.27,163,1.091,164,1.176,165,1.377,166,1.27,167,1.377,168,1.27,169,1.27,170,1.377,171,1.27,172,1.377,173,2.592,174,1.222,175,1.222,176,1.27,177,1.322,178,2.3,179,2.794,180,2.906,181,3.02,182,1.222,183,2.095,184,1.377,185,1.377,208,3.116,216,2.959,218,1.817,561,1.726,701,2.999,762,4.685,810,3.116,835,1.817,1320,1.643,1415,1.726,1430,2.644,1431,2.644,1492,4.256,1493,3.495,1494,3.495,1495,2.039,1496,1.921,1497,4.138,1500,3.495,1502,4.138,1504,2.039,1505,2.966,1506,3.838,1511,2.039,1514,2.039,1515,2.039,1516,2.039,1517,2.039,1518,2.549,1519,3.708,1520,2.827,1521,2.827,1528,2.549,1668,3.407,1669,4.354,1670,4.354,1671,4.138,1672,2.342,1673,2.342,1674,4.846,1675,2.827,1676,2.827,1677,2.827,1678,2.827,1679,2.827,1680,2.342,1681,2.827]],["title/interfaces/SignUpFormData.html",[0,0.314,1682,2.885]],["body/interfaces/SignUpFormData.html",[0,0.341,2,1.356,3,0.145,4,0.145,5,0.129,7,0.066,8,0.481,10,0.875,11,0.146,12,0.014,13,0.145,14,0.01,15,0.01,23,1.021,28,0.793,38,0.833,42,0.305,43,0.629,56,0.162,72,0.917,98,1.267,108,1.919,109,1.919,110,1.572,111,1.633,113,1.633,114,1.356,115,1.633,117,1.633,133,1.919,140,1.633,179,2.447,180,2.746,181,1.633,182,1.633,183,1.633,208,3.236,216,3.073,218,2.429,561,2.306,699,4.394,701,3.43,770,5.469,810,3.236,835,2.429,1320,2.196,1415,2.306,1430,2.429,1431,2.429,1492,4.083,1493,3.63,1494,3.63,1495,2.724,1496,2.567,1497,3.846,1500,3.63,1502,2.567,1504,2.724,1505,4.083,1506,2.724,1510,3.13,1511,2.724,1514,2.724,1515,2.724,1516,2.724,1517,2.724,1669,2.908,1670,2.908,1671,3.846,1672,3.13,1673,3.13,1680,3.13,1682,4.69,1683,5.033,1684,3.777,1685,3.777,1686,3.777,1687,3.777,1688,3.777,1689,3.777,1690,3.777,1691,3.777,1692,3.777,1693,3.777]],["title/components/SignUpPageComponent.html",[98,0.876,182,1.505]],["body/components/SignUpPageComponent.html",[0,0.24,1,1.509,3,0.102,4,0.102,5,0.091,7,0.047,8,0.376,10,0.603,11,0.101,12,0.014,13,0.102,14,0.007,15,0.007,21,1.15,23,0.844,26,0.766,28,0.826,31,0.697,33,0.48,34,0.576,35,0.48,37,0.48,38,0.761,42,0.273,43,0.443,44,1.196,56,0.114,72,0.646,93,0.669,94,0.579,98,1.178,99,1.196,100,1.839,101,1.296,102,1.296,103,1.296,107,1.296,108,1.998,109,1.998,110,2.815,111,2.924,112,1.244,113,1.7,114,1.412,115,1.7,117,1.7,133,1.351,140,1.7,147,1.296,148,1.916,149,1.264,150,1.296,151,2.518,152,1.296,153,1.296,154,1.196,155,1.916,156,1.196,157,1.916,158,1.196,159,1.027,160,1.196,161,1.296,162,1.196,163,1.027,164,1.107,165,1.296,166,1.196,167,1.296,168,1.196,169,1.196,170,1.296,171,1.196,172,1.296,173,2.518,174,1.15,175,1.15,176,1.196,177,1.244,178,1.15,179,2.827,180,2.914,181,1.7,182,2.235,183,2.023,184,1.296,185,1.296,208,3.008,216,2.857,218,1.71,561,1.624,699,4.06,701,2.926,770,5.082,810,3.008,835,1.71,1320,1.546,1415,1.624,1430,2.529,1431,2.529,1433,3.933,1492,4.165,1493,3.375,1494,3.375,1495,1.919,1496,1.807,1497,4.06,1500,3.375,1502,4.06,1504,1.919,1505,3.375,1506,3.728,1510,2.204,1511,1.919,1514,1.919,1515,1.919,1516,1.919,1517,1.919,1518,2.399,1519,2.399,1669,4.247,1670,4.247,1671,4.06,1672,2.204,1673,2.204,1680,2.204,1682,3.258,1683,4.679,1684,4.679,1685,2.66,1686,2.66,1687,2.66,1688,2.66,1689,2.66,1690,2.66,1691,2.66,1692,2.66,1693,2.66,1694,4.519,1695,3.057,1696,4.519,1697,4.519,1698,4.519,1699,4.519,1700,4.519,1701,4.519,1702,4.519,1703,4.519,1704,4.519,1705,4.519,1706,4.519]],["title/injectables/SignUpService.html",[16,0.449,1671,2.366]],["body/injectables/SignUpService.html",[3,0.165,4,0.165,5,0.147,7,0.076,10,0.925,11,0.155,12,0.014,13,0.165,14,0.01,15,0.01,16,0.706,18,1.436,26,1.066,28,0.902,31,0.813,33,1.087,34,0.741,35,1.087,37,0.987,42,0.258,43,0.716,54,1.386,55,1.337,56,0.184,57,2.763,142,0.987,685,4.551,689,4.297,690,5.157,699,4.31,701,2.904,702,4.31,711,3.56,712,3.309,757,5.475,759,5.475,761,5.475,762,5.256,769,5.475,770,5.256,1671,3.72,1707,6.344,1708,4.297,1709,4.938,1710,4.938,1711,4.938,1712,4.938,1713,4.938]],["title/classes/Space.html",[56,0.149,195,1.769]],["body/classes/Space.html",[0,0.287,1,2.033,3,0.122,4,0.122,5,0.108,7,0.056,8,0.427,10,0.791,11,0.166,12,0.014,13,0.172,14,0.008,15,0.008,23,1.18,26,0.871,28,0.667,31,0.913,33,0.933,34,0.637,35,0.933,37,0.933,38,0.761,41,1.668,42,0.265,51,0.8,56,0.136,59,1.268,72,0.772,90,1.847,93,1.125,94,0.974,121,1.726,141,2.346,142,1.012,188,3.289,195,2.852,312,2.152,321,1.94,331,2.628,568,4.426,571,2.369,572,3.515,574,3.443,589,3.135,591,2.875,594,1.94,614,3.225,619,2.633,620,2.292,881,4.665,980,1.94,1022,3.178,1024,3.443,1025,2.043,1026,2.043,1027,2.043,1029,2.633,1031,2.633,1032,2.633,1567,2.447,1714,2.866,1715,5.173,1716,5.173,1717,5.138,1718,5.614,1719,4.471,1720,5.138,1721,3.651,1722,3.651,1723,3.651,1724,5.614,1725,3.651,1726,4.471,1727,3.651,1728,3.651,1729,3.651,1730,3.651,1731,3.651,1732,3.651,1733,3.651,1734,3.651,1735,3.178,1736,6.436,1737,3.178,1738,3.178,1739,4.471,1740,3.178,1741,3.178,1742,3.178]],["title/interfaces/SpaceState.html",[0,0.314,568,2.511]],["body/interfaces/SpaceState.html",[0,0.341,1,1.946,2,1.356,3,0.145,4,0.145,5,0.129,7,0.066,8,0.481,10,0.811,11,0.13,12,0.014,13,0.193,14,0.01,15,0.01,23,1.021,38,0.556,41,1.623,42,0.285,51,0.951,56,0.162,59,1.364,72,0.917,141,2.457,142,1.089,188,3.331,195,2.876,312,2.355,321,2.306,331,1.919,568,4.535,571,1.943,572,2.567,589,3.266,591,2.429,614,3.63,619,3.13,620,2.724,881,5.105,980,2.306,1024,3.875,1025,2.429,1026,2.429,1027,2.429,1029,3.13,1031,3.13,1032,3.13,1567,2.908,1714,3.406,1715,3.777,1716,3.777,1718,3.777,1719,3.777,1724,5.661,1726,3.777,1735,3.777,1736,6.705,1737,3.777,1738,3.777,1739,5.033,1740,3.777,1741,3.777,1742,3.777]],["title/interfaces/SpeciesPiece.html",[0,0.314,360,2.511]],["body/interfaces/SpeciesPiece.html",[0,0.469,2,1.863,3,0.199,4,0.199,5,0.177,7,0.091,8,0.587,11,0.134,12,0.014,13,0.199,14,0.012,15,0.012,42,0.29,122,3.938,187,2.558,188,3.064,189,5.612,190,3.744,191,5.19,360,4.435,1743,5.19]],["title/coverage.html",[1744,4.764]],["body/coverage.html",[0,0.602,1,1.441,5,0.069,6,2.012,11,0.125,12,0.014,14,0.006,15,0.006,16,0.868,17,1.667,19,3.261,20,2.865,21,1.932,22,2.865,24,1.667,30,1.367,39,1.549,56,0.247,59,0.455,87,2.865,88,2.012,89,3.8,98,1.586,99,0.904,104,3.51,105,1.549,106,2.012,112,1.486,124,1.116,136,1.451,138,1.228,149,0.858,154,0.904,156,0.904,158,0.904,159,0.777,160,0.904,162,0.904,163,0.777,164,1.322,166,0.904,168,0.904,169,0.904,171,0.904,174,0.87,176,0.904,178,0.87,180,2.335,181,1.932,182,0.87,186,2.012,188,0.941,189,1.667,192,2.012,193,1.815,194,2.865,195,1.022,202,2.632,203,1.815,204,2.865,219,1.667,222,1.067,225,1.815,234,2.012,237,0.941,246,1.451,247,1.667,275,2.291,283,1.228,285,1.451,311,4.949,330,3.261,333,1.549,334,0.87,338,1.451,341,1.294,355,0.941,357,1.367,360,1.451,401,2.012,402,1.815,415,1.549,416,1.451,434,1.367,441,1.815,479,2.012,480,2.012,489,1.451,490,1.549,505,1.667,507,1.667,508,2.839,509,2.446,510,1.815,554,2.012,563,1.815,565,2.865,566,1.022,568,1.451,571,1.726,592,1.228,597,0.98,630,2.782,631,3.51,632,1.367,638,1.667,656,3.51,657,1.367,679,1.228,680,2.012,687,1.549,690,1.549,691,1.667,754,2.012,755,3.261,808,2.012,809,2.012,822,1.549,837,3.037,840,1.815,849,1.549,871,2.012,882,2.865,883,2.865,884,1.667,886,1.667,913,2.012,914,2.012,952,2.012,955,2.012,960,2.865,981,1.116,987,1.17,993,1.549,1013,3.51,1014,2.865,1039,2.865,1081,1.549,1082,2.012,1083,1.549,1130,1.667,1131,2.012,1147,2.865,1151,1.549,1152,1.17,1156,1.667,1157,1.667,1160,1.451,1167,2.012,1170,1.667,1171,2.012,1270,2.012,1413,2.012,1414,2.012,1415,3.427,1475,2.012,1476,2.012,1489,1.667,1490,2.865,1491,2.865,1523,2.012,1524,2.012,1530,3.261,1533,1.451,1535,3.261,1615,1.815,1616,2.865,1617,2.865,1632,1.667,1639,2.012,1640,2.012,1668,1.667,1669,3.442,1670,3.442,1671,1.367,1682,1.667,1707,2.012,1708,2.012,1714,2.865,1743,2.012,1744,2.012,1745,2.312,1746,2.312,1747,2.312,1748,6.797,1749,2.012,1750,6.449,1751,2.012,1752,7.662,1753,5.136,1754,6.449,1755,6.638,1756,5.943,1757,2.012,1758,2.012,1759,2.012,1760,2.012,1761,2.012,1762,2.012,1763,1.815,1764,2.012,1765,2.012,1766,1.815,1767,3.65,1768,2.312,1769,2.312,1770,2.312,1771,2.312,1772,2.012,1773,2.312,1774,2.312,1775,2.312,1776,5.136,1777,4.522,1778,2.312,1779,3.65,1780,5.136,1781,3.65,1782,6.222,1783,2.312,1784,3.65,1785,2.312,1786,2.312,1787,4.47,1788,2.012,1789,5.592,1790,5.592,1791,4.866,1792,2.012,1793,2.012,1794,1.815,1795,2.632,1796,2.012,1797,1.815,1798,2.012,1799,2.012,1800,2.012,1801,2.012,1802,4.522,1803,2.312,1804,2.312,1805,2.312]],["title/dependencies.html",[1806,2.902,1807,4.191]],["body/dependencies.html",[9,1.74,12,0.014,14,0.011,15,0.011,43,0.808,51,1.22,443,4.847,561,2.959,711,4.016,715,4.371,716,4.371,717,4.371,718,4.371,728,4.371,780,4.847,1025,3.116,1026,3.116,1027,3.116,1140,4.847,1496,3.293,1532,4.847,1807,4.847,1808,5.569,1809,8.102,1810,5.569,1811,6.78,1812,5.569,1813,5.569,1814,6.78,1815,6.78,1816,5.569,1817,5.569,1818,5.569,1819,5.569,1820,5.569,1821,5.569,1822,5.569,1823,5.569,1824,5.569,1825,5.569,1826,5.569]],["title/miscellaneous/enumerations.html",[1827,1.866,1828,4.191]],["body/miscellaneous/enumerations.html",[7,0.067,12,0.014,14,0.01,15,0.01,94,1.601,120,2.812,149,1.638,280,3.903,281,3.903,336,3.259,435,5.069,687,2.94,721,5.069,887,4.572,890,4.2,939,4.572,1794,3.443,1795,3.163,1797,3.443,1827,2.455,1828,3.818,1829,3.818,1830,4.572,1831,3.818,1832,4.387,1833,5.825,1834,4.387,1835,4.387,1836,5.069,1837,5.069,1838,5.069,1839,5.069,1840,5.069,1841,5.069,1842,4.387,1843,4.387,1844,4.387,1845,4.387,1846,4.387,1847,4.387,1848,4.387,1849,4.387,1850,4.387,1851,4.387,1852,4.387,1853,4.387,1854,4.387,1855,4.387,1856,4.387,1857,4.387,1858,5.825,1859,5.069,1860,5.069,1861,5.069,1862,5.069,1863,5.069,1864,5.069,1865,4.387,1866,4.387,1867,4.387,1868,4.387,1869,4.387,1870,4.387,1871,4.387,1872,4.387,1873,4.387,1874,4.387,1875,4.387,1876,4.387,1877,4.387,1878,4.387,1879,4.387,1880,4.387,1881,4.387,1882,4.387,1883,4.387,1884,4.387,1885,4.387,1886,4.387,1887,4.387,1888,4.387,1889,4.387,1890,4.387,1891,4.387,1892,4.387]],["title/miscellaneous/functions.html",[1827,1.866,1893,4.191]],["body/miscellaneous/functions.html",[7,0.056,10,0.726,11,0.158,12,0.014,14,0.009,15,0.009,31,0.759,33,1.231,34,0.851,35,1.24,37,1.222,41,1.031,50,2.433,79,2.649,89,1.952,93,1.13,94,1.521,122,2.61,125,3.169,138,2.741,141,1.671,188,1.495,225,4.049,283,2.741,285,3.238,312,1.33,434,3.051,441,4.049,503,2.875,510,4.049,581,3.754,589,1.557,590,3.197,655,2.887,805,4.3,869,2.883,1293,4.554,1299,3.197,1308,2.462,1309,3.197,1310,4.334,1315,3.197,1322,3.197,1398,3.197,1502,3.051,1530,2.649,1557,2.649,1558,2.649,1568,2.649,1759,3.197,1760,4.49,1761,4.49,1762,3.197,1763,4.049,1764,3.197,1765,4.49,1766,4.049,1787,3.197,1788,4.49,1791,3.197,1792,4.49,1793,4.49,1827,2.056,1893,3.197,1894,3.673,1895,3.673,1896,6.468,1897,3.197,1898,3.673,1899,6.813,1900,3.673,1901,7.065,1902,7.065,1903,7.065,1904,5.964,1905,3.673,1906,3.673,1907,5.159,1908,3.673,1909,3.673,1910,3.673,1911,3.673,1912,3.673,1913,3.673,1914,3.673,1915,3.673,1916,5.964,1917,3.673,1918,5.159,1919,3.673,1920,3.673,1921,3.673,1922,3.673,1923,5.159,1924,3.673,1925,3.673,1926,3.673,1927,3.673,1928,3.673,1929,3.673,1930,3.673,1931,3.673,1932,3.673,1933,3.673,1934,3.673,1935,3.673,1936,5.964,1937,3.673,1938,5.159,1939,3.673,1940,3.673,1941,3.673,1942,3.673,1943,3.673,1944,3.673,1945,3.673]],["title/index.html",[7,0.061,1946,3.482]],["body/index.html",[2,2,12,0.012,14,0.012,15,0.012,18,1.862,90,3.239,100,2.606,1772,5.572,1946,5.572,1947,6.402,1948,6.402,1949,6.402]],["title/modules.html",[1950,4.764]],["body/modules.html",[12,0.012,14,0.012,15,0.012,1950,5.692]],["title/properties.html",[8,0.4,1806,2.902]],["body/properties.html",[8,0.539,12,0.013,14,0.012,15,0.012,1951,6.488,1952,6.488]],["title/miscellaneous/typealiases.html",[1827,1.866,1953,4.815]],["body/miscellaneous/typealiases.html",[7,0.094,11,0.138,12,0.012,14,0.012,15,0.012,89,3.273,189,5.192,280,4.128,884,5.192,886,5.192,887,4.835,890,4.442,1530,4.442,1533,4.52,1794,4.835,1795,4.442,1797,4.835,1827,3.447,1829,5.361,1830,4.835,1831,5.361,1897,5.361,1954,6.16]],["title/miscellaneous/variables.html",[1827,1.866,1955,4.191]],["body/miscellaneous/variables.html",[7,0.045,9,1.381,11,0.156,12,0.014,14,0.007,15,0.007,38,0.38,50,2.202,59,1.151,72,0.627,93,1.53,94,1.324,114,0.927,120,3.169,122,1.501,136,2.775,141,2.263,142,0.694,188,2.767,195,1.312,212,2.439,237,1.799,298,4.598,304,3.923,334,1.663,336,3.673,355,1.799,376,1.988,482,2.582,505,3.187,507,3.187,559,6.631,589,3.201,598,0.894,601,1.755,744,1.988,882,2.329,883,3.47,884,4.733,885,5.713,892,4.595,893,4.147,894,3.847,895,2.582,896,3.847,897,4.147,898,3.847,899,5.152,900,3.847,901,4.147,902,3.847,903,3.847,904,4.147,905,3.847,906,3.847,907,4.147,908,3.847,909,3.847,910,4.147,911,3.847,912,3.847,956,2.582,981,2.551,1013,1.863,1147,3.47,1148,2.582,1156,3.187,1275,2.582,1575,2.14,1616,2.329,1617,3.47,1619,2.582,1620,2.582,1621,2.582,1622,2.582,1623,2.582,1624,2.582,1625,2.582,1626,2.582,1627,2.582,1628,2.582,1629,2.582,1630,2.582,1749,2.582,1751,3.847,1757,2.582,1758,3.847,1763,2.329,1766,2.329,1795,2.14,1796,3.847,1798,2.582,1799,3.847,1800,3.847,1801,2.582,1827,1.66,1830,2.329,1836,2.582,1837,2.582,1838,2.582,1839,2.582,1840,2.582,1841,2.582,1859,3.847,1860,3.847,1861,2.582,1862,3.847,1863,3.847,1864,4.598,1955,2.582,1956,2.967,1957,2.967,1958,4.421,1959,2.967,1960,2.967,1961,2.967,1962,2.967,1963,2.967,1964,2.967,1965,2.967,1966,2.967,1967,2.967,1968,2.967,1969,2.967,1970,2.967,1971,2.967,1972,4.421,1973,2.967,1974,2.967,1975,2.967,1976,2.967,1977,2.967,1978,2.967,1979,2.967,1980,2.967,1981,6.799,1982,2.967,1983,2.967,1984,2.967,1985,6.564,1986,2.967,1987,2.967,1988,2.967,1989,2.967,1990,2.967,1991,2.967,1992,2.967,1993,2.967,1994,6.564,1995,2.967,1996,2.967,1997,2.967,1998,2.967,1999,2.967,2000,2.967,2001,2.967,2002,2.967,2003,2.967,2004,2.967,2005,2.967,2006,2.967,2007,4.421,2008,2.967,2009,2.967,2010,2.967,2011,2.967]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1952,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":927,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["1/1",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1772,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":899,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":1949,"title":{},"body":{"index.html":{}}}],["23",{"_index":1947,"title":{},"body":{"index.html":{}}}],["25",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["2997582.svg",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":895,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/15",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1704,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["6606521.svg",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1948,"title":{},"body":{"index.html":{}}}],["_action",{"_index":1715,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_drawpool",{"_index":915,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1323,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1716,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_setgamestate",{"_index":1326,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1332,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":570,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1324,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1050,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1274,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["action.model",{"_index":1735,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["action_display_abundance",{"_index":1842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplayservicewithsetup",{"_index":39,"title":{"interfaces/ActionDisplayServiceWithSetup.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager",{"_index":24,"title":{"classes/ActionDisplaySetupManager.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager([adaptionactiondisplayservice",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["actionpawn",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":99,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":124,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":332,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":154,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":235,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1313,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{}}}],["actionserviceswithsetup",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["acts",{"_index":1543,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":156,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":814,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["add_circle",{"_index":1471,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":249,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":467,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":1642,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriend(username",{"_index":1645,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addpiece",{"_index":1717,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1726,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["alias",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":980,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["always",{"_index":1589,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["amount",{"_index":968,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["amphibian",{"_index":1836,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1109,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1496,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":835,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":1454,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/grid",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":1453,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/table",{"_index":1452,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":836,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":159,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":459,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":860,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":891,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":867,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":461,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":481,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcardcomponent",{"_index":158,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":338,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":333,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":397,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":890,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":893,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":897,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":901,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":904,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":907,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":910,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":493,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":189,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":415,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["animals",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalssubject",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["api",{"_index":781,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["apiurlinterceptor",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":1900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1173,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1175,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(gamestate",{"_index":1177,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1197,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1213,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1183,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applypatch(gamestate",{"_index":1186,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1837,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":237,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area.constant",{"_index":889,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["area.model",{"_index":1155,"title":{},"body":{"interfaces/GameState.html":{}}}],["areaid",{"_index":884,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":896,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":900,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":903,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":906,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":909,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":912,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":543,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":246,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":492,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaservice",{"_index":1285,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":592,"title":{"interfaces/AreaState.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["areastateservice",{"_index":638,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":640,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":1560,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["associated",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assume",{"_index":1602,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["async",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1110,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":794,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":786,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":1763,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":1905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":790,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":679,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":322,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":627,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces.length",{"_index":628,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces[0",{"_index":629,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["await",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":978,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{}}}],["bag",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1311,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["before",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(false",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1369,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":1652,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elements",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1581,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["behaviorsubject(this.ready",{"_index":933,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":608,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["behaviorsubject(this.state",{"_index":1030,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["behaviorsubject>(new",{"_index":646,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":1838,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":1689,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1548,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["buildanimal",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["building",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["call",{"_index":1225,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1318,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1319,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":157,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":838,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:21",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:22",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:26",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":417,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":203,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":402,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1317,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":797,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["catch((error",{"_index":1659,"title":{},"body":{"injectables/PlayerService.html":{}}}],["change",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["changedetection",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["characters",{"_index":1705,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":56,"title":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["cleared",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":755,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:11",{"_index":1093,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:13",{"_index":1163,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:17",{"_index":1099,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:18",{"_index":760,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:21",{"_index":1102,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:26",{"_index":768,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:30",{"_index":1096,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:34",{"_index":1105,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:38",{"_index":1103,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:42",{"_index":1101,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:50",{"_index":765,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1108,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:54",{"_index":771,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:76",{"_index":763,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:9",{"_index":1161,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["clientid",{"_index":788,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["code",{"_index":762,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":1679,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":756,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":690,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":772,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoidtokenjwt",{"_index":767,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatest(readyobs",{"_index":76,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatestwith",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":791,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1253,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1198,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1184,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate",{"_index":1185,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1591,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["complete",{"_index":1122,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1084,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1095,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":98,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":340,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{}}}],["config.constant",{"_index":359,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["config.constant.ts",{"_index":883,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":398,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":391,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1617,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":181,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":1681,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":803,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":807,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":757,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":761,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":773,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":804,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console",{"_index":1516,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":806,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('unexpected",{"_index":796,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":799,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.log('create",{"_index":847,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(`created",{"_index":1144,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(`joining",{"_index":1469,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["console.log(authresult",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1165,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":191,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/element",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["constant/element.constant",{"_index":953,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/image.constant",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constant/pile",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constant/pile.constant",{"_index":940,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(actionserviceswithsetup",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":637,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1132,"title":{},"body":{"injectables/GameService.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclientservice",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":337,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":468,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":1003,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(formbuilder",{"_index":1518,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1040,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1438,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestatestore",{"_index":1208,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":821,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1091,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(id",{"_index":576,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["constructor(kind",{"_index":1719,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["constructor(pile",{"_index":1608,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":920,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1631,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":653,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":1015,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["corresponding",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":926,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["coverage",{"_index":1744,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":1176,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":1179,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creategame",{"_index":1085,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1098,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1135,"title":{},"body":{"injectables/GameService.html":{}}}],["creates",{"_index":1172,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":624,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentcount",{"_index":1596,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentitemcount",{"_index":1603,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentplayer",{"_index":1432,"title":{},"body":{"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1473,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":815,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayersubject",{"_index":1641,"title":{},"body":{"injectables/PlayerService.html":{}}}],["custom",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameStatePatchService.html":{}}}],["decode",{"_index":780,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":758,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":764,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":961,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":966,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["deepclone",{"_index":1024,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["deepclone(emptygamestate",{"_index":1358,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._gamestate",{"_index":1390,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1034,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["deepclone(this._transactionstate",{"_index":1391,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":93,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":463,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":1559,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["defining",{"_index":1148,"title":{},"body":{"interfaces/GameState.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1544,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["delete",{"_index":1474,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1477,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1480,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["dependencies",{"_index":1807,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":655,"title":{},"body":{"interfaces/AreaState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1400,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":184,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["display.model.ts",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"coverage.html":{}}}],["display.service",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":234,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":248,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:73",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:93",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["display/adaption",{"_index":202,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":192,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":840,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":839,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":955,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":959,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":1568,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1037,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["dom",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":1312,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":918,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drawpoolgamecomponent",{"_index":162,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["ds",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1315,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":798,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":601,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":872,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":873,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":888,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1057,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":362,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["element.model.ts",{"_index":1014,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":1018,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:11",{"_index":1016,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:19",{"_index":1021,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:23",{"_index":1023,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:31",{"_index":1020,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:39",{"_index":1019,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:9",{"_index":1017,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1075,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1078,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["element/element.component",{"_index":199,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["element/game",{"_index":1039,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":1796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":633,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":166,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":357,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":247,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementenum",{"_index":887,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":905,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":898,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":908,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":902,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":911,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":894,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":886,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":222,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":212,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":1052,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":1000,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elements.length).fill(null",{"_index":458,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementspace",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":168,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":238,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementssubject",{"_index":239,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":661,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":770,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1307,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1538,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emitstate",{"_index":575,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":977,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["empty",{"_index":1277,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emptyelementspace",{"_index":465,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":1156,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/model/area.model",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/faction.model",{"_index":354,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/piece.model",{"_index":190,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["engine/model/pile.model",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["engine/service/game",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/util/misc",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["engine/util/predicate",{"_index":226,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1321,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":328,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":329,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":1665,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":1666,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":1663,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.elementarea",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":324,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":323,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":1911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1398,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":1701,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1304,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":671,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1076,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1072,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1828,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":777,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.clientid",{"_index":789,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":785,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environments/environment",{"_index":778,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["equal",{"_index":1909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":805,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1396,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1036,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["error('can",{"_index":1387,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('element",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1394,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1375,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":321,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('number",{"_index":623,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["error('pile",{"_index":947,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":1738,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('state",{"_index":619,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('transaction",{"_index":1259,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1056,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1080,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1384,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errorhandlerinterceptor",{"_index":1766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":1502,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcoalescing",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1038,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["extend",{"_index":599,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["extends",{"_index":187,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":956,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":170,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":957,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":958,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":201,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":169,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":334,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":464,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction.id",{"_index":548,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.model",{"_index":1153,"title":{},"body":{"interfaces/GameState.html":{}}}],["faction.ownerid",{"_index":855,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":849,"title":{"interfaces/FactionAssignment.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.id",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignments[0",{"_index":850,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":994,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":489,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":823,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":816,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":987,"title":{"interfaces/FactionState.html":{}},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["factionstateservice",{"_index":993,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":997,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1546,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["failed",{"_index":1514,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"miscellaneous/variables.html":{}}}],["false).newdocument",{"_index":1188,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["fast",{"_index":1025,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["fetchgames",{"_index":1435,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((ids",{"_index":843,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((player",{"_index":1459,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":942,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":81,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["filter((space",{"_index":325,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["filter(isnotundefined",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filterplayers",{"_index":1436,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1443,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1086,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1100,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["first()).subscribe",{"_index":228,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["formbuilder",{"_index":1492,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formgroup",{"_index":1493,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["found",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friends",{"_index":1128,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":1667,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1893,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":598,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":812,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":813,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":809,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:39",{"_index":832,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:40",{"_index":830,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":831,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":829,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":824,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:57",{"_index":826,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:68",{"_index":827,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:85",{"_index":828,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1472,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1460,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.players",{"_index":1458,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["game/draw",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["gamecollection",{"_index":1111,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1120,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":566,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelement:10",{"_index":585,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:11",{"_index":584,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:31",{"_index":973,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:38",{"_index":593,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:39",{"_index":595,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:9",{"_index":583,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelementregistryservice",{"_index":632,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:15",{"_index":648,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:16",{"_index":645,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":647,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":650,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:22",{"_index":641,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:26",{"_index":644,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:30",{"_index":1005,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementstate",{"_index":597,"title":{"interfaces/GameElementState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelementstateservice",{"_index":657,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:13",{"_index":663,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":673,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":672,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:17",{"_index":665,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:25",{"_index":668,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:36",{"_index":667,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:40",{"_index":670,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":1043,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":1097,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["gamemanagementclientservice",{"_index":1081,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gamemanagementservice",{"_index":833,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamemanagementsvc",{"_index":841,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["games",{"_index":1433,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":1130,"title":{"injectables/GameService.html":{}},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestarted",{"_index":817,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":981,"title":{"interfaces/GameState.html":{}},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamestate.area",{"_index":1404,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.faction",{"_index":1407,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.pile",{"_index":1410,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1210,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1157,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":600,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1278,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":1160,"title":{"interfaces/GameStatePatch.html":{}},"body":{"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatepatches",{"_index":1174,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1170,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":822,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1212,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1151,"title":{"injectables/GameStateStoreService.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1325,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":825,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gametablecolumns",{"_index":1434,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gecko",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1731,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":348,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getaddedelements",{"_index":477,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":473,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":475,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1236,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":935,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":350,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":674,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":660,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":666,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1238,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1087,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1361,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":1162,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":345,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":875,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlength",{"_index":937,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1088,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1327,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1335,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":138,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(imgpathbykind",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":553,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1051,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":983,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1733,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1240,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1089,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1104,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["getscore",{"_index":985,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":352,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1022,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getstoragekey",{"_index":1478,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1482,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettransactionstate",{"_index":1363,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1558,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":1859,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1860,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":975,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["gsp.patch",{"_index":1187,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1209,"title":{},"body":{"injectables/GameStateService.html":{}}}],["handler.interceptor.ts",{"_index":1765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":974,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{}}}],["here",{"_index":1522,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["host",{"_index":1142,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1094,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1092,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":1903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":1901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1140,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1139,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":1912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":844,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":136,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":140,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1542,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["increasescore",{"_index":962,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":969,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1517,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherentcount",{"_index":885,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":582,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initialization",{"_index":1913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":774,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":792,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":775,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router).navigate(['/login",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["inputs",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":1839,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1276,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":1192,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1292,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/LoginFormData.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/LoginFormData.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["inventory",{"_index":1575,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloggedin",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isready",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["istrue",{"_index":225,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":979,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{}}}],["item.id",{"_index":1381,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":1937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1437,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1445,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["json",{"_index":1026,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["json.parse(playerauthdata",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1385,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":779,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":800,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keeps",{"_index":1571,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["key",{"_index":1293,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1373,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1288,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":589,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["kinds",{"_index":1573,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["lastvaluefrom",{"_index":1113,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1123,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1121,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1127,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1116,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leaf",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":919,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["lengthsubject",{"_index":1537,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["level",{"_index":1287,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["list",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["lobby",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":171,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1487,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1486,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1488,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":691,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1532,"title":{},"body":{"interfaces/Piece.html":{},"dependencies.html":{}}}],["log",{"_index":818,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":175,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":1501,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1489,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":174,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":177,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":176,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":1706,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1272,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1273,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":1150,"title":{},"body":{"interfaces/GameState.html":{}}}],["management",{"_index":1083,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management.service",{"_index":834,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management/game",{"_index":1082,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":1451,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1131,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:10",{"_index":1133,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:16",{"_index":1136,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:26",{"_index":1138,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:30",{"_index":1134,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":1640,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":1650,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":1653,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":1644,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":1647,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":1646,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:50",{"_index":1649,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:11",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:18",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:24",{"_index":92,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:25",{"_index":95,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:26",{"_index":91,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:33",{"_index":96,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:46",{"_index":97,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["many",{"_index":1574,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["map",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1371,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((serviceready",{"_index":78,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["map((space",{"_index":326,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matbutton",{"_index":810,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1500,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":1683,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1419,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1425,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":620,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["matches",{"_index":1355,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":1429,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1428,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1417,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matgridlist",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1418,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1424,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1420,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1422,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":1426,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matminifabbutton",{"_index":1427,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrow",{"_index":1421,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1423,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattable",{"_index":1416,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":811,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["meat",{"_index":1861,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":1916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":1281,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":1827,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":651,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/element.model",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":992,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/game",{"_index":1049,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1244,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":1950,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1320,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1279,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["new",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newgamestateelement",{"_index":1341,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1382,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":594,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.id",{"_index":617,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["newstate.kind",{"_index":1741,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.piece",{"_index":1742,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.space.foreach((spacestate",{"_index":625,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["newstate.space.length",{"_index":622,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["next",{"_index":1902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactionpawnspaceindex",{"_index":861,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":573,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":587,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextelementspaceindex",{"_index":863,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["nextspace.addpiece(element",{"_index":320,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ngclass",{"_index":406,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngoninit",{"_index":213,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["null",{"_index":141,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"interfaces/GameStatePatch.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/PlayerAuthData.html":{}}}],["object",{"_index":1149,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1584,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object1",{"_index":1910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1322,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1289,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["of(0",{"_index":949,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(undefined",{"_index":1166,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1181,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1344,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":1298,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["oninit",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onpush",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1506,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["operation",{"_index":1169,"title":{},"body":{"interfaces/GameStatePatch.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1193,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":1137,"title":{},"body":{"injectables/GameService.html":{}}}],["others",{"_index":1275,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":616,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1946,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1305,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":964,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{}}}],["package",{"_index":1806,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":183,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":1430,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":1431,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":1415,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1525,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:18",{"_index":1526,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:22",{"_index":1521,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1519,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1694,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":1520,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:41",{"_index":1695,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:48",{"_index":1448,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:49",{"_index":1449,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1439,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:62",{"_index":1444,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:69",{"_index":1442,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:73",{"_index":1441,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:78",{"_index":1440,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:83",{"_index":1446,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page/lobby",{"_index":1414,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1491,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":1524,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":1670,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1035,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1118,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["particular",{"_index":1297,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["passed",{"_index":1356,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1510,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1027,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["patch.model",{"_index":1164,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["patch.model.ts",{"_index":1167,"title":{},"body":{"interfaces/GameStatePatch.html":{},"coverage.html":{}}}],["patch.service",{"_index":1243,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1171,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:13",{"_index":1180,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1178,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["pawn",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":200,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":186,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":105,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":466,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["piece",{"_index":188,"title":{"interfaces/Piece.html":{}},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1567,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["piececount",{"_index":1593,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["piecefactory",{"_index":1533,"title":{},"body":{"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":930,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(null",{"_index":1599,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1598,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount.length",{"_index":1594,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1595,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pile",{"_index":355,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile.constant",{"_index":1618,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pile.model",{"_index":1154,"title":{},"body":{"interfaces/GameState.html":{}}}],["pileadapter",{"_index":341,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":393,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":395,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1615,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":939,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1619,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1621,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1623,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1625,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1627,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1629,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1620,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1622,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1624,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1626,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1628,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1630,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":542,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":544,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":545,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":490,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":922,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pileservice",{"_index":1284,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1152,"title":{"interfaces/PileState.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestateservice",{"_index":1632,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1633,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":77,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["places",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":1107,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1129,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":1662,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":687,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1114,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":1661,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1126,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["players",{"_index":1143,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["playerservice",{"_index":416,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["please",{"_index":1700,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":164,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["pool.service.ts",{"_index":914,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:14",{"_index":931,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:15",{"_index":932,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":934,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":921,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:23",{"_index":923,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:36",{"_index":936,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:44",{"_index":938,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:52",{"_index":925,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:56",{"_index":929,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["possible",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pretty",{"_index":1569,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["previous",{"_index":1306,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["processedfactionids",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1224,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":569,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provideanimationsasync('noop",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["provider.service.ts",{"_index":480,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1189,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":916,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pull(count",{"_index":924,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1561,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pullmany",{"_index":1539,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1554,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pullone",{"_index":1540,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pulls",{"_index":1556,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["put",{"_index":917,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["put(pieces",{"_index":928,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["puts",{"_index":1564,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["quickly",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1536,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reactiveformsmodule",{"_index":1494,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["readonly",{"_index":331,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["readonlymap",{"_index":892,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["readyobs",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["readysubject",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["received",{"_index":976,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["record",{"_index":1576,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["refresh",{"_index":1470,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1296,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":784,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["register",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":643,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":669,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1199,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1216,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":1058,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":634,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":635,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":943,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":658,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":662,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1065,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1009,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1635,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1200,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1218,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1201,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1220,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1328,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1340,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":631,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:13",{"_index":639,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:15",{"_index":1048,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:16",{"_index":1046,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":1047,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":1042,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:20",{"_index":1006,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1008,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1044,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:24",{"_index":1007,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1004,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":1045,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1195,"title":{},"body":{"injectables/GameStateService.html":{}}}],["remove",{"_index":1740,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeactionpawn",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":1739,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeelement",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":1643,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":1648,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":1718,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeremainingelements",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1545,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reptile",{"_index":1841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":1904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1227,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":418,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["requiretransaction",{"_index":1202,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1271,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1190,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":142,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1402,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1203,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["router",{"_index":1497,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["routerlink",{"_index":1498,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["same",{"_index":1343,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["score",{"_index":965,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["sdk/client",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1515,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":1862,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1549,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["selector(gamestate",{"_index":1372,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sendgsptobackend",{"_index":1158,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1159,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":1282,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service.ready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service.setup",{"_index":86,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service/action",{"_index":224,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":1499,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":1672,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":1450,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["serviceready",{"_index":82,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["serviceready.every((ready",{"_index":80,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["services",{"_index":1196,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["seta",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setarea",{"_index":1204,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1229,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":1936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":1935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":659,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":664,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1205,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1231,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1090,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1106,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1302,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1349,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":1206,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1233,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":963,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":971,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["setstate",{"_index":574,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":591,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["setstoragekey",{"_index":1479,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1484,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1329,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1352,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setup",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["several",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["sign",{"_index":179,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(undefined",{"_index":1447,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["signup",{"_index":759,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":769,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":776,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":802,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":1674,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":1668,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":178,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":1684,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":1698,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":1699,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":1703,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":1697,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":1682,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":182,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":1671,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["simple",{"_index":1570,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["skip",{"_index":1070,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1461,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snake",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1291,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1462,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":195,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/ElementSpaceComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":155,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space.component",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":196,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":197,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":194,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":198,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":954,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.model",{"_index":596,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece.kind",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":327,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state",{"_index":604,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.state$.subscribe((spacestate",{"_index":612,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space/action",{"_index":193,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spaces.filter",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spaces.map((space",{"_index":603,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacessubject",{"_index":567,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacestate",{"_index":568,"title":{"interfaces/SpaceState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["species",{"_index":336,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":360,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":335,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1557,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1829,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1830,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1831,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":1898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":1896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":1834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1897,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":1835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":1899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/lobby",{"_index":1413,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1490,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":1523,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":1669,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/local",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":1759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":1762,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":1764,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":565,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":578,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":580,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:15",{"_index":579,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:16",{"_index":577,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:28",{"_index":586,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:54",{"_index":588,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":960,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:10",{"_index":982,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:14",{"_index":984,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:18",{"_index":986,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":970,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":967,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:32",{"_index":972,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1013,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1530,"title":{},"body":{"interfaces/Piece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1535,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:103",{"_index":1614,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:107",{"_index":1610,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:111",{"_index":1611,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:115",{"_index":1612,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:17",{"_index":1551,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:18",{"_index":1552,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:19",{"_index":1550,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:20",{"_index":1541,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1565,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:46",{"_index":1553,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:56",{"_index":1555,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:78",{"_index":1562,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:86",{"_index":1563,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:96",{"_index":1609,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:99",{"_index":1613,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1639,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1714,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:12",{"_index":1723,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:13",{"_index":1721,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:14",{"_index":1722,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:15",{"_index":1725,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":1720,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:24",{"_index":1730,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":1732,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":1734,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:39",{"_index":1727,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:48",{"_index":1728,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:59",{"_index":1729,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":754,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":1707,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":630,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/local",{"_index":1475,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/util/misc.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":401,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":808,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":871,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":874,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":876,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":877,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":878,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1794,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":882,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1616,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":330,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":351,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":353,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":470,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":469,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":474,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":471,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":472,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":476,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":478,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":343,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":342,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":344,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":339,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":346,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":347,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":349,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":952,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1743,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":479,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":913,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":869,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1531,"title":{},"body":{"interfaces/Piece.html":{}}}],["startcase(kind",{"_index":1534,"title":{},"body":{"interfaces/Piece.html":{}}}],["started",{"_index":1260,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startgame",{"_index":819,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["starttransaction",{"_index":1207,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":571,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["state.constant.ts",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":1182,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1147,"title":{},"body":{"interfaces/GameState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.owner",{"_index":1578,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["state.service",{"_index":652,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":656,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":1068,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:15",{"_index":1061,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:18",{"_index":1211,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:21",{"_index":1069,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":1066,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":1067,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:25",{"_index":1063,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:29",{"_index":1214,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1235,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:36",{"_index":1062,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:38",{"_index":1215,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:40",{"_index":1064,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:51",{"_index":1228,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:58",{"_index":1222,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1237,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1230,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1217,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1239,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":1232,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1219,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1241,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:9",{"_index":675,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:91",{"_index":1234,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":1221,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":837,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":572,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["static",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1476,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1483,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1485,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1481,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.ts",{"_index":1833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store.service",{"_index":1242,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1270,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:103",{"_index":1364,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:111",{"_index":1333,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:116",{"_index":1350,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":1357,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":1334,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":1346,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:151",{"_index":1365,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:155",{"_index":1347,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:159",{"_index":1337,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":1366,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":1348,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:171",{"_index":1338,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:175",{"_index":1367,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:179",{"_index":1351,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:183",{"_index":1339,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:34",{"_index":1359,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:35",{"_index":1360,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:36",{"_index":1331,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":1336,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:58",{"_index":1353,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:82",{"_index":1342,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:99",{"_index":1362,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1345,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["subject",{"_index":1724,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["subscribe",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":83,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["subscribe((animal",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribers",{"_index":1399,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":1914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["substatearray",{"_index":1377,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1380,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1389,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1383,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1511,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1283,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1585,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["sun",{"_index":1863,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":605,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["super(areastatesvc",{"_index":654,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":998,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1634,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1577,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["super.register(elements",{"_index":999,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1191,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":581,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":870,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":820,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1314,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1303,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tester2",{"_index":1466,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tester3",{"_index":1467,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tgameelement",{"_index":642,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":1041,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":1656,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._action",{"_index":1737,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._drawpool",{"_index":944,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1392,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate[key",{"_index":1388,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1736,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1401,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1395,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1397,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1028,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.id",{"_index":1033,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.inventory[key",{"_index":1586,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[kind",{"_index":1597,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[piece.kind",{"_index":1604,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.name",{"_index":988,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.ownerid",{"_index":989,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.score",{"_index":990,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._transactionstate",{"_index":1374,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate[key",{"_index":1378,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaysetupmanager",{"_index":58,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.ready",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.setup",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionpawn?.name",{"_index":144,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":392,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":460,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawns.set(actionpawns",{"_index":230,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionserviceswithsetup",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.foreach((service",{"_index":85,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.map((service",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":229,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":862,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":865,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":231,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":864,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":227,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":866,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":845,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":550,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":396,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":551,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":859,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalssubject.asobservable",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":552,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1247,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":842,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":547,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":1654,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1119,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":1509,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":1527,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.buildanimal(faction",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.cognitoclient",{"_index":783,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclient.send(command",{"_index":795,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":1713,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":1712,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":1657,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1456,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":853,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayersubject.asobservable",{"_index":1651,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":1658,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.drawpool.length",{"_index":948,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":950,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":951,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":879,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":880,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":1054,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.set(elements",{"_index":232,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1071,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1600,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emitstate",{"_index":991,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1513,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":1680,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.faction",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":399,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":400,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":995,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":1001,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":996,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":1002,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":848,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":852,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":851,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":854,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.fetchgames",{"_index":1457,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.formbuilder.group",{"_index":1504,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":1060,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":1655,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1146,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1141,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":1660,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1145,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":1664,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":846,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.games.set(await",{"_index":1463,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1468,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(['tester1",{"_index":1465,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1464,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestarted",{"_index":857,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1245,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1257,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.area",{"_index":1261,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1256,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1264,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1255,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1267,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1263,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1266,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1269,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1258,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1262,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1265,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(updatedstate",{"_index":1250,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1268,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1251,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1252,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1368,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1370,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1393,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":676,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":868,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1010,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1636,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":677,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1011,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1637,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":678,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1012,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1638,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":858,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1074,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1403,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1124,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1249,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":1254,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.http.get('/game",{"_index":1117,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1125,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":618,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this.initialize",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.isloggedin",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":881,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.length",{"_index":1582,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject",{"_index":1580,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1583,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1587,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1503,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1507,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1508,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.owner",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piececounts.get(key",{"_index":1588,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piecefactory",{"_index":1579,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.length",{"_index":1605,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.pullmany(count",{"_index":1606,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.put(pieces",{"_index":1607,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":546,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":549,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":945,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":941,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1455,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer.id",{"_index":856,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.processedfactionids",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":1601,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.ready",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(allready",{"_index":84,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.readysubject.next(this.ready",{"_index":946,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":649,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1059,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1055,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1053,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1073,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1077,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1406,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1409,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1412,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.replenish",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.router.navigate(['/lobby",{"_index":1512,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1528,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.router.navigate(['/sign",{"_index":1693,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.setentitystate(state",{"_index":1079,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1405,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1408,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1411,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signupconfirmform",{"_index":1675,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":1676,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":1677,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":1685,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":1690,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":1691,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":1678,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":1692,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.spaces",{"_index":606,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.foreach((space",{"_index":611,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.length",{"_index":621,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":626,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject",{"_index":607,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.asobservable",{"_index":609,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":615,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate",{"_index":610,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate[index",{"_index":613,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.speciespile",{"_index":394,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":462,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1031,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject",{"_index":1029,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.asobservable",{"_index":1032,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.next(this.state",{"_index":614,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.transactionstate",{"_index":1386,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":1290,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["timestamp",{"_index":1168,"title":{},"body":{"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{}}}],["title",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["token",{"_index":766,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["top",{"_index":1286,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["total",{"_index":1566,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["track",{"_index":233,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["tracks",{"_index":1572,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["transaction",{"_index":1223,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1330,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":793,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tsc",{"_index":1590,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["tslib",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1316,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1299,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1953,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1379,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["types/src/auth",{"_index":782,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":1112,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["types/src/player",{"_index":1115,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1309,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1246,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unique",{"_index":602,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["unknown",{"_index":1592,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":180,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":1673,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":1708,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":1711,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":1710,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":1709,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":1354,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":1295,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updatedstate",{"_index":1248,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updateon",{"_index":1688,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":1226,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1376,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["url.interceptor.ts",{"_index":1760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":1547,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["used",{"_index":1310,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_password_auth",{"_index":787,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":801,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":1280,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PlayerService.html":{}}}],["v",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1702,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["validators",{"_index":1495,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":1686,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":1687,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1505,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1308,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1955,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1194,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1951,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1301,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":1696,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":1864,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1300,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1294,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1529,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":590,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionDisplaySetupManager\n                            \n                            \n                                ready$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionDisplaySetupManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionDisplayServiceWithSetup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayServiceWithSetup.html":{"url":"interfaces/ActionDisplayServiceWithSetup.html","title":"interface - ActionDisplayServiceWithSetup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayServiceWithSetup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                                \n                                        \n                                            setup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setup:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayServiceWithSetup {\n  ready$: Observable;\n  setup: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionDisplaySetupManager.html":{"url":"classes/ActionDisplaySetupManager.html","title":"class - ActionDisplaySetupManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionDisplaySetupManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionServicesWithSetup\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[])\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionServicesWithSetup\n                                                  \n                                                        \n                                                                    ActionDisplayServiceWithSetup[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionServicesWithSetup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionDisplayServiceWithSetup[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns = signal([]);\n  elements = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns.set(actionPawns);\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements.set(elements);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements(); track $index) {                  }                    @for (actionPawn of actionPawns(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Piece } from '../../../engine/model/piece.model';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  setup(): void {\n    this.replenish();\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n      if (nextSpace) {\n        nextSpace.addPiece(element as Piece);\n      } else {\n        throw new Error('No Spaces available');\n      }\n    });\n    this.elementsSubject.next(this.elements);\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.id),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaState.html":{"url":"interfaces/AreaState.html","title":"interface - AreaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                AreaState does not extend GameStateElement as each Area is unique with a unique ID\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            space\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        space:         SpaceState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpaceState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cognitoClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cognitoClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CognitoIdentityProviderClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  private cognitoClient: CognitoIdentityProviderClient;\n\n  constructor() {\n    this.cognitoClient = new CognitoIdentityProviderClient({\n      region: environment.cognito.region,\n    });\n  }\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                gameStarted\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startGame\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, areaRegistryService: AreaRegistryService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n// import { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  gameStarted = false;\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    // private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private areaRegistryService: AreaRegistryService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  startGame(): void {\n    // this.gameManagementSvc.createGame();\n    // console.log('Create Game');\n    // this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n    //   const factionAssignment = factionAssignments[0];\n    //   this.factions = [this.factionRegistrySvc.get(factionAssignment.id)];\n    //\n    //   this.factions = factionAssignments.map((factionAssignment) =>\n    //     this.factionRegistrySvc.get(factionAssignment.id),\n    //   );\n    //   this.currentPlayerFaction = this.factions.find(\n    //     (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n    //   );\n    // });\n    // this.gameStarted = true;\n  }\n\n  takeAction(): void {\n    // this.gameStateSvc.startTransaction();\n    // const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    // const actionPawn = animal.actionPawn.pullOne();\n    // if (actionPawn) {\n    //   const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n    //     (value) => value === null,\n    //   );\n    //   const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n    //     (value) => value !== null,\n    //   );\n    //   this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n    //   const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n    //   animal.elements.addElement(element);\n    // }\n    // this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Start Game\n      Take Action\n    \n    @if (gameStarted) {\n      \n        \n        \n          @for (faction of factions; track faction.id) {\n            \n          }\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Game      Take Action        @if (gameStarted) {                                @for (faction of factions; track faction.id) {                      }                  }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\nimport { Piece } from '../../engine/model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\n\nimport { ElementKind } from '../constant/element.constant';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionState.html":{"url":"interfaces/FactionState.html","title":"interface - FactionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:31\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameElementState.html":{"url":"interfaces/GameElementState.html","title":"interface - GameElementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameElementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      players: [this.authService.loggedInUsername, ...otherPlayers],\n    });\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Defining the GameState object managed by GameStateStoreService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            area\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            pile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        area:         AreaState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         FactionState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FactionState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pile:         PileState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PileState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactionState } from './faction.model';\nimport { PileState } from './pile.model';\nimport { AreaState } from './area.model';\n\n/**\n * Defining the GameState object managed by GameStateStoreService\n */\nexport interface GameState {\n  area: AreaState[];\n  faction: FactionState[];\n  pile: PileState[];\n}\n\nexport const emptyGameState: GameState = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatePatch.html":{"url":"interfaces/GameStatePatch.html","title":"interface - GameStatePatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStatePatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state-patch.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            patch\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        patch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patch:     Operation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from 'fast-json-patch';\n\nexport interface GameStatePatch {\n  timeStamp: number;\n  patch: Operation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(gameState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameState } from '../../model/game-state.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { applyPatch, compare } from 'fast-json-patch';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      timeStamp: Date.now(),\n      patch: compare(oldState, newState),\n    };\n  }\n\n  apply(gameState: GameState, gsp: GameStatePatch): GameState {\n    return applyPatch(gameState, gsp.patch, undefined, false).newDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { PileState } from '../../model/pile.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { AreaState } from '../../model/area.model';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    const updatedState = this.gspService.apply(this.gameStateStore.gameState, gsp);\n    this.gameStateStore.setGameState(updatedState);\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PileState } from '../../model/pile.model';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { emptyGameState, GameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\nimport { AreaState } from '../../model/area.model';\nimport { GameElementState } from '../../model/game-element.model';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGame\n                        \n                    \n                \n            \n            \n                \njoinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'players', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'players', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.players\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    await this.gameService.createGame(['tester1', 'tester2', 'tester3']);\n    await this.fetchGames();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  joinGame(gameId: string): void {\n    console.log(`Joining game ${gameId}`);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Piece.html":{"url":"interfaces/Piece.html","title":"interface - Piece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Piece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/piece.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { startCase } from 'lodash';\n\nexport interface Piece {\n  kind: string;\n  owner: string | null;\n  name: string;\n}\n\nexport type PieceFactory = (kind: string, owner?: string | null, name?: string | null) => Piece;\n\nexport function defaultPieceFactory(\n  kind: string,\n  owner: string | null = null,\n  name: string | null = null,\n): Piece {\n  return { kind: kind, owner: owner, name: name ? name : startCase(kind) };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:20\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:86\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:39\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:103\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileState.html":{"url":"interfaces/PileState.html","title":"interface - PileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inventory\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inventory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inventory:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addfriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addfriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addfriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addfriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                            Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpaceState.html":{"url":"interfaces/SpaceState.html","title":"interface - SpaceState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpaceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            piece\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        piece\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        piece:         Piece | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Piece | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            interface\n            AreaState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            interface\n            FactionState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            interface\n            GameElementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state-patch.model.ts\n            \n            interface\n            GameStatePatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            GameState\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            interface\n            Piece\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            interface\n            PileState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            interface\n            SpaceState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayServiceWithSetup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            class\n            ActionDisplaySetupManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            baseGameState   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(Router).navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        [ElementEnum.GRASS]: 18,\n        [ElementEnum.GRUB]: 18,\n        [ElementEnum.MEAT]: 18,\n        [ElementEnum.SEED]: 18,\n        [ElementEnum.SUN]: 18,\n        [ElementEnum.WATER]: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
