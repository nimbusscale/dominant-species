var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.705,1,1.054]],["body/interfaces/Action.html",[0,1.09,1,1.899,2,2.453,3,0.233,4,0.233,5,0.207,6,5.217,7,0.106,8,0.685,9,2.428,10,0.896,11,0.156,12,0.015,13,0.233,14,0.013,15,0.013]],["title/injectables/ActionDisplayManagerService.html",[16,0.338,17,2.778]],["body/injectables/ActionDisplayManagerService.html",[1,1.166,3,0.167,4,0.167,5,0.148,7,0.076,8,0.556,11,0.165,12,0.016,13,0.221,14,0.011,15,0.011,16,0.495,17,4.068,18,1.166,19,5.045,20,5.509,21,2.535,22,3.358,23,1.108,24,4.85,25,4.674,26,0.831,27,5.045,28,0.687,29,3.738,30,4.213,31,0.663,32,5.705,33,0.573,34,0.397,35,0.573,36,4.313,37,0.6,38,0.861,39,4.674,40,4.313,41,2.072,42,0.324,43,0.52,44,1.612,45,3.075,46,1.883,47,3.738,48,2.234,49,3.12,50,1.545,51,0.996,52,2.5,53,3.738,54,1.121,55,1.078,56,0.171,57,2.5,58,3.738,59,1.168,60,3.738,61,3.358,62,3.738,63,3.738,64,4.944,65,3.075,66,3.358,67,3.075,68,3.738,69,3.738,70,2.5,71,2.121,72,0.92,73,3.738,74,3.738,75,3.738,76,3.738,77,2.5,78,3.738,79,3.075,80,3.738,81,3.738,82,3.738,83,3.738,84,3.738,85,3.738,86,3.738]],["title/interfaces/ActionDisplayServiceWithSetup.html",[0,0.705,39,2.574]],["body/interfaces/ActionDisplayServiceWithSetup.html",[0,1.046,2,2.355,3,0.224,4,0.224,5,0.198,7,0.102,8,0.669,11,0.177,12,0.015,13,0.224,14,0.013,15,0.013,25,4.994,27,5.39,38,0.732,39,4.529,41,2.302,42,0.275,51,1.335,87,4.501,88,5.009,89,3.974]],["title/classes/ActionDisplaySetupManager.html",[24,2.778,56,0.117]],["body/classes/ActionDisplaySetupManager.html",[1,1.101,3,0.157,4,0.157,5,0.14,7,0.072,8,0.535,11,0.172,12,0.016,13,0.212,14,0.01,15,0.01,16,0.476,17,2.903,19,5.21,20,5.69,21,2.618,22,3.17,23,1.16,24,4.428,25,4.584,26,0.8,27,4.948,28,0.648,30,3.599,31,0.697,33,0.541,34,0.375,35,0.541,37,0.764,38,0.878,39,4.827,41,2.024,42,0.317,43,0.491,44,1.521,45,2.903,46,2.05,47,3.528,48,2.108,49,3.002,50,1.459,51,0.94,52,2.359,53,3.528,54,1.058,55,1.017,56,0.165,57,2.359,58,3.528,59,1.272,60,3.528,61,3.17,62,3.528,63,3.528,64,6.013,65,4.428,66,4.274,67,3.914,68,4.756,69,3.528,70,2.359,71,3.268,72,0.868,73,3.528,74,3.528,75,3.528,76,3.528,77,2.359,78,3.528,79,2.903,80,3.528,81,3.528,82,3.528,83,3.528,84,3.528,85,3.528,86,3.528,90,2.002,91,5.489,92,4.071,93,1.079,94,0.953,95,4.071,96,4.071,97,4.071]],["title/components/ActionPawnComponent.html",[98,0.766,99,1.456]],["body/components/ActionPawnComponent.html",[1,2.013,3,0.149,4,0.149,5,0.132,7,0.068,10,0.727,11,0.1,12,0.016,13,0.149,14,0.01,15,0.01,21,1.381,31,0.634,34,0.627,42,0.309,43,0.464,44,1.44,52,2.234,56,0.116,93,0.758,94,0.669,98,1.187,99,2.428,100,2.063,101,1.57,102,1.57,103,1.57,104,4.201,105,4.498,106,3.34,107,1.57,108,2.253,109,2.253,110,2.696,111,2.81,112,2.355,113,1.895,114,1.548,115,1.895,116,5.288,117,1.895,118,5.288,119,3.494,120,2.825,121,1.676,122,3.302,123,4.305,124,2.825,125,3.799,126,3.854,127,3.854,128,3.854,129,2.748,130,3.854,131,2.748,132,3.854,133,1.642,134,3.263,135,2.108,136,2.378,137,2.748,138,1.996,139,1.895,140,1.381,141,1.381,142,1.128,143,3.854,144,3.854,145,4.118,146,2.748,147,1.57,148,2.155,149,1.287,150,1.57,151,2.647,152,1.57,153,1.57,154,1.44,155,2.155,156,1.44,157,2.155,158,1.44,159,1.222,160,1.44,161,1.57,162,1.44,163,1.272,164,1.381,165,1.57,166,1.44,167,1.57,168,1.44,169,1.44,170,1.57,171,1.44,172,1.57,173,2.647,174,1.381,175,1.381,176,1.44,177,1.503,178,1.381,179,1.895,180,1.818,181,1.381,182,1.381,183,1.381,184,1.57,185,1.57]],["title/interfaces/ActionPawnPiece.html",[0,0.705,124,1.823]],["body/interfaces/ActionPawnPiece.html",[0,1.046,2,2.355,3,0.224,4,0.224,5,0.198,7,0.102,8,0.669,11,0.149,12,0.015,13,0.224,14,0.013,15,0.013,42,0.326,87,4.501,122,4.134,124,3.208,186,5.009,187,2.674,188,3.594,189,5.39,190,5.009,191,1.283,192,1.389,193,1.503]],["title/components/ActionPawnSpaceComponent.html",[98,0.766,154,1.456]],["body/components/ActionPawnSpaceComponent.html",[1,2.05,3,0.154,4,0.154,5,0.137,7,0.07,11,0.103,12,0.016,13,0.154,14,0.01,15,0.01,21,1.43,31,0.389,34,0.499,42,0.328,43,0.481,44,1.492,52,2.314,56,0.12,93,0.785,94,0.693,98,1.209,99,2.464,100,2.113,101,1.626,102,1.626,103,1.626,104,3.342,105,2.637,107,1.626,108,2.308,109,2.308,110,2.708,111,2.822,112,2.984,113,1.941,114,1.585,115,1.941,117,1.941,119,3.578,120,3.226,124,2.877,133,1.701,134,3.342,135,2.183,140,1.941,141,2.362,147,1.626,148,2.207,149,1.311,150,1.626,151,2.686,152,1.626,153,1.626,154,2.464,155,2.207,156,1.492,157,2.207,158,1.492,159,1.265,160,1.492,161,1.626,162,1.492,163,1.317,164,1.43,165,1.626,166,2.464,167,1.626,168,1.492,169,2.464,170,1.626,171,1.492,172,1.626,173,2.686,174,1.43,175,1.43,176,1.492,177,1.557,178,1.43,179,1.941,180,1.862,181,1.43,182,1.43,183,1.43,184,1.626,185,1.626,194,4.694,195,4.218,196,3.108,197,2.535,198,4.694,199,4.694,200,3.459,201,2.846,202,3.108,203,3.992]],["title/components/AdaptionActionDisplayCardComponent.html",[98,0.766,156,1.456]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.113,3,0.127,4,0.127,5,0.113,7,0.113,8,0.461,11,0.085,12,0.016,13,0.127,14,0.009,15,0.009,21,2.764,26,0.688,28,0.523,29,2.846,30,3.872,31,0.59,33,0.436,34,0.51,35,0.436,37,0.457,38,0.416,42,0.347,43,0.396,44,2.681,45,2.342,48,1.701,49,1.796,51,0.758,52,1.903,56,0.099,57,1.903,93,0.929,94,0.82,98,1.089,99,1.227,100,1.843,101,1.338,102,1.338,103,1.338,104,3.958,107,1.338,108,2.014,109,2.014,110,2.638,111,2.749,112,2.159,113,1.693,114,1.383,115,1.693,117,1.693,120,2.211,124,1.537,133,1.399,135,1.796,140,1.693,147,1.338,148,1.925,149,1.368,150,1.338,151,2.467,152,1.338,153,1.338,154,2.263,155,1.925,156,2.263,157,1.925,158,1.227,159,1.041,160,1.227,161,1.338,162,1.227,163,1.084,164,1.177,165,1.338,166,1.227,167,1.338,168,2.263,169,2.263,170,1.338,171,1.227,172,1.338,173,2.467,174,1.177,175,1.177,176,1.227,177,1.281,178,1.177,179,1.693,180,1.625,181,1.177,182,1.177,183,1.177,184,1.338,185,1.338,195,3.68,204,4.764,205,4.995,206,2.557,207,3.68,208,4.31,209,4.095,210,3.028,211,4.095,212,4.095,213,5.559,214,2.863,215,4.715,216,4.726,217,3.284,218,3.322,219,3.284,220,1.796,221,3.37,222,4.095,223,3.284,224,1.465,225,2.026,226,2.846,227,2.557,228,2.026,229,3.284,230,3.284,231,3.284,232,3.284,233,3.284,234,2.846,235,4.317]],["title/injectables/AdaptionActionDisplayService.html",[16,0.338,30,2.258]],["body/injectables/AdaptionActionDisplayService.html",[1,2.044,3,0.099,4,0.099,5,0.088,7,0.094,8,0.383,11,0.173,12,0.016,13,0.099,14,0.007,15,0.007,16,0.34,18,0.692,19,5.388,23,1.062,25,3.154,26,0.572,27,3.818,28,0.625,30,2.274,31,0.733,33,0.711,34,0.493,35,0.711,37,0.883,38,0.803,42,0.337,43,0.308,46,0.844,48,2.032,49,2.146,51,0.591,52,1.483,54,0.665,55,0.639,56,0.077,59,1.341,65,3.404,66,3.056,67,2.798,70,1.483,71,2.633,72,0.545,77,1.483,93,1.371,94,1.21,120,2.234,124,3.207,125,2.773,135,1.399,139,1.258,141,2.184,142,0.829,149,0.545,163,0.844,188,1.93,191,0.568,192,0.615,193,0.665,197,3.064,204,5.388,213,5.281,214,2.719,224,3.057,225,1.578,228,1.578,236,2.217,237,4.774,238,4.774,239,2.597,240,3.404,241,3.404,242,3.924,243,3.924,244,3.4,245,5.354,246,5.775,247,2.558,248,3.76,249,4.524,250,3.924,251,3.924,252,3.891,253,2.558,254,2.558,255,3.924,256,2.558,257,3.924,258,2.558,259,2.558,260,2.558,261,2.558,262,2.558,263,3.924,264,2.558,265,2.558,266,3.924,267,2.558,268,2.558,269,2.558,270,2.798,271,2.558,272,2.558,273,3.924,274,2.558,275,2.558,276,1.69,277,1.578,278,1.399,279,2.558,280,1.69,281,2.217,282,1.69,283,3.154,284,1.69,285,1.325,286,1.824,287,1.578,288,2.558,289,2.558,290,3.924,291,2.558,292,2.558,293,1.69,294,2.558,295,2.217,296,2.558,297,2.558,298,3.924,299,3.4,300,2.217,301,2.558,302,2.558,303,3.154,304,2.558,305,2.558,306,1.69,307,2.558,308,2.558,309,3.924,310,2.558,311,2.558,312,2.558,313,1.578,314,1.53,315,2.558,316,2.592,317,2.558,318,1.992,319,2.558,320,3.924,321,2.558,322,2.558,323,1.399,324,1.824,325,2.558,326,2.558,327,2.217,328,1.824,329,2.558,330,2.558,331,2.558]],["title/classes/Animal.html",[56,0.117,159,1.235]],["body/classes/Animal.html",[0,0.594,1,0.887,3,0.127,4,0.127,5,0.113,7,0.058,8,0.46,9,1.753,10,0.569,11,0.166,12,0.016,13,0.214,14,0.009,15,0.009,23,1.169,28,0.752,31,0.71,33,0.436,34,0.557,35,0.436,38,0.598,42,0.355,46,1.558,51,0.757,56,0.142,59,1.368,72,1.29,90,1.613,120,2.589,121,1.497,124,1.535,129,2.339,135,1.794,139,1.613,142,1.245,149,1.007,159,1.497,197,2.589,214,2.7,224,2.98,228,2.024,239,2.357,240,2.339,241,2.339,270,2.339,280,2.167,283,2.167,284,2.167,285,1.698,286,2.339,287,2.024,303,3.997,306,2.167,314,1.841,316,2.167,323,1.794,324,2.339,328,2.339,332,2.339,333,3.663,334,4.314,335,4.546,336,2.747,337,4.314,338,3.025,339,3.676,340,3.733,341,4.721,342,2.842,343,3.989,344,3.28,345,3.28,346,3.28,347,2.842,348,3.28,349,3.28,350,3.28,351,3.28,352,3.28,353,3.28,354,3.28,355,3.28,356,2.024,357,2.357,358,2.339,359,3.871,360,2.339,361,2.339,362,2.024,363,2.554,364,1.698,365,3.366,366,4.307,367,2.554,368,2.554,369,2.554,370,2.554,371,2.554,372,2.554,373,2.554,374,3.676,375,2.554,376,2.554,377,2.554,378,3.119,379,2.554,380,2.554,381,2.554,382,2.554,383,2.554,384,2.339,385,2.554,386,2.554,387,2.554,388,2.554,389,2.554,390,2.554,391,2.554,392,2.554,393,2.554,394,3.676,395,2.554,396,3.676,397,2.554,398,3.676,399,2.554,400,2.554,401,2.554,402,2.554]],["title/components/AnimalCardComponent.html",[98,0.766,158,1.456]],["body/components/AnimalCardComponent.html",[1,1.669,3,0.102,4,0.102,5,0.091,7,0.103,8,0.392,11,0.068,12,0.016,13,0.102,14,0.008,15,0.008,21,0.946,23,1.008,26,0.586,28,0.64,31,0.695,33,0.351,34,0.448,35,0.351,37,0.677,38,0.616,42,0.353,43,0.318,44,0.987,48,1.367,49,2.199,50,0.946,51,0.61,52,1.53,56,0.079,77,1.53,93,1.213,94,1.071,98,0.957,99,2.034,100,1.568,101,1.076,102,1.076,103,1.076,105,1.744,107,1.076,108,1.713,109,1.713,110,2.547,111,2.655,112,1.03,113,1.44,114,1.425,115,1.44,117,1.44,119,2.656,124,2.547,133,1.125,134,1.629,135,1.444,139,1.298,140,1.44,141,0.946,142,0.458,147,1.076,148,1.638,149,1.249,150,1.076,151,2.218,152,1.076,153,1.076,154,0.987,155,1.638,156,0.987,157,1.638,158,2.034,159,2.034,160,0.987,161,1.076,162,0.987,163,0.871,164,0.946,165,1.076,166,2.034,167,1.076,168,0.987,169,0.987,170,1.076,171,0.987,172,1.076,173,2.218,174,0.946,175,0.946,176,0.987,177,1.03,178,0.946,179,1.44,180,1.382,181,0.946,182,0.946,183,0.946,184,1.076,185,1.076,201,1.882,202,2.056,206,2.056,207,3.13,208,3.791,209,3.484,210,2.663,211,3.484,212,3.484,214,2.613,215,4.238,218,3.033,220,1.444,224,1.178,225,1.629,228,1.629,234,2.288,235,3.881,276,1.744,285,1.367,336,2.407,338,2.199,356,1.629,403,6.247,404,5.613,405,4.868,406,4.868,407,4.868,408,4.868,409,4.868,410,5.857,411,4.868,412,5.857,413,5.857,414,5.443,415,5.443,416,2.64,417,4.076,418,3.958,419,2.64,420,2.64,421,4.02,422,2.64,423,2.64,424,2.64,425,5.857,426,4.02,427,2.64,428,5.443,429,2.64,430,4.02,431,4.02,432,2.64,433,2.64,434,2.64,435,2.64,436,1.744,437,2.64,438,2.288,439,2.64,440,2.64,441,2.64,442,2.288,443,2.288,444,2.056,445,2.056,446,2.288,447,2.64,448,2.64,449,2.64,450,2.64,451,2.64,452,2.64,453,2.64,454,2.64,455,2.64,456,4.02,457,2.64,458,2.64,459,2.64,460,2.64,461,2.64,462,2.64,463,2.64,464,2.64,465,2.64,466,2.64,467,4.02,468,4.02,469,4.02]],["title/interfaces/AnimalConfig.html",[0,0.705,340,2.404]],["body/interfaces/AnimalConfig.html",[0,0.634,1,0.947,2,1.427,3,0.136,4,0.136,5,0.12,7,0.062,8,0.483,9,1.111,10,0.596,11,0.17,12,0.016,13,0.222,14,0.009,15,0.009,23,1.092,28,0.558,34,0.323,38,0.626,42,0.359,46,1.633,51,0.809,56,0.149,59,1.398,72,1.329,120,1.64,124,1.64,135,1.916,139,1.723,142,1.265,149,1.055,159,1.111,197,2.685,214,2.208,224,3.046,228,2.162,239,2.802,240,2.498,241,2.498,270,2.498,280,2.315,283,2.315,284,2.315,285,1.814,286,2.498,287,2.162,303,4.119,306,2.315,314,1.93,316,2.315,323,1.916,324,2.498,328,2.498,332,2.498,333,3.066,334,4.689,335,4.119,336,2.881,337,4.689,338,1.916,339,2.728,340,3.54,343,3.812,356,2.162,357,2.989,358,2.498,359,4.33,360,2.498,361,2.498,362,2.162,363,2.728,364,1.814,365,4.689,366,4.468,367,2.728,368,2.728,369,2.728,370,2.728,371,2.728,372,2.728,373,2.728,374,3.853,375,2.728,376,2.728,377,2.728,378,3.269,379,2.728,380,2.728,381,2.728,382,2.728,383,2.728,384,2.498,385,2.728,386,2.728,387,2.728,388,2.728,389,2.728,390,2.728,391,2.728,392,2.728,393,2.728,394,3.853,395,2.728,396,3.853,397,2.728,398,3.853,399,2.728,400,2.728,401,2.728,402,2.728]],["title/classes/AnimalElements.html",[56,0.117,335,2.574]],["body/classes/AnimalElements.html",[0,0.591,1,0.883,3,0.126,4,0.126,5,0.112,7,0.058,8,0.459,9,1.035,10,0.567,11,0.143,12,0.016,13,0.214,14,0.009,15,0.009,23,1.109,26,0.686,28,0.75,31,0.686,33,0.733,34,0.556,35,0.733,37,0.655,38,0.764,42,0.354,46,1.822,51,0.754,56,0.141,59,1.408,72,1.288,90,1.606,93,0.926,94,0.817,120,1.529,121,1.492,124,1.529,135,1.787,139,1.606,142,1.244,149,1.288,159,1.035,197,2.583,214,2.695,224,3.246,228,2.015,239,2.728,240,2.329,241,3.935,244,4.079,270,3.357,280,2.158,283,2.158,284,2.158,285,1.692,286,2.329,287,2.015,303,3.99,306,2.158,314,1.836,316,2.158,323,1.787,324,2.329,328,2.329,332,2.329,333,2.97,334,3.357,335,4.229,336,2.497,337,3.357,338,1.787,339,2.544,340,2.905,343,3.711,356,2.015,357,2.352,358,2.329,359,4.217,360,2.329,361,2.329,362,2.015,363,2.544,364,1.692,365,3.935,366,4.298,367,4.298,368,2.544,369,2.544,370,2.544,371,2.544,372,2.544,373,3.666,374,3.666,375,2.544,376,2.544,377,3.666,378,3.11,379,2.544,380,2.544,381,2.544,382,2.544,383,2.544,384,2.329,385,2.544,386,4.298,387,2.544,388,2.544,389,4.298,390,2.544,391,2.544,392,2.544,393,2.544,394,3.666,395,2.544,396,3.666,397,2.544,398,3.666,399,2.544,400,2.544,401,2.544,402,2.544,470,4.707,471,3.267,472,4.707,473,3.267,474,3.267,475,3.267,476,3.267,477,3.267,478,3.267,479,3.267,480,3.267,481,3.267]],["title/injectables/AnimalProviderService.html",[16,0.338,417,2.574]],["body/injectables/AnimalProviderService.html",[3,0.124,4,0.124,5,0.11,7,0.056,8,0.453,9,1.731,10,0.658,11,0.164,12,0.016,13,0.124,14,0.009,15,0.009,16,0.403,18,0.867,23,1.191,26,0.677,28,0.74,31,0.696,33,0.795,34,0.551,35,0.795,37,0.833,38,0.758,42,0.345,43,0.386,46,1.803,48,2.406,49,2.541,50,1.665,51,0.741,54,0.834,55,0.802,56,0.096,59,1.461,72,1.457,77,1.859,93,1.178,94,1.039,138,1.661,139,1.577,142,0.806,159,2.167,248,3.695,276,3.608,277,1.979,278,2.987,281,2.779,293,2.119,333,2.686,334,2.287,336,2.73,337,2.287,340,4.217,342,2.779,356,1.979,359,1.859,360,2.287,361,2.287,365,2.287,417,3.069,482,6.278,483,2.779,484,5.462,485,4.733,486,5.462,487,5.988,488,4.645,489,4.645,490,5.988,491,3.207,492,4.217,493,4.515,494,4.645,495,4.645,496,4.645,497,3.207,498,4.645,499,3.207,500,3.207,501,3.069,502,3.207,503,3.207,504,4.645,505,3.207,506,2.7,507,3.207,508,2.287,509,3.207,510,2.287,511,1.979,512,2.119,513,2.497,514,3.207,515,3.207,516,3.207,517,3.207,518,3.207,519,2.779,520,3.207,521,3.207,522,3.207,523,3.207,524,3.207,525,2.779,526,3.207,527,4.645,528,3.207,529,5.462,530,3.207,531,3.207,532,3.207,533,3.207,534,3.207,535,4.645,536,3.207,537,3.207,538,4.645,539,3.207,540,3.207,541,3.207,542,3.207,543,3.207,544,3.207,545,3.207,546,3.207,547,3.207,548,3.207,549,3.207,550,3.207,551,2.287,552,3.207,553,3.207,554,3.207,555,3.207,556,3.207]],["title/components/AppComponent.html",[98,0.766,160,1.456]],["body/components/AppComponent.html",[1,1.741,3,0.169,4,0.169,5,0.15,7,0.077,8,0.562,10,0.527,11,0.113,12,0.015,13,0.169,14,0.011,15,0.011,21,1.567,31,0.427,34,0.53,42,0.307,43,0.527,44,1.635,55,1.439,56,0.131,93,0.86,94,0.759,98,1.266,99,1.635,100,2.246,101,1.782,102,1.782,103,1.782,107,1.782,110,2.738,111,2.853,112,1.706,113,2.063,114,1.685,115,2.063,117,2.063,140,2.063,147,1.782,148,2.346,149,1.373,150,1.782,151,2.787,152,1.782,153,1.782,154,1.635,155,2.346,156,1.635,157,2.346,158,1.635,159,1.387,160,2.556,161,1.782,162,2.556,163,1.444,164,2.307,165,1.782,166,1.635,167,1.782,168,1.635,169,1.635,170,1.782,171,1.635,172,1.782,173,2.787,174,1.567,175,1.567,176,1.635,177,1.706,178,1.567,179,2.063,180,1.98,181,1.567,182,1.567,183,1.567,184,1.782,185,1.782,338,3.149,557,3.791,558,6.437,559,5.758,560,5.758,561,6.437,562,4.99,563,4.374,564,2.265,565,4.374,566,3.406,567,4.374]],["title/classes/Area.html",[56,0.117,239,1.66]],["body/classes/Area.html",[3,0.136,4,0.136,5,0.12,7,0.101,8,0.483,9,1.976,10,0.822,11,0.191,12,0.016,13,0.136,14,0.009,15,0.009,23,1.11,26,0.721,28,0.558,31,0.735,33,0.762,34,0.528,35,0.762,37,0.868,38,0.726,41,1.899,42,0.297,46,2.058,51,0.809,56,0.105,59,1.277,70,2.031,71,3.066,72,1.055,90,1.723,141,2.234,142,0.608,187,1.93,191,0.778,192,0.842,193,1.71,197,3.41,239,2.445,299,3.036,303,2.315,313,2.162,314,1.93,316,4.935,327,4.288,333,3.356,364,1.814,568,3.036,569,3.711,570,5.737,571,6.4,572,3.733,573,3.529,574,3.269,575,4.949,576,3.269,577,4.091,578,4.949,579,4.949,580,3.503,581,3.503,582,3.503,583,2.031,584,3.406,585,2.728,586,2.728,587,2.728,588,3.503,589,4.949,590,3.503,591,2.821,592,3.036,593,3.269,594,4.119,595,3.503,596,1.916,597,2.728,598,3.503,599,1.111,600,3.503,601,3.503,602,3.503,603,5.737,604,3.503,605,3.503,606,3.503,607,3.503,608,3.503,609,3.503,610,3.503,611,2.728,612,4.949,613,2.728,614,3.036,615,3.036,616,3.036,617,3.853,618,3.503,619,3.503,620,3.503,621,2.498,622,3.503,623,3.503,624,3.503,625,3.503,626,3.503]],["title/injectables/AreaRegistryService.html",[16,0.338,248,2.404]],["body/injectables/AreaRegistryService.html",[3,0.172,4,0.172,5,0.152,7,0.078,8,0.567,9,1.407,10,0.7,11,0.189,12,0.016,13,0.172,14,0.011,15,0.011,16,0.504,18,1.2,23,1.116,26,0.847,28,0.707,31,0.728,33,0.861,34,0.597,35,0.861,37,0.809,38,0.562,41,1.351,42,0.34,43,0.535,50,2.083,54,1.154,55,1.109,56,0.133,59,1.328,93,1.353,94,1.194,149,0.946,187,2.267,191,0.985,192,1.066,193,1.154,214,1.98,239,2.477,248,3.586,277,3.586,278,2.427,501,2.931,506,2.641,584,3.794,594,2.931,599,1.407,627,2.083,628,2.738,629,4.439,630,3.179,631,4.145,632,3.762,633,3.01,634,4.437,635,4.905,636,3.845,637,5.812,638,3.455,639,3.545,640,2.931,641,3.845,642,3.455,643,3.164,644,3.455,645,3.455,646,3.164,647,3.455,648,3.845,649,2.182,650,2.738,651,4.437]],["title/injectables/AreaStateService.html",[16,0.338,635,2.778]],["body/injectables/AreaStateService.html",[3,0.163,4,0.163,5,0.145,7,0.074,8,0.547,9,1.335,10,0.676,11,0.187,12,0.016,13,0.163,14,0.011,15,0.011,16,0.487,18,1.139,23,1.141,26,0.818,31,0.73,33,0.895,34,0.62,35,0.895,37,0.977,38,0.853,42,0.321,43,0.507,50,2.012,54,1.095,55,1.052,56,0.127,59,1.15,71,3.106,93,1.104,94,0.974,121,1.78,142,0.731,149,0.898,187,2.19,191,0.934,192,1.012,193,1.46,239,2.991,277,3.464,506,2.287,572,4.031,584,3.817,594,4.451,599,1.335,627,2.012,630,3.07,632,3.07,633,2.907,635,4.003,639,3.454,648,3.648,649,2.07,652,2.597,653,4.438,654,4.003,655,4.003,656,4.003,657,4.504,658,5.614,659,3.278,660,4.003,661,3.278,662,3.002,663,3.278,664,3.278,665,3.002,666,3.278,667,3.002,668,3.278,669,3.278,670,3.002,671,3.278,672,4.21,673,4.21,674,4.21]],["title/injectables/AuthService.html",[16,0.338,675,2.018]],["body/injectables/AuthService.html",[3,0.136,4,0.136,5,0.121,7,0.062,8,0.484,10,0.846,11,0.177,12,0.016,13,0.136,14,0.009,15,0.009,16,0.43,18,0.95,23,1.139,26,0.722,28,0.79,31,0.721,33,0.829,34,0.575,35,0.829,37,0.916,38,0.628,41,1.75,42,0.341,43,0.423,46,1.897,51,0.811,54,0.913,55,0.878,56,0.106,59,1.016,72,1.225,79,4.097,114,1.028,121,1.572,125,2.568,142,1.219,175,1.777,177,2.435,285,1.82,314,1.37,323,1.922,333,3.36,675,2.568,676,3.045,677,4.98,678,5.746,679,4.959,680,5.746,681,3.331,682,4.959,683,5.06,684,5.746,685,3.045,686,4.513,687,5.007,688,4.959,689,4.959,690,5.409,691,3.513,692,5.746,693,3.513,694,4.297,695,3.618,696,3.513,697,2.213,698,2.874,699,3.513,700,4.959,701,3.513,702,3.513,703,3.513,704,3.513,705,3.513,706,3.513,707,3.536,708,2.321,709,3.045,710,3.513,711,2.736,712,2.736,713,2.736,714,2.736,715,3.513,716,2.505,717,3.045,718,3.513,719,3.513,720,3.513,721,3.513,722,3.513,723,3.513,724,2.736,725,3.513,726,3.513,727,3.045,728,3.513,729,3.045,730,3.513,731,3.045,732,3.513,733,2.168,734,3.513,735,3.513,736,3.513,737,3.513,738,3.513,739,3.513,740,2.168,741,4.959,742,3.513,743,3.513,744,3.513,745,3.513,746,3.513,747,3.513,748,3.513,749,3.513]],["title/injectables/CognitoClientService.html",[16,0.338,686,2.574]],["body/injectables/CognitoClientService.html",[3,0.132,4,0.132,5,0.117,7,0.06,8,0.474,10,0.957,11,0.168,12,0.016,13,0.132,14,0.009,15,0.009,16,0.422,18,0.925,23,0.863,26,0.709,28,0.902,31,0.66,33,0.819,34,0.6,35,0.819,37,0.858,38,0.616,42,0.31,43,0.412,54,0.889,55,0.855,56,0.103,59,1.263,72,1.486,94,0.594,114,1.424,134,3.494,141,1.743,142,1.236,175,1.743,179,1.226,180,1.176,191,0.759,681,4.2,686,3.214,690,2.964,694,4.216,695,4.259,697,3.233,698,3.926,707,2.439,711,2.664,712,2.664,713,2.664,714,2.664,724,2.664,733,3.494,740,3.002,750,6.038,751,2.439,752,5.663,753,4.216,754,4.866,755,4.216,756,4.866,757,4.216,758,4.398,759,3.421,760,4.866,761,3.421,762,3.421,763,5.663,764,3.421,765,4.216,766,4.647,767,3.421,768,6.168,769,3.421,770,3.421,771,4.866,772,3.421,773,3.421,774,3.421,775,3.421,776,2.964,777,3.421,778,3.421,779,3.421,780,3.421,781,3.421,782,3.421,783,5.663,784,5.663,785,3.421,786,5.663,787,3.421,788,5.663,789,6.168,790,5.663,791,3.421,792,5.663,793,4.866,794,4.866,795,3.421,796,3.421,797,3.421,798,3.421,799,3.421,800,3.469,801,3.421,802,3.421]],["title/components/DrawPoolGameComponent.html",[98,0.766,162,1.456]],["body/components/DrawPoolGameComponent.html",[1,1.876,3,0.091,4,0.091,5,0.081,7,0.042,8,0.359,10,0.444,11,0.144,12,0.016,13,0.091,14,0.007,15,0.007,21,1.626,23,1.021,26,0.537,28,0.587,30,3.571,31,0.639,33,0.313,34,0.418,35,0.313,37,0.631,38,0.746,42,0.355,43,0.284,44,0.882,45,1.682,48,1.222,49,2.016,51,0.545,56,0.071,70,1.368,71,2.522,72,1.257,77,1.368,93,1.094,94,1.137,98,0.892,99,1.916,100,1.438,101,0.961,102,0.961,103,0.961,105,1.559,107,0.961,110,2.495,111,2.6,112,0.92,113,1.321,114,1.328,115,1.321,117,1.321,120,2.123,125,3.302,140,1.321,141,1.321,147,0.961,148,1.502,149,1.093,150,0.961,151,2.089,152,0.961,153,0.961,154,0.882,155,1.502,156,1.916,157,1.502,158,1.916,159,1.438,160,0.882,161,0.961,162,1.916,163,2.034,164,2.756,165,0.961,166,1.916,167,0.961,168,1.916,169,1.916,170,0.961,171,0.882,172,0.961,173,2.089,174,0.845,175,0.845,176,0.882,177,0.92,178,0.845,179,1.321,180,1.267,181,0.845,182,0.845,183,0.845,184,0.961,185,0.961,201,1.682,202,1.837,204,2.628,205,1.837,221,1.682,222,2.045,226,2.045,235,2.628,239,1.933,248,3.801,276,3.675,277,1.456,278,2.016,280,1.559,282,1.559,284,1.559,293,1.559,295,2.045,336,2.486,356,1.456,404,1.837,417,4.07,418,3.801,442,2.045,443,2.045,445,1.837,492,3.164,511,1.456,525,2.045,551,2.628,566,5.218,599,1.764,649,1.16,740,2.274,803,5.807,804,2.045,805,2.481,806,3.931,807,3.686,808,3.686,809,4.537,810,4.537,811,5.563,812,5.563,813,4.537,814,5.128,815,5.128,816,2.045,817,3.388,818,4.537,819,3.686,820,3.194,821,2.359,822,2.359,823,2.359,824,2.359,825,2.359,826,2.359,827,2.359,828,3.686,829,2.359,830,1.29,831,2.045,832,1.368,833,3.686,834,2.359,835,1.837,836,2.359,837,2.359,838,2.359,839,2.359,840,2.359,841,2.359,842,2.359,843,2.359,844,1.559,845,2.359,846,3.686,847,3.686,848,2.359,849,2.359,850,1.837,851,2.359,852,2.359,853,2.359,854,2.359,855,2.359,856,2.359,857,2.359,858,2.359,859,2.359,860,2.359,861,2.359,862,2.359,863,2.359,864,2.87,865,3.686]],["title/components/ElementComponent.html",[98,0.766,166,1.456]],["body/components/ElementComponent.html",[1,1.659,3,0.154,4,0.154,5,0.136,7,0.07,10,0.739,11,0.103,12,0.016,13,0.154,14,0.01,15,0.01,21,1.423,31,0.642,34,0.634,42,0.313,43,0.479,44,1.484,56,0.119,93,0.781,94,0.69,98,1.206,99,1.484,100,2.106,101,1.618,102,1.618,103,1.618,107,1.618,108,2.3,109,2.3,110,2.706,111,2.821,112,1.549,113,1.934,114,1.58,115,1.934,117,1.934,119,3.567,121,1.711,123,4.373,125,3.826,129,2.832,131,2.832,133,1.693,134,3.331,136,2.451,137,2.832,138,2.057,139,1.953,140,1.423,142,1.142,146,2.832,147,1.618,148,2.2,149,1.575,150,1.618,151,2.681,152,1.618,153,1.618,154,1.484,155,2.2,156,1.484,157,2.2,158,1.484,159,1.259,160,1.484,161,1.618,162,1.484,163,1.311,164,1.423,165,1.618,166,2.459,167,1.618,168,1.484,169,1.484,170,1.618,171,1.484,172,1.618,173,2.681,174,1.423,175,1.423,176,1.484,177,1.549,178,1.423,179,1.934,180,1.856,181,1.423,182,1.423,183,1.423,184,1.618,185,1.618,224,2.736,225,2.451,591,3.016,866,3.442,867,5.399,868,5.399,869,3.972,870,3.972,871,3.972,872,3.972,873,3.972,874,3.972,875,3.972,876,4.678]],["title/interfaces/ElementConfig.html",[0,0.705,359,2.258]],["body/interfaces/ElementConfig.html",[0,0.861,2,1.937,3,0.184,4,0.184,5,0.163,7,0.084,8,0.593,11,0.173,12,0.016,13,0.235,14,0.012,15,0.012,42,0.319,50,1.703,59,0.974,72,1.296,252,3.883,282,3.141,359,3.523,510,3.39,591,3.845,877,3.702,878,3.702,879,5.692,880,6.776,881,5.035,882,3.702,883,4.754,884,4.754,885,3.39,886,4.12,887,3.702,888,3.702,889,4.12,890,4.12,891,4.12,892,3.702,893,4.12,894,5.682,895,4.12,896,3.702,897,4.12,898,4.12,899,3.702,900,4.12,901,4.12,902,3.702,903,4.12,904,4.12,905,3.702,906,4.12,907,4.12]],["title/injectables/ElementDrawPoolService.html",[16,0.338,249,2.778]],["body/injectables/ElementDrawPoolService.html",[3,0.139,4,0.139,5,0.123,7,0.063,8,0.491,11,0.178,12,0.016,13,0.139,14,0.01,15,0.01,16,0.437,18,0.971,23,1.163,25,4.667,26,0.733,28,0.572,31,0.724,33,0.772,34,0.535,35,0.772,37,0.809,38,0.798,41,1.919,42,0.336,43,0.433,46,1.919,48,1.859,49,2.754,51,0.829,54,0.933,55,0.897,56,0.108,57,2.081,59,1.191,61,2.796,65,4.146,67,3.59,70,2.081,71,3.099,77,2.081,93,1.305,94,1.152,114,1.051,121,1.596,125,3.264,141,1.286,142,1.094,163,2.477,188,2.476,191,0.797,192,0.863,193,0.933,224,3.07,225,2.215,249,3.59,252,2.918,276,2.372,278,1.964,293,2.372,314,1.4,357,2.685,358,2.56,493,4.163,512,2.372,740,3.106,908,6.503,909,3.111,910,5.814,911,3.92,912,3.92,913,5.814,914,4.527,915,3.59,916,5.035,917,5.035,918,3.59,919,5.035,920,3.59,921,2.796,922,3.326,923,3.92,924,3.59,925,2.796,926,3.59,927,3.59,928,5.035,929,3.59,930,3.59,931,3.59,932,2.796,933,3.59,934,2.796,935,3.59,936,3.59,937,3.59,938,3.59,939,6.302,940,3.59,941,3.59,942,3.59,943,3.59,944,3.59,945,3.59,946,3.59]],["title/interfaces/ElementPiece.html",[0,0.705,224,1.738]],["body/interfaces/ElementPiece.html",[0,1.037,2,2.333,3,0.222,4,0.222,5,0.197,7,0.101,8,0.665,11,0.148,12,0.015,13,0.222,14,0.013,15,0.013,42,0.325,122,4.122,141,2.052,187,2.659,188,3.58,191,1.271,192,1.376,193,1.489,224,3.042,591,3.706,881,5.373,947,4.962,948,5.726]],["title/components/ElementSpaceComponent.html",[98,0.766,168,1.456]],["body/components/ElementSpaceComponent.html",[1,1.663,3,0.154,4,0.154,5,0.137,7,0.07,10,0.481,11,0.103,12,0.016,13,0.154,14,0.01,15,0.01,21,1.43,31,0.528,34,0.499,42,0.328,43,0.481,44,1.492,56,0.12,93,0.785,94,0.693,98,1.209,99,1.492,100,2.113,101,1.626,102,1.626,103,1.626,104,3.793,107,1.626,108,2.308,109,2.308,110,2.708,111,2.822,112,1.557,113,1.941,114,1.585,115,1.941,117,1.941,119,3.578,121,1.717,123,4.384,131,2.846,133,1.701,134,3.342,136,2.463,137,2.846,138,2.067,139,1.963,140,1.941,141,2.362,142,0.693,146,2.846,147,1.626,148,2.207,149,1.664,150,1.626,151,2.686,152,1.626,153,1.626,154,1.492,155,2.207,156,1.492,157,2.207,158,1.492,159,1.265,160,1.492,161,1.626,162,1.492,163,1.317,164,1.43,165,1.626,166,2.464,167,1.626,168,2.464,169,1.492,170,1.626,171,1.492,172,1.626,173,2.686,174,1.43,175,1.43,176,1.492,177,1.557,178,1.43,179,1.941,180,1.862,181,1.43,182,1.43,183,1.43,184,1.626,185,1.626,196,3.108,197,2.535,198,4.694,199,4.694,200,3.459,201,2.846,221,4.384,224,2.743,225,2.463,378,2.637,835,4.787,949,3.992]],["title/components/EyeballComponent.html",[98,0.766,169,1.456]],["body/components/EyeballComponent.html",[1,1.747,3,0.17,4,0.17,5,0.151,7,0.078,10,0.531,12,0.015,13,0.17,14,0.011,15,0.011,21,1.579,31,0.43,34,0.533,42,0.308,43,0.531,44,1.646,56,0.132,98,1.27,99,1.646,100,2.256,101,1.795,102,1.795,103,1.795,104,3.569,107,1.795,108,2.465,109,2.465,110,2.74,111,2.855,112,1.718,113,2.073,114,1.693,115,2.073,117,2.073,121,1.834,123,4.606,131,3.141,133,1.877,136,2.718,137,3.141,138,2.282,139,2.166,140,1.579,142,0.765,146,3.141,147,1.795,148,2.357,149,1.377,150,1.795,151,2.795,152,1.795,153,1.795,154,1.646,155,2.357,156,1.646,157,2.357,158,1.646,159,1.397,160,1.646,161,1.795,162,1.646,163,1.454,164,1.579,165,1.795,166,1.646,167,1.795,168,1.646,169,2.563,170,1.795,171,1.646,172,1.795,173,2.795,174,1.579,175,1.579,176,1.646,177,1.718,178,1.579,179,2.073,180,1.989,181,1.579,182,1.579,183,1.579,184,1.795,185,1.795,950,3.818,951,5.598,952,5.785,953,5.785,954,4.405]],["title/classes/Faction.html",[56,0.117,336,1.52]],["body/classes/Faction.html",[3,0.159,4,0.159,5,0.141,7,0.072,8,0.538,10,0.664,11,0.189,12,0.016,13,0.159,14,0.01,15,0.01,26,0.803,31,0.75,33,0.885,34,0.674,35,0.885,37,0.968,38,0.942,41,1.248,42,0.263,46,1.353,56,0.123,90,2.015,121,1.748,129,2.922,142,1.082,187,2.15,191,0.909,192,0.985,193,1.808,252,4.416,336,2.15,364,2.122,506,1.67,569,3.854,572,3.918,573,3.931,574,3.642,576,3.642,577,4.443,583,3.612,584,3.602,585,3.191,586,3.191,587,3.191,593,2.707,596,2.241,597,3.191,599,1.299,955,3.551,956,5.513,957,5.513,958,5.513,959,4.852,960,6.231,961,5.513,962,4.098,963,7.163,964,5.513,965,4.098,966,5.513,967,4.098,968,3.551,969,3.191,970,2.375,971,2.922,972,2.922,973,3.191,974,3.191,975,2.375,976,2.375,977,4.098,978,4.098,979,4.098,980,4.098,981,4.098,982,2.528,983,4.098,984,4.098,985,6.664,986,4.852]],["title/interfaces/FactionAssignment.html",[0,0.705,844,2.574]],["body/interfaces/FactionAssignment.html",[0,0.879,2,1.979,3,0.188,4,0.188,5,0.167,7,0.086,8,0.601,9,2.328,10,0.904,11,0.159,12,0.016,13,0.238,14,0.012,15,0.012,16,0.534,23,0.939,38,0.615,41,1.876,42,0.357,43,0.585,46,2.034,51,1.122,54,1.263,55,1.214,56,0.146,59,0.995,149,1.036,187,1.894,191,1.078,192,1.167,193,1.263,278,2.657,336,2.639,492,2.997,511,2.997,551,3.463,599,1.54,613,3.782,627,1.74,628,2.997,629,3.571,640,3.209,649,2.388,650,2.997,844,4.852,850,3.782,959,5.719,982,2.997,987,3.782,988,4.07,989,4.209,990,4.209,991,4.209,992,4.209,993,4.209,994,4.209,995,4.209,996,4.209,997,4.209]],["title/injectables/FactionRegistryService.html",[16,0.338,492,2.404]],["body/injectables/FactionRegistryService.html",[0,0.689,3,0.147,4,0.147,5,0.131,7,0.067,8,0.511,9,1.901,10,0.779,11,0.189,12,0.016,13,0.203,14,0.01,15,0.01,16,0.455,18,1.029,23,1.166,26,0.764,28,0.606,31,0.733,33,0.797,34,0.552,35,0.797,37,0.73,38,0.664,41,1.968,42,0.334,43,0.459,46,1.98,50,1.879,51,0.879,54,0.99,55,0.951,56,0.114,59,1.388,93,1.412,94,1.246,149,0.812,187,2.045,191,0.845,192,0.915,193,0.99,214,1.699,278,2.082,336,2.644,492,3.235,501,2.515,506,2.444,511,4.183,551,2.714,584,3.629,599,1.207,613,2.964,627,2.429,628,2.349,629,4.302,630,2.868,631,3.739,632,3.535,633,2.716,638,2.964,639,2.082,640,3.464,642,2.964,643,2.714,644,2.964,645,2.964,646,2.714,647,2.964,649,1.872,650,2.349,844,4.904,850,2.964,959,4.083,982,2.349,987,2.964,988,4.27,989,5.198,990,4.544,991,4.544,992,4.544,993,3.299,994,3.299,995,3.299,996,3.299,997,3.299,998,3.807,999,3.807,1000,3.807,1001,3.807,1002,3.807,1003,3.807]],["title/injectables/FactionStateService.html",[16,0.338,988,2.574]],["body/injectables/FactionStateService.html",[3,0.163,4,0.163,5,0.145,7,0.074,8,0.547,9,1.335,10,0.676,11,0.187,12,0.016,13,0.163,14,0.011,15,0.011,16,0.487,18,1.139,23,1.141,26,0.818,31,0.73,33,0.895,34,0.62,35,0.895,37,0.977,38,0.853,42,0.321,43,0.507,50,2.012,54,1.095,55,1.052,56,0.127,59,1.15,71,3.106,93,1.104,94,0.974,121,1.78,142,0.731,149,0.898,187,2.19,191,0.934,192,1.012,193,1.46,336,2.737,506,2.287,511,3.464,572,4.031,584,3.817,599,1.335,627,2.012,630,3.07,632,3.07,633,2.907,639,3.454,649,2.07,652,2.597,653,4.438,654,4.003,655,4.003,656,4.003,657,4.504,659,3.278,660,4.003,661,3.278,662,3.002,663,3.278,664,3.278,665,3.002,666,3.278,667,3.002,668,3.278,669,3.278,670,3.002,671,3.278,982,4.157,987,3.278,988,3.709,1004,5.614,1005,4.21,1006,4.21,1007,4.21]],["title/classes/GameElement.html",[56,0.117,569,2.018]],["body/classes/GameElement.html",[3,0.16,4,0.16,5,0.142,7,0.073,8,0.541,9,2.12,10,0.498,11,0.18,12,0.016,13,0.16,14,0.011,15,0.011,26,0.808,28,0.658,31,0.727,33,0.736,34,0.511,35,0.736,37,0.772,38,0.792,41,1.906,42,0.298,46,2.065,51,0.954,56,0.124,59,1.135,90,2.032,121,1.758,142,0.962,191,0.917,192,0.993,193,2.028,314,1.612,347,3.581,506,2.259,569,2.871,572,4.13,573,4.462,574,4.134,576,3.663,577,4.768,583,4.423,593,3.663,596,3.422,611,3.218,614,3.581,615,3.581,617,3.218,969,4.317,970,3.214,971,3.953,972,3.953,973,4.317,974,4.317,975,3.214,976,3.214,1008,5.88,1009,3.581,1010,4.317,1011,5.544,1012,4.132,1013,4.132,1014,4.132,1015,4.132,1016,4.132,1017,3.581,1018,4.132,1019,2.946,1020,2.73,1021,2.73,1022,2.73,1023,2.946,1024,5.544,1025,3.581,1026,4.132,1027,3.581,1028,3.581,1029,4.132,1030,4.132,1031,2.946,1032,4.132,1033,4.132,1034,3.581]],["title/injectables/GameElementRegistryService.html",[16,0.338,629,2.258]],["body/injectables/GameElementRegistryService.html",[3,0.153,4,0.153,5,0.136,7,0.07,8,0.524,9,1.938,10,0.737,11,0.183,12,0.016,13,0.153,14,0.01,15,0.01,16,0.466,18,1.067,23,1.14,26,0.783,28,0.629,31,0.707,33,0.812,34,0.563,35,0.812,37,0.748,38,0.68,41,1.862,42,0.337,43,0.476,46,1.303,50,2.351,51,0.911,54,1.026,55,0.986,56,0.119,59,1.485,93,1.29,94,1.139,138,2.044,142,0.685,149,1.613,187,1.539,191,0.876,192,0.948,193,1.026,214,1.761,314,1.539,364,2.044,501,3.551,506,2.886,569,2.044,599,1.251,627,2.643,628,2.435,629,3.116,630,3.343,631,4.358,632,3.875,633,2.784,639,3.755,640,3.551,643,3.833,646,3.833,649,1.941,650,2.435,653,3.116,716,2.814,975,2.288,1023,2.814,1035,5.745,1036,3.947,1037,6.562,1038,5.375,1039,5.375,1040,3.947,1041,3.947,1042,3.947,1043,3.947,1044,3.947,1045,3.073,1046,3.42,1047,3.42,1048,3.947,1049,3.42,1050,3.42,1051,3.42,1052,3.947,1053,3.42,1054,3.073,1055,3.947,1056,3.947]],["title/injectables/GameElementStateService.html",[16,0.338,653,2.258]],["body/injectables/GameElementStateService.html",[3,0.137,4,0.137,5,0.121,7,0.062,8,0.485,9,1.826,10,0.694,11,0.182,12,0.016,13,0.137,14,0.009,15,0.009,16,0.431,18,0.954,23,1.151,26,0.725,28,0.562,31,0.712,33,0.876,34,0.607,35,0.876,37,0.918,38,0.909,41,1.515,42,0.326,43,0.425,50,2.241,51,0.815,54,0.917,55,0.882,56,0.106,59,1.35,70,2.045,71,3.075,72,0.752,93,0.978,94,0.863,121,1.577,138,1.827,142,0.612,149,1.623,191,0.783,192,0.848,193,1.293,314,1.376,364,1.827,506,2.548,569,1.827,572,3.845,599,1.119,627,2.651,630,3.15,632,3.15,633,2.576,639,3.992,649,1.735,650,2.177,652,2.177,653,2.883,654,3.546,655,3.546,656,3.546,657,4.107,660,3.546,662,3.546,665,3.546,667,2.516,670,2.516,716,2.516,816,3.058,817,4.132,820,4.31,832,2.045,975,2.045,1023,4.46,1035,5.76,1045,2.748,1046,6.221,1047,3.058,1049,3.058,1050,3.058,1051,3.058,1053,3.058,1054,2.748,1057,4.974,1058,3.529,1059,3.058,1060,3.529,1061,4.974,1062,3.529,1063,3.529,1064,3.058,1065,3.529,1066,3.529,1067,3.529,1068,3.529,1069,3.529,1070,3.529,1071,3.529,1072,3.529,1073,3.529,1074,3.529,1075,3.529,1076,3.529]],["title/injectables/GameManagementClientService.html",[16,0.338,1077,2.574]],["body/injectables/GameManagementClientService.html",[3,0.138,4,0.138,5,0.122,7,0.063,10,0.881,11,0.177,12,0.016,13,0.138,14,0.009,15,0.009,16,0.434,18,0.961,23,0.762,26,0.728,28,0.796,31,0.701,33,0.911,34,0.631,35,0.911,37,0.98,42,0.327,43,0.428,51,0.821,54,0.924,55,0.888,56,0.107,72,1.066,114,1.04,142,1.089,191,1.109,192,0.854,599,2.174,627,2.619,675,3.648,681,4.583,697,2.95,698,4.447,733,4.346,751,2.534,1077,3.302,1078,6.335,1079,4.829,1080,3.893,1081,3.893,1082,4.332,1083,5.437,1084,5.437,1085,4.999,1086,4.999,1087,3.554,1088,6.274,1089,3.554,1090,4.999,1091,3.893,1092,3.554,1093,2.348,1094,4.999,1095,3.554,1096,4.332,1097,3.554,1098,3.554,1099,3.554,1100,4.999,1101,3.554,1102,4.999,1103,5.148,1104,3.554,1105,3.554,1106,2.767,1107,4.999,1108,5.782,1109,4.332,1110,2.767,1111,3.554,1112,3.554,1113,4.999,1114,3.08,1115,3.554,1116,3.554,1117,3.554,1118,3.554,1119,3.554,1120,3.554,1121,3.554,1122,3.554,1123,3.554,1124,3.554]],["title/injectables/GameService.html",[16,0.338,1125,2.778]],["body/injectables/GameService.html",[3,0.174,4,0.174,5,0.155,7,0.079,9,1.427,10,0.886,11,0.169,12,0.016,13,0.174,14,0.011,15,0.011,16,0.509,18,1.218,23,0.894,26,0.855,28,0.935,31,0.675,33,0.867,34,0.601,35,0.867,37,0.908,42,0.342,43,0.542,54,1.171,55,1.125,56,0.135,72,0.96,142,0.781,191,0.999,192,1.082,599,2.069,627,2.57,675,3.809,681,4.451,698,4.263,708,2.974,733,4.028,1077,4.949,1079,2.974,1080,4.569,1081,4.569,1083,5.994,1091,4.569,1093,4.57,1106,3.506,1114,5.085,1125,4.184,1126,3.901,1127,3.506,1128,4.502,1129,4.502,1130,5.868,1131,4.502,1132,5.868,1133,4.502,1134,5.868,1135,3.901,1136,4.502,1137,3.901,1138,3.901,1139,4.502,1140,4.502,1141,4.502]],["title/injectables/GameStateClientService.html",[16,0.338,1142,2.778]],["body/injectables/GameStateClientService.html",[3,0.205,4,0.205,5,0.182,7,0.093,11,0.137,12,0.015,13,0.205,14,0.012,15,0.012,16,0.564,18,1.432,26,0.947,31,0.634,33,0.703,34,0.488,35,0.703,37,0.737,38,0.823,41,1.98,42,0.335,43,0.638,51,1.223,54,1.377,55,1.324,56,0.159,121,2.061,142,0.919,191,1.175,192,1.272,193,1.908,627,2.522,751,3.776,832,4.079,970,4.254,1142,4.637,1143,6.503,1144,6.503,1145,5.715,1146,5.296,1147,5.296,1148,5.296,1149,5.296,1150,5.296]],["title/injectables/GameStatePatchService.html",[16,0.338,1151,2.778]],["body/injectables/GameStatePatchService.html",[3,0.18,4,0.18,5,0.16,7,0.082,11,0.155,12,0.016,13,0.18,14,0.011,15,0.011,16,0.52,18,1.259,26,0.874,31,0.585,33,0.796,34,0.552,35,0.796,37,0.834,42,0.316,43,0.561,54,1.21,55,1.164,56,0.14,72,0.993,125,2.411,142,1.041,191,1.033,192,1.119,193,1.821,596,3.965,627,2.377,740,2.872,832,3.845,922,3.075,970,3.845,976,4.596,1019,3.319,1020,3.075,1021,3.075,1022,3.961,1093,3.075,1145,5.779,1151,4.276,1152,4.034,1153,3.075,1154,5.196,1155,5.996,1156,5.996,1157,5.996,1158,5.996,1159,5.996,1160,4.655,1161,5.996,1162,5.996,1163,4.655,1164,5.996,1165,4.655,1166,4.655,1167,4.034,1168,4.655,1169,4.655,1170,5.996,1171,4.655,1172,4.655,1173,4.655,1174,4.655,1175,4.655,1176,4.655]],["title/injectables/GameStateService.html",[16,0.338,817,2.574]],["body/injectables/GameStateService.html",[0,0.786,3,0.113,4,0.113,5,0.1,7,0.052,11,0.176,12,0.016,13,0.113,14,0.008,15,0.008,16,0.377,18,0.791,23,0.977,26,0.633,28,0.692,31,0.73,33,0.906,34,0.628,35,0.906,37,1.001,38,0.982,41,1.745,42,0.305,43,0.352,48,1.515,51,0.676,54,0.761,55,0.731,56,0.088,59,0.889,72,0.624,121,1.377,142,0.899,191,0.649,192,0.703,193,1.773,239,2.207,314,2.235,318,3.381,323,1.6,336,2.02,357,2.207,594,4.387,596,3.508,599,1.642,627,2.701,652,1.805,708,1.933,800,3.096,817,3.786,832,4.369,970,3.322,976,2.517,982,4.097,1059,2.535,1064,2.535,1142,4.086,1145,4.462,1151,4.086,1153,1.933,1177,3.763,1178,4.342,1179,4.342,1180,4.342,1181,4.342,1182,3.763,1183,4.342,1184,4.342,1185,4.342,1186,4.966,1187,3.763,1188,3.763,1189,3.763,1190,5.731,1191,4.966,1192,3.763,1193,3.763,1194,3.763,1195,4.966,1196,2.925,1197,4.086,1198,5.179,1199,5.179,1200,4.342,1201,4.342,1202,2.925,1203,3.763,1204,2.925,1205,3.763,1206,2.925,1207,3.763,1208,4.097,1209,2.925,1210,2.925,1211,5.305,1212,4.488,1213,4.342,1214,4.342,1215,4.342,1216,2.925,1217,3.763,1218,2.925,1219,3.763,1220,2.925,1221,3.763,1222,2.925,1223,2.925,1224,2.535,1225,2.925,1226,2.535,1227,2.925,1228,2.535,1229,2.925,1230,2.925,1231,2.925,1232,2.925,1233,2.925,1234,2.925,1235,2.925,1236,2.925,1237,5.179,1238,2.535,1239,2.925,1240,2.925,1241,2.925,1242,2.925,1243,2.925,1244,2.925,1245,2.535,1246,2.925,1247,2.925,1248,2.925,1249,2.925,1250,2.925,1251,2.925,1252,2.925,1253,2.925,1254,2.925]],["title/injectables/GameStateStoreService.html",[16,0.338,1197,2.778]],["body/injectables/GameStateStoreService.html",[3,0.063,4,0.063,5,0.056,7,0.081,8,0.266,11,0.17,12,0.016,13,0.063,14,0.005,15,0.005,16,0.237,18,0.44,23,1.086,26,0.6,28,0.561,31,0.695,33,0.83,34,0.562,35,0.811,37,0.903,38,0.914,41,1.81,42,0.219,43,0.196,46,1.162,50,0.583,51,0.376,54,0.423,55,0.407,56,0.049,59,1.385,72,0.879,89,0.943,93,0.536,94,0.715,110,0.559,121,0.865,141,1.983,142,0.961,149,0.879,191,0.361,192,0.391,193,1.95,214,0.726,239,1.5,293,1.802,314,2.158,318,1.267,323,1.492,336,1.373,357,2.248,384,1.945,506,1.435,519,2.363,583,1.581,591,2.026,594,3.485,596,3.604,621,1.945,627,2.571,633,2.979,709,2.363,832,4.159,864,2.124,894,2.124,922,2.722,970,1.581,971,1.945,972,1.945,975,2.388,976,4.519,982,3.255,1019,1.16,1020,1.075,1021,1.075,1022,1.075,1023,3.762,1031,2.938,1034,2.363,1045,1.267,1054,3.209,1079,1.802,1153,2.326,1154,2.363,1177,2.363,1182,2.363,1186,4.303,1187,2.363,1188,2.363,1189,2.363,1191,4.303,1192,2.363,1193,2.363,1194,3.571,1195,4.303,1197,3.946,1203,2.363,1205,2.363,1207,2.363,1208,3.255,1211,5.415,1212,3.571,1217,2.363,1219,2.363,1221,2.363,1224,1.41,1226,1.41,1228,1.41,1238,1.41,1245,3.571,1255,1.41,1256,2.727,1257,2.727,1258,2.727,1259,2.727,1260,2.363,1261,2.727,1262,2.124,1263,2.727,1264,2.727,1265,2.727,1266,5.534,1267,2.727,1268,4.12,1269,2.727,1270,2.727,1271,2.727,1272,2.727,1273,4.12,1274,4.966,1275,2.938,1276,2.727,1277,2.727,1278,2.727,1279,4.353,1280,2.727,1281,6.375,1282,2.727,1283,2.727,1284,3.574,1285,2.363,1286,2.727,1287,5.534,1288,4.12,1289,2.727,1290,2.727,1291,4.964,1292,2.727,1293,2.727,1294,4.12,1295,2.938,1296,3.571,1297,3.541,1298,2.727,1299,2.727,1300,2.363,1301,2.727,1302,3.051,1303,2.727,1304,4.12,1305,2.727,1306,4.12,1307,2.134,1308,2.727,1309,2.363,1310,3.521,1311,3.521,1312,3.521,1313,2.727,1314,2.727,1315,3.521,1316,3.521,1317,3.521,1318,2.727,1319,2.727,1320,1.627,1321,1.627,1322,2.727,1323,1.627,1324,1.627,1325,1.627,1326,1.627,1327,1.627,1328,6.105,1329,1.627,1330,6.905,1331,2.727,1332,2.727,1333,4.12,1334,1.627,1335,1.627,1336,1.627,1337,2.727,1338,1.627,1339,1.627,1340,1.627,1341,1.627,1342,4.589,1343,2.727,1344,2.727,1345,1.627,1346,2.727,1347,1.627,1348,1.627,1349,1.627,1350,1.627,1351,1.627,1352,1.627,1353,1.627,1354,1.627,1355,1.627,1356,1.267,1357,1.627,1358,3.521,1359,1.627,1360,1.627,1361,1.627,1362,1.627,1363,1.627,1364,2.727,1365,5.753,1366,1.627,1367,1.627,1368,2.727,1369,1.627,1370,2.727,1371,2.727,1372,2.727,1373,2.727,1374,1.627,1375,2.727,1376,2.727,1377,1.627,1378,1.627,1379,1.627,1380,1.627,1381,2.727,1382,1.627,1383,1.627,1384,1.627,1385,1.627,1386,1.627,1387,1.627,1388,1.627,1389,1.41,1390,1.627,1391,1.627,1392,1.627,1393,1.627,1394,3.521,1395,1.627,1396,1.627,1397,1.627,1398,1.627,1399,1.627,1400,1.627,1401,1.627,1402,1.627,1403,1.627]],["title/components/LobbyPageComponent.html",[98,0.766,171,1.456]],["body/components/LobbyPageComponent.html",[1,1.34,3,0.105,4,0.105,5,0.093,7,0.087,8,0.401,9,1.303,10,0.839,11,0.153,12,0.016,13,0.105,14,0.008,15,0.008,21,0.974,23,0.626,26,0.599,28,0.655,31,0.666,33,0.734,34,0.575,35,0.734,37,0.826,38,0.627,42,0.332,43,0.328,44,1.016,56,0.082,93,0.975,94,0.86,98,0.975,99,1.016,100,1.603,101,1.108,102,1.108,103,1.108,107,1.108,110,2.56,111,2.668,112,1.06,113,1.473,114,1.203,115,1.473,117,1.473,140,1.473,142,0.472,147,1.108,148,1.675,149,1.057,150,1.108,151,2.251,152,1.108,153,1.108,154,1.016,155,1.675,156,1.016,157,1.675,158,1.016,159,0.862,160,1.016,161,1.108,162,1.016,163,0.897,164,0.974,165,1.108,166,1.016,167,1.108,168,1.016,169,1.016,170,1.108,171,2.065,172,2.64,173,2.251,174,0.974,175,1.776,176,1.016,177,1.06,178,0.974,179,1.473,180,1.413,181,0.974,182,0.974,183,1.776,184,1.108,185,1.108,191,0.912,192,0.653,218,2.567,235,2.931,333,2.437,418,3.999,445,2.117,599,1.978,681,3.959,698,3.617,733,3.409,805,2.711,806,4.295,830,1.487,831,2.356,1080,3.201,1081,4.302,1091,3.201,1093,3.92,1103,4.86,1110,2.117,1125,4.45,1137,4.788,1138,4.788,1300,3.562,1404,6.033,1405,6.033,1406,1.408,1407,4.956,1408,4.956,1409,4.956,1410,4.956,1411,4.956,1412,4.956,1413,4.956,1414,4.956,1415,4.956,1416,4.956,1417,4.956,1418,4.956,1419,4.956,1420,4.956,1421,2.248,1422,2.248,1423,4.295,1424,4.295,1425,4.956,1426,5.525,1427,4.111,1428,4.111,1429,2.719,1430,4.111,1431,2.719,1432,2.719,1433,2.719,1434,5.525,1435,2.719,1436,4.111,1437,2.719,1438,4.111,1439,2.719,1440,2.719,1441,4.111,1442,2.719,1443,2.719,1444,2.719,1445,2.719,1446,2.719,1447,2.719,1448,4.956,1449,2.719,1450,2.719,1451,5.933,1452,2.719,1453,2.719,1454,2.719,1455,2.719,1456,2.719,1457,2.719,1458,2.719,1459,2.719,1460,2.719,1461,4.111,1462,4.111,1463,4.111,1464,4.111,1465,4.111]],["title/injectables/LocalStorageService.html",[16,0.338,687,2.778]],["body/injectables/LocalStorageService.html",[3,0.194,4,0.194,5,0.172,7,0.088,10,0.968,11,0.177,12,0.015,13,0.194,14,0.012,15,0.012,16,0.545,18,1.356,26,0.916,31,0.67,33,0.912,34,0.632,35,0.912,37,0.956,38,0.911,42,0.239,43,0.604,54,1.304,55,1.254,56,0.151,94,1.25,141,2.253,142,0.871,687,4.483,1279,4.537,1466,6.239,1467,4.346,1468,6.287,1469,6.287,1470,6.287,1471,6.287,1472,5.015,1473,6.287,1474,5.015,1475,6.287,1476,5.015,1477,5.015,1478,5.015,1479,5.015]],["title/interfaces/LoginFormData.html",[0,0.705,1480,2.778]],["body/interfaces/LoginFormData.html",[0,0.818,2,1.841,3,0.175,4,0.175,5,0.155,7,0.08,8,0.574,10,0.887,11,0.152,12,0.016,13,0.175,14,0.011,15,0.011,23,0.997,28,0.72,38,0.828,42,0.351,43,0.544,56,0.136,72,0.964,98,1.157,108,1.925,109,1.925,110,1.554,111,1.619,113,1.619,114,1.323,115,1.619,117,1.619,133,1.925,140,1.619,174,1.619,175,2.343,183,1.619,210,3.217,218,3.046,220,2.471,564,2.34,675,3.387,695,4.268,697,3.285,805,3.217,830,2.471,1307,2.34,1406,2.34,1421,2.471,1422,2.471,1480,4.663,1481,3.519,1482,3.519,1483,4.035,1484,3.629,1485,3.629,1486,2.788,1487,2.619,1488,3.79,1489,5.097,1490,3.519,1491,3.629,1492,3.916,1493,2.619,1494,3.916,1495,2.788,1496,3.629,1497,2.788,1498,3.916,1499,3.916,1500,3.916,1501,3.222,1502,2.788,1503,3.916,1504,3.916,1505,2.788,1506,2.788,1507,2.788,1508,2.788]],["title/components/LoginPageComponent.html",[98,0.766,174,1.396]],["body/components/LoginPageComponent.html",[0,0.607,1,1.514,3,0.13,4,0.13,5,0.115,7,0.059,8,0.468,10,0.578,11,0.124,12,0.016,13,0.13,14,0.009,15,0.009,21,1.201,23,0.853,26,0.699,28,0.764,31,0.596,33,0.445,34,0.516,35,0.445,37,0.466,38,0.773,42,0.32,43,0.404,44,1.252,56,0.101,72,0.715,93,0.659,94,0.582,98,1.101,99,1.252,100,1.87,101,1.365,102,1.365,103,1.365,107,1.365,108,2.043,109,2.043,110,2.646,111,2.757,112,1.307,113,1.718,114,1.403,115,1.718,117,1.718,133,1.428,140,1.718,147,1.365,148,1.953,149,1.194,150,1.365,151,2.49,152,1.365,153,1.365,154,1.252,155,1.953,156,1.252,157,1.953,158,1.252,159,1.062,160,1.252,161,1.365,162,1.252,163,1.106,164,1.201,165,1.365,166,1.252,167,1.365,168,1.252,169,1.252,170,1.365,171,1.252,172,1.365,173,2.49,174,2.19,175,2.584,176,1.252,177,1.307,178,1.201,179,2.19,180,2.101,181,2.006,182,1.201,183,2.006,184,1.365,185,1.365,210,3.062,218,2.899,220,1.833,564,1.735,675,3.587,695,3.748,697,2.885,805,3.062,830,1.833,1307,1.735,1406,1.735,1421,2.622,1422,2.622,1480,3.419,1481,5.035,1482,5.035,1483,4.15,1484,3.454,1485,3.454,1486,2.068,1487,1.942,1488,4.014,1489,4.851,1490,2.609,1491,3.454,1492,4.851,1493,4.014,1494,2.904,1495,2.068,1496,2.958,1497,3.77,1498,2.904,1499,2.904,1500,2.904,1501,2.389,1502,2.068,1503,2.904,1504,2.904,1505,2.068,1506,2.068,1507,2.068,1508,2.068,1509,2.609,1510,3.733,1511,2.904,1512,2.904,1513,4.795]],["title/components/LogoutPageComponent.html",[98,0.766,176,1.456]],["body/components/LogoutPageComponent.html",[1,1.687,3,0.159,4,0.159,5,0.141,7,0.072,11,0.106,12,0.015,13,0.159,14,0.01,15,0.01,21,1.471,23,0.841,26,0.804,28,0.879,31,0.538,33,0.545,34,0.574,35,0.545,37,0.571,38,0.699,42,0.297,43,0.495,44,1.534,56,0.123,98,1.226,99,1.534,100,2.153,101,1.672,102,1.672,103,1.672,107,1.672,110,2.717,111,2.832,112,1.601,113,1.978,114,1.615,115,1.978,117,1.978,140,1.471,147,1.672,148,2.249,149,1.33,150,1.672,151,2.717,152,1.672,153,1.672,154,1.534,155,2.249,156,1.534,157,2.249,158,1.534,159,1.301,160,1.534,161,1.672,162,1.534,163,1.355,164,1.471,165,1.672,166,1.534,167,1.672,168,1.534,169,1.534,170,1.672,171,1.534,172,1.672,173,2.717,174,1.471,175,1.471,176,2.492,177,2.941,178,1.471,179,1.978,180,1.898,181,1.471,182,1.471,183,2.494,184,1.672,185,1.672,207,4.298,208,4.856,215,5.193,564,2.126,675,3.711,1127,3.196,1406,2.126,1421,3.019,1422,3.019,1488,4.244,1490,3.196,1514,5.404,1515,5.404,1516,4.105,1517,4.105,1518,4.105,1519,3.196,1520,5.519]],["title/classes/Pile.html",[56,0.117,357,1.66]],["body/classes/Pile.html",[3,0.093,4,0.093,5,0.083,7,0.043,8,0.366,10,0.452,11,0.178,12,0.016,13,0.145,14,0.007,15,0.007,23,1.063,26,0.547,28,0.385,31,0.717,33,0.69,34,0.478,35,0.69,37,0.939,38,0.787,41,1.713,42,0.247,46,1.714,51,0.558,56,0.113,57,1.4,59,0.495,72,1.27,89,2.176,90,1.188,93,0.475,94,0.652,121,1.19,122,2.518,141,2.417,142,1.145,145,2.923,163,1.239,164,1.861,187,1.464,188,3.585,191,0.536,192,0.58,193,1.616,252,3.982,313,3.964,333,2.928,343,1.4,357,3.276,364,1.251,436,2.48,506,0.984,569,3.327,572,3.257,573,2.677,574,2.48,576,2.48,577,3.283,583,3.724,584,2.913,585,1.88,586,1.88,587,1.88,591,3.378,593,1.595,596,1.321,597,1.88,599,0.766,621,1.722,911,2.923,912,4.044,914,5.003,921,4.636,922,4.105,923,3.585,925,5.986,932,1.88,968,2.093,969,1.88,970,1.4,971,1.722,972,1.722,973,1.88,974,1.88,975,1.4,976,1.4,986,1.88,1010,2.923,1031,3.703,1153,3.431,1208,3.204,1262,2.923,1275,3.283,1279,3.431,1284,2.923,1291,2.923,1295,4.011,1297,2.677,1307,1.944,1521,1.88,1522,4.5,1523,3.99,1524,5.1,1525,4.5,1526,3.253,1527,4.874,1528,3.754,1529,3.99,1530,3.253,1531,3.253,1532,3.253,1533,3.253,1534,3.253,1535,3.253,1536,3.253,1537,2.415,1538,2.415,1539,2.415,1540,2.415,1541,3.99,1542,2.415,1543,3.253,1544,4.044,1545,4.044,1546,3.253,1547,3.253,1548,3.253,1549,2.415,1550,2.415,1551,3.253,1552,2.415,1553,3.253,1554,2.093,1555,1.88,1556,2.093,1557,2.093,1558,2.093,1559,2.093,1560,2.093,1561,2.093,1562,2.093,1563,2.093,1564,3.253,1565,3.253,1566,2.093,1567,2.093,1568,2.093,1569,2.093,1570,2.093,1571,1.88,1572,3.253,1573,3.253,1574,2.093,1575,3.253,1576,3.253,1577,2.093,1578,2.093,1579,3.253,1580,3.253,1581,2.093,1582,1.88,1583,3.253,1584,3.253,1585,3.253,1586,2.093,1587,2.093]],["title/classes/PileAdapter.html",[56,0.117,343,2.258]],["body/classes/PileAdapter.html",[3,0.118,4,0.118,5,0.105,7,0.054,10,0.367,11,0.137,12,0.016,13,0.173,14,0.009,15,0.009,23,0.891,26,0.652,28,0.485,31,0.656,33,0.704,34,0.488,35,0.704,37,0.867,38,0.74,41,1.616,42,0.278,46,1.478,51,0.704,56,0.135,57,1.767,59,0.624,72,1.388,89,1.767,90,1.499,93,0.599,94,0.777,121,1.419,122,1.667,141,2.473,142,1.223,145,3.486,163,1.006,164,1.604,187,1.189,188,3.521,191,0.677,192,0.732,193,1.164,252,3.9,313,4.259,333,2.201,343,2.595,357,3.233,364,1.579,436,2.957,569,2.318,583,4.001,591,3.062,599,0.966,621,2.174,911,2.374,912,4.131,914,5.374,921,4.552,922,4.301,923,4.131,925,5.869,932,3.486,986,2.374,1010,2.374,1031,4.169,1208,2.762,1262,2.374,1275,2.174,1279,2.957,1284,2.374,1291,2.374,1295,3.192,1297,2.174,1307,1.579,1521,2.374,1522,3.879,1523,2.642,1524,4.798,1525,2.642,1526,3.879,1527,5.396,1529,2.642,1530,2.642,1531,2.642,1532,2.642,1533,2.642,1534,2.642,1535,2.642,1536,2.642,1541,4.597,1543,2.642,1544,3.486,1545,3.486,1546,2.642,1547,2.642,1548,2.642,1551,2.642,1553,2.642,1554,2.642,1555,2.374,1556,2.642,1557,2.642,1558,2.642,1559,2.642,1560,2.642,1561,2.642,1562,2.642,1563,2.642,1564,3.879,1565,3.879,1566,2.642,1567,2.642,1568,2.642,1569,2.642,1570,2.642,1571,2.374,1572,3.879,1573,3.879,1574,2.642,1575,3.879,1576,3.879,1577,2.642,1578,2.642,1579,3.879,1580,3.879,1581,2.642,1582,2.374,1583,3.879,1584,3.879,1585,3.879,1586,2.642,1587,2.642,1588,3.048,1589,3.048,1590,3.048,1591,3.048,1592,3.048,1593,3.048,1594,3.048]],["title/interfaces/PileConfig.html",[0,0.705,1595,3.034]],["body/interfaces/PileConfig.html",[0,0.912,2,2.052,3,0.195,4,0.195,5,0.173,7,0.089,8,0.615,10,0.913,11,0.163,12,0.016,13,0.244,14,0.012,15,0.012,42,0.3,50,1.804,59,1.031,72,1.074,120,3.693,338,4.317,508,3.591,885,3.591,886,4.364,887,3.921,888,3.921,892,3.921,896,3.921,899,3.921,902,3.921,905,3.921,934,3.921,1595,4.908,1596,3.921,1597,3.921,1598,5.036,1599,4.364,1600,4.364,1601,4.364,1602,4.364,1603,4.364,1604,4.364,1605,4.364,1606,4.364,1607,4.364,1608,4.364,1609,4.364,1610,4.364]],["title/injectables/PileRegistryService.html",[16,0.338,493,2.574]],["body/injectables/PileRegistryService.html",[3,0.172,4,0.172,5,0.152,7,0.078,8,0.567,9,1.407,10,0.7,11,0.189,12,0.016,13,0.172,14,0.011,15,0.011,16,0.504,18,1.2,23,1.116,26,0.847,28,0.707,31,0.728,33,0.861,34,0.597,35,0.861,37,0.809,38,0.562,41,1.351,42,0.34,43,0.535,50,2.083,54,1.154,55,1.109,56,0.133,59,1.328,93,1.353,94,1.194,149,0.946,187,2.267,191,0.985,192,1.066,193,1.154,214,1.98,278,2.427,357,2.477,493,3.84,501,2.931,506,2.641,512,3.84,584,3.794,599,1.407,627,2.083,628,2.738,629,4.439,630,3.179,631,4.145,632,3.762,633,3.01,636,3.845,638,3.455,639,3.545,640,2.931,641,3.845,642,3.455,643,3.164,644,3.455,645,3.455,646,3.164,647,3.455,649,2.182,650,2.738,1208,2.738,1611,4.437,1612,4.905,1613,5.812,1614,3.845,1615,4.437]],["title/injectables/PileStateService.html",[16,0.338,1612,2.778]],["body/injectables/PileStateService.html",[3,0.163,4,0.163,5,0.145,7,0.074,8,0.547,9,1.335,10,0.676,11,0.187,12,0.016,13,0.163,14,0.011,15,0.011,16,0.487,18,1.139,23,1.141,26,0.818,31,0.73,33,0.895,34,0.62,35,0.895,37,0.977,38,0.853,42,0.321,43,0.507,50,2.012,54,1.095,55,1.052,56,0.127,59,1.15,71,3.106,93,1.104,94,0.974,121,1.78,142,0.731,149,0.898,187,2.19,191,0.934,192,1.012,193,1.46,357,2.991,506,2.287,512,3.709,572,4.031,584,3.817,599,1.335,627,2.012,630,3.07,632,3.07,633,2.907,639,3.454,649,2.07,652,2.597,653,4.438,654,4.003,655,4.003,656,4.003,657,4.504,659,3.278,660,4.003,661,3.278,662,3.002,663,3.278,664,3.278,665,3.002,666,3.278,667,3.002,668,3.278,669,3.278,670,3.002,671,3.278,1208,4.157,1612,4.003,1614,3.648,1616,5.614,1617,4.21,1618,4.21,1619,4.21]],["title/interfaces/PlayerAuthData.html",[0,0.705,683,2.574]],["body/interfaces/PlayerAuthData.html",[0,1.022,2,2.301,3,0.219,4,0.219,5,0.194,7,0.099,8,0.659,10,0.962,11,0.194,12,0.015,13,0.219,14,0.013,15,0.013,252,4.195,683,4.467,697,3.347,727,6.501,729,6.501,731,6.501,1620,4.894]],["title/injectables/PlayerService.html",[16,0.338,418,2.404]],["body/injectables/PlayerService.html",[3,0.147,4,0.147,5,0.131,7,0.067,8,0.511,10,0.894,11,0.181,12,0.016,13,0.147,14,0.01,15,0.01,16,0.454,18,1.028,23,1.032,26,0.763,28,0.834,31,0.7,33,0.858,34,0.595,35,0.858,37,0.834,42,0.334,43,0.458,46,1.978,51,0.878,54,0.988,55,0.95,56,0.114,59,1.073,72,0.81,93,1.179,94,1.04,125,3.509,142,0.66,191,0.844,285,1.968,314,1.482,418,3.232,599,1.205,627,2.62,675,3.627,677,3.294,681,4.301,697,2.882,698,4.059,708,2.511,716,2.71,733,3.698,800,2.71,1077,4.741,1079,2.511,1082,4.539,1084,3.294,1096,4.539,1103,5.03,1106,2.96,1109,3.294,1110,2.96,1127,2.96,1423,6.069,1571,2.96,1621,3.294,1622,5.993,1623,5.238,1624,5.238,1625,5.238,1626,5.238,1627,3.801,1628,3.801,1629,5.238,1630,3.801,1631,3.801,1632,5.238,1633,5.238,1634,3.801,1635,3.801,1636,3.801,1637,3.801,1638,5.238,1639,5.238,1640,3.801,1641,3.801,1642,3.801,1643,3.801,1644,3.801,1645,5.238,1646,3.801,1647,3.801,1648,5.238]],["title/interfaces/SignUpConfirmFormData.html",[0,0.705,1649,2.778]],["body/interfaces/SignUpConfirmFormData.html",[0,0.802,2,1.805,3,0.171,4,0.171,5,0.152,7,0.078,8,0.566,10,0.882,11,0.15,12,0.016,13,0.171,14,0.011,15,0.011,23,0.987,28,0.705,38,0.82,42,0.349,43,0.534,56,0.133,72,0.944,98,1.142,108,1.887,109,1.887,110,1.523,111,1.587,113,1.587,114,1.296,115,1.587,117,1.587,133,1.887,140,1.587,178,1.587,179,2.321,180,2.518,181,2.557,183,1.587,210,3.175,218,3.007,220,2.423,564,2.294,697,3.267,758,5.221,805,3.175,830,2.423,1307,2.294,1406,2.294,1421,2.423,1422,2.423,1483,3.996,1484,3.582,1485,3.582,1486,2.733,1487,2.567,1488,3.754,1491,3.582,1493,2.567,1495,2.733,1496,3.582,1497,2.733,1502,2.733,1505,2.733,1506,2.733,1507,2.733,1508,2.733,1519,3.449,1649,4.618,1650,2.926,1651,2.926,1652,3.754,1653,3.158,1654,3.158,1655,3.838,1656,3.838,1657,3.838,1658,3.838,1659,3.838,1660,3.838,1661,3.158,1662,3.838]],["title/components/SignUpConfirmPageComponent.html",[98,0.766,178,1.396]],["body/components/SignUpConfirmPageComponent.html",[0,0.583,1,1.48,3,0.125,4,0.125,5,0.111,7,0.057,8,0.454,10,0.561,11,0.12,12,0.016,13,0.125,14,0.009,15,0.009,21,1.154,23,0.834,26,0.679,28,0.742,31,0.585,33,0.428,34,0.504,35,0.428,37,0.448,38,0.759,42,0.316,43,0.388,44,1.203,56,0.097,72,0.687,93,0.633,94,0.559,98,1.076,99,1.203,100,1.817,101,1.312,102,1.312,103,1.312,107,1.312,108,1.985,109,1.985,110,2.63,111,2.741,112,1.256,113,1.669,114,1.363,115,1.669,117,1.669,133,1.372,140,1.669,147,1.312,148,1.898,149,1.167,150,1.312,151,2.444,152,1.312,153,1.312,154,1.203,155,1.898,156,1.203,157,1.898,158,1.203,159,1.021,160,1.203,161,1.312,162,1.203,163,1.063,164,1.154,165,1.312,166,1.203,167,1.312,168,1.203,169,1.203,170,1.312,171,1.203,172,1.312,173,2.444,174,1.154,175,1.154,176,1.203,177,1.256,178,2.15,179,2.598,180,2.689,181,2.803,182,1.154,183,1.961,184,1.312,185,1.312,210,2.994,218,2.835,220,1.761,564,1.667,697,2.84,758,4.539,805,2.994,830,1.761,1307,1.667,1406,1.667,1421,2.548,1422,2.548,1483,4.094,1484,3.378,1485,3.378,1486,1.987,1487,1.866,1488,3.966,1491,3.378,1493,3.966,1495,1.987,1496,2.874,1497,3.702,1502,1.987,1505,1.987,1506,1.987,1507,1.987,1508,1.987,1509,2.507,1510,3.628,1511,2.79,1512,2.79,1519,2.507,1649,3.322,1650,4.205,1651,4.205,1652,3.966,1653,2.296,1654,2.296,1655,4.744,1656,2.79,1657,2.79,1658,2.79,1659,2.79,1660,2.79,1661,2.296,1662,2.79]],["title/interfaces/SignUpFormData.html",[0,0.705,1663,2.778]],["body/interfaces/SignUpFormData.html",[0,0.774,2,1.742,3,0.165,4,0.165,5,0.147,7,0.075,8,0.553,10,0.916,11,0.164,12,0.016,13,0.165,14,0.011,15,0.011,23,0.97,28,0.681,38,0.806,42,0.345,43,0.515,56,0.129,72,0.912,98,1.115,108,1.822,109,1.822,110,1.47,111,1.532,113,1.532,114,1.251,115,1.532,117,1.532,133,1.822,140,1.532,179,2.281,180,2.543,181,1.532,182,1.532,183,1.532,210,3.102,218,2.937,220,2.338,564,2.214,695,4.203,697,3.235,766,5.275,805,3.102,830,2.338,1307,2.214,1406,2.214,1421,2.338,1422,2.338,1483,3.927,1484,3.5,1485,3.5,1486,2.638,1487,2.478,1488,3.689,1491,3.5,1493,2.478,1495,2.638,1496,3.927,1497,2.638,1501,3.049,1502,2.638,1505,2.638,1506,2.638,1507,2.638,1508,2.638,1650,2.825,1651,2.825,1652,3.689,1653,3.049,1654,3.049,1661,3.049,1663,4.539,1664,4.915,1665,3.705,1666,3.705,1667,3.705,1668,3.705,1669,3.705,1670,3.705,1671,3.705,1672,3.705,1673,3.705,1674,3.705]],["title/components/SignUpPageComponent.html",[98,0.766,182,1.396]],["body/components/SignUpPageComponent.html",[0,0.549,1,1.431,3,0.117,4,0.117,5,0.104,7,0.053,8,0.435,10,0.637,11,0.115,12,0.016,13,0.117,14,0.008,15,0.008,21,1.087,23,0.806,26,0.65,28,0.71,31,0.569,33,0.403,34,0.487,35,0.403,37,0.422,38,0.738,42,0.309,43,0.366,44,1.134,56,0.091,72,0.647,93,0.596,94,0.527,98,1.04,99,1.134,100,1.74,101,1.236,102,1.236,103,1.236,107,1.236,108,1.901,109,1.901,110,2.606,111,2.717,112,1.183,113,1.598,114,1.305,115,1.598,117,1.598,133,1.293,140,1.598,147,1.236,148,1.817,149,1.128,150,1.236,151,2.376,152,1.236,153,1.236,154,1.134,155,1.817,156,1.134,157,1.817,158,1.134,159,0.962,160,1.134,161,1.236,162,1.134,163,1.001,164,1.087,165,1.236,166,1.134,167,1.236,168,1.134,169,1.134,170,1.236,171,1.134,172,1.236,173,2.376,174,1.087,175,1.087,176,1.134,177,1.183,178,1.087,179,2.629,180,2.696,181,1.598,182,2.09,183,1.896,184,1.236,185,1.236,210,2.893,218,2.74,220,1.659,564,1.571,695,3.894,697,2.773,766,4.915,805,2.893,830,1.659,1307,1.571,1406,1.571,1421,2.44,1422,2.44,1424,3.865,1483,4.01,1484,3.264,1485,3.264,1486,1.872,1487,1.758,1488,3.894,1491,3.264,1493,3.894,1495,1.872,1496,3.264,1497,3.599,1501,2.163,1502,1.872,1505,1.872,1506,1.872,1507,1.872,1508,1.872,1509,2.362,1510,2.362,1650,4.106,1651,4.106,1652,3.894,1653,2.163,1654,2.163,1661,2.163,1663,3.18,1664,4.584,1665,4.584,1666,2.629,1667,2.629,1668,2.629,1669,2.629,1670,2.629,1671,2.629,1672,2.629,1673,2.629,1674,2.629,1675,4.46,1676,3.033,1677,4.46,1678,4.46,1679,4.46,1680,4.46,1681,4.46,1682,4.46,1683,4.46,1684,4.46,1685,4.46,1686,4.46,1687,4.46]],["title/injectables/SignUpService.html",[16,0.338,1652,2.258]],["body/injectables/SignUpService.html",[3,0.188,4,0.188,5,0.166,7,0.085,10,0.967,11,0.175,12,0.015,13,0.188,14,0.012,15,0.012,16,0.534,18,1.311,26,0.897,28,0.772,31,0.659,33,0.898,34,0.623,35,0.898,37,0.856,42,0.293,43,0.584,54,1.26,55,1.212,56,0.146,57,2.81,142,1.068,681,4.348,685,4.201,686,4.955,695,4.122,697,2.746,698,4.122,707,3.457,708,3.202,753,5.333,755,5.333,757,5.333,758,5.071,765,5.333,766,5.071,1652,3.567,1688,6.163,1689,4.201,1690,4.848,1691,4.848,1692,4.848,1693,4.848,1694,4.848]],["title/classes/Space.html",[56,0.117,197,1.823]],["body/classes/Space.html",[1,1.92,3,0.141,4,0.141,5,0.125,7,0.064,8,0.497,10,0.805,11,0.187,12,0.016,13,0.141,14,0.01,15,0.01,23,1.121,26,0.743,28,0.582,31,0.741,33,0.779,34,0.54,35,0.779,37,0.817,38,0.743,41,1.788,42,0.302,51,0.844,56,0.11,59,1.301,72,0.779,90,1.797,93,1.002,94,0.885,121,1.616,141,2.479,142,1.102,188,3.847,191,0.811,192,0.878,193,1.846,197,2.972,314,2.289,323,1.999,333,2.886,571,5.995,574,3.878,576,3.367,591,3.491,593,3.367,596,1.999,611,3.969,616,3.167,617,2.845,876,5.086,975,2.118,1017,3.167,1019,3.634,1020,2.414,1021,2.414,1022,2.414,1025,3.167,1027,3.167,1028,3.167,1695,3.167,1696,5.87,1697,5.87,1698,5.097,1699,6.351,1700,5.097,1701,5.097,1702,3.654,1703,3.654,1704,3.654,1705,6.351,1706,3.654,1707,5.097,1708,3.654,1709,3.654,1710,3.654,1711,3.654,1712,3.654,1713,3.654,1714,3.654,1715,3.654,1716,3.654,1717,7.242,1718,3.654,1719,3.654,1720,5.097,1721,3.654,1722,3.654,1723,3.654]],["title/interfaces/SpeciesPiece.html",[0,0.705,362,2.404]],["body/interfaces/SpeciesPiece.html",[0,1.049,2,2.361,3,0.224,4,0.224,5,0.199,7,0.102,8,0.67,11,0.15,12,0.015,13,0.224,14,0.013,15,0.013,42,0.327,122,4.137,187,2.678,188,3.598,189,5.394,190,5.021,191,1.286,192,1.392,193,1.506,362,4.236,1724,5.021]],["title/coverage.html",[1725,4.617]],["body/coverage.html",[0,1.281,1,1.407,5,0.083,6,2.099,11,0.146,12,0.016,14,0.007,15,0.007,16,0.66,17,1.727,19,3.289,20,2.93,21,1.864,22,2.93,24,1.727,30,1.404,39,1.6,56,0.199,59,0.496,87,2.93,88,2.099,89,4.101,98,1.407,99,0.905,104,3.475,105,1.6,106,2.099,112,1.467,124,1.133,136,1.494,138,1.254,149,0.802,154,0.905,156,0.905,158,0.905,159,0.768,160,0.905,162,0.905,163,0.799,164,1.348,166,0.905,168,0.905,169,0.905,171,0.905,174,0.868,176,0.905,178,0.868,180,2.211,181,1.864,182,0.868,186,2.099,189,1.727,193,1.199,194,2.099,195,1.886,196,2.93,197,1.133,204,2.683,205,1.886,206,2.93,221,1.727,224,1.081,227,1.886,236,2.099,239,1.032,248,1.494,249,1.727,277,2.321,285,1.254,287,1.494,313,5.026,332,3.289,335,1.6,336,0.945,340,1.494,343,1.404,357,1.032,359,1.404,362,1.494,403,2.099,404,1.886,417,1.6,418,1.494,436,1.6,444,1.886,482,2.099,483,2.099,492,1.494,493,1.6,508,1.727,510,1.727,511,2.846,512,2.485,513,1.886,557,2.099,566,1.886,568,2.099,569,1.254,627,2.613,628,3.475,629,1.404,635,1.727,652,3.475,653,1.404,675,1.254,676,2.099,683,1.6,686,1.6,687,1.727,750,2.099,751,3.289,803,2.099,804,2.099,817,1.6,832,3.015,835,1.886,844,1.6,866,2.099,877,2.93,878,2.93,879,1.727,881,1.727,908,2.099,909,2.099,947,2.099,950,2.099,955,2.099,988,1.6,1008,2.93,1009,2.099,1035,2.93,1077,1.6,1078,2.099,1079,1.6,1125,1.727,1126,2.099,1142,1.727,1151,1.727,1152,2.099,1197,1.727,1255,2.099,1356,1.886,1404,2.099,1405,2.099,1406,3.331,1466,2.099,1467,2.099,1480,1.727,1481,2.93,1482,2.93,1514,2.099,1515,2.099,1521,2.93,1524,1.727,1595,1.886,1596,2.93,1597,2.93,1612,1.727,1620,2.099,1621,2.099,1649,1.727,1650,3.436,1651,3.436,1652,1.404,1663,1.727,1688,2.099,1689,2.099,1695,2.099,1724,2.099,1725,2.099,1726,2.422,1727,2.422,1728,2.422,1729,6.605,1730,2.099,1731,6.431,1732,2.099,1733,7.534,1734,5.201,1735,6.431,1736,6.221,1737,5.201,1738,2.099,1739,2.099,1740,2.099,1741,2.099,1742,2.099,1743,2.099,1744,1.886,1745,2.099,1746,2.099,1747,1.886,1748,3.762,1749,2.422,1750,2.422,1751,2.099,1752,2.422,1753,2.099,1754,2.93,1755,5.201,1756,3.762,1757,2.422,1758,5.201,1759,3.762,1760,6.221,1761,2.422,1762,2.422,1763,3.762,1764,2.422,1765,2.422,1766,4.507,1767,2.099,1768,5.632,1769,5.632,1770,4.881,1771,2.099,1772,2.099,1773,1.886,1774,2.683,1775,2.099,1776,1.886,1777,2.099,1778,2.099,1779,2.099,1780,2.099,1781,4.613,1782,2.422,1783,2.422,1784,2.422]],["title/dependencies.html",[1785,2.815,1786,4.063]],["body/dependencies.html",[9,1.727,12,0.016,14,0.013,15,0.013,43,0.656,51,1.258,446,4.721,564,2.821,707,3.885,711,4.242,712,4.242,713,4.242,714,4.242,724,4.242,776,4.721,1020,3.599,1021,3.599,1022,3.599,1135,4.721,1487,3.158,1786,4.721,1787,5.448,1788,7.885,1789,5.448,1790,6.616,1791,5.448,1792,5.448,1793,6.616,1794,6.616,1795,5.448,1796,5.448,1797,5.448,1798,5.448,1799,5.448,1800,5.448,1801,5.448,1802,5.448,1803,5.448,1804,5.448,1805,5.448,1806,5.448]],["title/miscellaneous/enumerations.html",[1807,1.777,1808,4.063]],["body/miscellaneous/enumerations.html",[7,0.076,12,0.016,14,0.011,15,0.011,94,1.426,120,2.673,149,1.451,282,3.773,283,3.773,338,3.124,438,4.949,683,2.854,717,4.949,882,4.447,885,4.073,934,4.447,1773,3.364,1774,3.081,1776,3.364,1807,2.363,1808,3.744,1809,3.744,1810,4.447,1811,3.744,1812,4.321,1813,5.711,1814,4.321,1815,4.321,1816,4.949,1817,4.949,1818,4.949,1819,4.949,1820,4.949,1821,4.949,1822,4.321,1823,4.321,1824,4.321,1825,4.321,1826,4.321,1827,4.321,1828,4.321,1829,4.321,1830,4.321,1831,4.321,1832,4.321,1833,4.321,1834,4.321,1835,4.321,1836,4.321,1837,4.321,1838,5.711,1839,4.949,1840,4.949,1841,4.949,1842,4.949,1843,4.949,1844,4.949,1845,4.321,1846,4.321,1847,4.321,1848,4.321,1849,4.321,1850,4.321,1851,4.321,1852,4.321,1853,4.321,1854,4.321,1855,4.321,1856,4.321,1857,4.321,1858,4.321,1859,4.321,1860,4.321,1861,4.321,1862,4.321,1863,4.321,1864,4.321,1865,4.321,1866,4.321,1867,4.321,1868,4.321,1869,4.321,1870,4.321,1871,4.321,1872,4.321]],["title/miscellaneous/functions.html",[1807,1.777,1873,4.063]],["body/miscellaneous/functions.html",[7,0.064,10,0.763,11,0.178,12,0.015,14,0.01,15,0.01,31,0.618,33,1.015,34,0.713,35,1.022,37,1.056,41,1.106,50,2.27,79,2.59,89,2.106,93,0.998,94,1.357,122,2.776,125,3.03,138,2.629,141,1.819,188,1.786,227,3.953,285,2.629,287,3.132,314,1.417,436,3.353,444,3.953,506,2.814,513,3.953,583,4.003,591,1.786,592,3.148,800,4.172,864,2.829,1153,3.353,1279,4.682,1285,3.148,1295,2.59,1296,3.148,1297,4.517,1302,3.148,1309,3.148,1389,3.148,1493,2.942,1544,2.829,1545,2.829,1555,2.829,1740,3.148,1741,4.399,1742,4.399,1743,3.148,1744,3.953,1745,3.148,1746,4.399,1747,3.953,1754,2.829,1766,3.148,1767,4.399,1770,3.148,1771,4.399,1772,4.399,1807,1.987,1873,3.148,1874,3.633,1875,3.633,1876,6.335,1877,3.148,1878,3.633,1879,6.665,1880,3.633,1881,6.905,1882,6.905,1883,6.905,1884,5.851,1885,3.633,1886,3.633,1887,5.076,1888,3.633,1889,3.633,1890,3.633,1891,3.633,1892,3.633,1893,3.633,1894,3.633,1895,3.633,1896,5.851,1897,3.633,1898,5.076,1899,3.633,1900,3.633,1901,3.633,1902,3.633,1903,5.076,1904,3.633,1905,3.633,1906,3.633,1907,3.633,1908,3.633,1909,3.633,1910,3.633,1911,3.633,1912,3.633,1913,3.633,1914,3.633,1915,3.633,1916,5.851,1917,3.633,1918,5.076,1919,3.633,1920,3.633,1921,3.633,1922,3.633,1923,3.633,1924,3.633,1925,3.633]],["title/index.html",[7,0.069,1926,3.376]],["body/index.html",[2,2.54,12,0.014,14,0.014,15,0.014,18,1.686,90,3.065,100,2.431,1751,5.402,1926,5.402,1927,6.233,1928,6.233,1929,6.233]],["title/modules.html",[1930,4.617]],["body/modules.html",[12,0.014,14,0.014,15,0.014,1930,5.513]],["title/properties.html",[8,0.457,1785,2.815]],["body/properties.html",[8,0.616,12,0.014,14,0.014,15,0.014,1931,6.313,1932,6.313]],["title/miscellaneous/typealiases.html",[1807,1.777,1933,4.689]],["body/miscellaneous/typealiases.html",[7,0.106,11,0.155,12,0.013,14,0.013,15,0.013,89,3.481,189,5,282,3.967,879,5,881,5,882,4.676,885,4.282,1524,5,1754,4.676,1773,4.676,1774,4.282,1776,4.676,1807,3.285,1809,5.204,1810,4.676,1811,5.204,1877,5.204,1934,6.005]],["title/miscellaneous/variables.html",[1807,1.777,1935,4.063]],["body/miscellaneous/variables.html",[7,0.051,9,1.373,11,0.176,12,0.016,14,0.008,15,0.008,38,0.369,50,2.05,59,1.172,72,0.622,93,1.34,94,1.183,114,0.853,120,2.998,122,1.594,136,2.672,141,2.441,142,0.752,188,3.262,197,1.364,214,2.306,239,1.845,300,4.478,306,3.779,313,1.799,336,1.689,338,3.503,357,1.845,378,1.926,485,2.526,508,3.088,510,3.088,562,6.431,591,3.616,599,0.924,740,1.799,877,2.27,878,3.373,879,4.568,880,5.551,887,4.455,888,4.024,889,3.753,890,2.526,891,3.753,892,4.024,893,3.753,894,4.988,895,3.753,896,4.024,897,3.753,898,3.753,899,4.024,900,3.753,901,3.753,902,4.024,903,3.753,904,3.753,905,4.024,906,3.753,907,3.753,951,2.526,976,2.995,1008,2.27,1093,1.926,1167,2.526,1260,2.526,1275,2.078,1356,3.373,1582,2.27,1596,2.27,1597,3.373,1599,2.526,1600,2.526,1601,2.526,1602,2.526,1603,2.526,1604,2.526,1605,2.526,1606,2.526,1607,2.526,1608,2.526,1609,2.526,1610,2.526,1730,2.526,1732,3.753,1738,2.526,1739,3.753,1744,2.27,1747,2.27,1753,3.753,1774,2.078,1775,3.753,1777,2.526,1778,3.753,1779,3.753,1780,2.526,1807,1.594,1810,2.27,1816,2.526,1817,2.526,1818,2.526,1819,2.526,1820,2.526,1821,2.526,1839,3.753,1840,3.753,1841,2.526,1842,3.753,1843,3.753,1844,4.478,1935,2.526,1936,2.915,1937,2.915,1938,4.331,1939,2.915,1940,2.915,1941,2.915,1942,2.915,1943,2.915,1944,2.915,1945,2.915,1946,2.915,1947,2.915,1948,2.915,1949,2.915,1950,2.915,1951,2.915,1952,4.331,1953,2.915,1954,2.915,1955,2.915,1956,2.915,1957,2.915,1958,2.915,1959,2.915,1960,2.915,1961,6.633,1962,2.915,1963,2.915,1964,2.915,1965,2.915,1966,2.915,1967,2.915,1968,2.915,1969,6.406,1970,2.915,1971,2.915,1972,2.915,1973,2.915,1974,2.915,1975,2.915,1976,2.915,1977,2.915,1978,6.406,1979,2.915,1980,2.915,1981,2.915,1982,2.915,1983,2.915,1984,2.915,1985,2.915,1986,2.915,1987,2.915,1988,2.915,1989,2.915,1990,2.915,1991,4.331,1992,2.915,1993,2.915,1994,2.915,1995,2.915]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1932,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":922,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["1/1",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1929,"title":{},"body":{"index.html":{}}}],["14",{"_index":1751,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":894,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1927,"title":{},"body":{"index.html":{}}}],["2997582.svg",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":890,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/15",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1685,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["6606521.svg",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1928,"title":{},"body":{"index.html":{}}}],["_action",{"_index":1696,"title":{},"body":{"classes/Space.html":{}}}],["_drawpool",{"_index":910,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1310,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1697,"title":{},"body":{"classes/Space.html":{}}}],["_setgamestate",{"_index":1313,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1319,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":573,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1311,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1046,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1259,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"coverage.html":{}}}],["action.model",{"_index":1716,"title":{},"body":{"classes/Space.html":{}}}],["action_display_abundance",{"_index":1822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplayservicewithsetup",{"_index":39,"title":{"interfaces/ActionDisplayServiceWithSetup.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager",{"_index":24,"title":{"classes/ActionDisplaySetupManager.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager([adaptionactiondisplayservice",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["actionpawn",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":99,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":124,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":334,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":213,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":154,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":237,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":238,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1300,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{}}}],["actionserviceswithsetup",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["acts",{"_index":1530,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":156,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":809,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["add_circle",{"_index":1462,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":470,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":1623,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriend(username",{"_index":1626,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addpiece",{"_index":1698,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1707,"title":{},"body":{"classes/Space.html":{}}}],["alias",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1934,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":975,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["always",{"_index":1568,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["amount",{"_index":963,"title":{},"body":{"classes/Faction.html":{}}}],["amphibian",{"_index":1816,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1105,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1487,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":830,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":1445,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/grid",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":1444,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/table",{"_index":1443,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":831,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":159,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":462,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":855,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":886,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":862,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":459,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":464,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcardcomponent",{"_index":158,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":340,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":335,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":399,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":885,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":888,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":892,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":896,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":899,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":902,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":905,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":189,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":417,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["animals",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalssubject",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["api",{"_index":191,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["apiurlinterceptor",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":1880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1155,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1157,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(oldstate",{"_index":1159,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1185,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1201,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1164,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1817,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":239,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area.constant",{"_index":884,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["areaid",{"_index":879,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":891,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":895,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":898,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":901,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":904,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":907,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":544,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":546,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":248,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaservice",{"_index":1270,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":594,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["areastateservice",{"_index":635,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":637,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":1547,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["associated",{"_index":1914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assume",{"_index":1581,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["async",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1106,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":789,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":781,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":1739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":1885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":785,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":675,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":324,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":624,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces.length",{"_index":625,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces[0",{"_index":626,"title":{},"body":{"classes/Area.html":{}}}],["await",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":973,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["bag",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1298,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":1779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["before",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(false",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1360,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":1633,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elements",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1560,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["behaviorsubject(this.ready",{"_index":928,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":605,"title":{},"body":{"classes/Area.html":{}}}],["behaviorsubject(this.state",{"_index":1026,"title":{},"body":{"classes/GameElement.html":{}}}],["behaviorsubject>(new",{"_index":643,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":1818,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1830,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":1670,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1535,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["buildanimal",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["building",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["call",{"_index":1213,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1305,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1306,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":157,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":833,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":212,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:21",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:22",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:26",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1304,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":792,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["catch((error",{"_index":1640,"title":{},"body":{"injectables/PlayerService.html":{}}}],["change",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["changedetection",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["characters",{"_index":1686,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":1900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":56,"title":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["cleared",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":751,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:11",{"_index":1089,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:13",{"_index":1148,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:17",{"_index":1095,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:18",{"_index":756,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:21",{"_index":1098,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:26",{"_index":764,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:30",{"_index":1092,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:34",{"_index":1101,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:38",{"_index":1099,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:42",{"_index":1097,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:50",{"_index":761,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1104,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:54",{"_index":767,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:76",{"_index":759,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:9",{"_index":1146,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["clientid",{"_index":783,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["code",{"_index":758,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":1660,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":752,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":686,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":768,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoidtokenjwt",{"_index":763,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatest(readyobs",{"_index":76,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatestwith",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":543,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":786,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1238,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1186,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1165,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate.gameelements",{"_index":1169,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1570,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["complete",{"_index":1117,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1080,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1091,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":98,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":342,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{}}}],["config.constant",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["config.constant.ts",{"_index":878,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":400,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":393,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1597,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":181,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":1662,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":798,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":802,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":753,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":757,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":769,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":799,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console",{"_index":1507,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":801,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('unexpected",{"_index":791,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":794,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.log('create",{"_index":842,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(`created",{"_index":1139,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(`joining",{"_index":1460,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["console.log(authresult",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1149,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":190,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/element",{"_index":360,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["constant/element.constant",{"_index":948,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/image.constant",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constant/pile",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constant/pile.constant",{"_index":935,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(actionserviceswithsetup",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":416,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":634,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1127,"title":{},"body":{"injectables/GameService.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclientservice",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":339,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":471,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":998,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(formbuilder",{"_index":1509,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1036,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1429,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestatestore",{"_index":1196,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":816,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1087,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(id",{"_index":578,"title":{},"body":{"classes/Area.html":{}}}],["constructor(kind",{"_index":1700,"title":{},"body":{"classes/Space.html":{}}}],["constructor(pile",{"_index":1588,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":915,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1611,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":650,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":1010,"title":{},"body":{"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["corresponding",{"_index":1909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":921,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["coverage",{"_index":1725,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":1158,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":1162,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creategame",{"_index":1081,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1094,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1130,"title":{},"body":{"injectables/GameService.html":{}}}],["creates",{"_index":1154,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":621,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentcount",{"_index":1575,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentitemcount",{"_index":1583,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentplayer",{"_index":1423,"title":{},"body":{"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1464,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":810,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayersubject",{"_index":1622,"title":{},"body":{"injectables/PlayerService.html":{}}}],["custom",{"_index":1910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode",{"_index":776,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":754,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":760,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":956,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":961,"title":{},"body":{"classes/Faction.html":{}}}],["deepclone",{"_index":1019,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["deepclone(emptygamestate",{"_index":1346,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(oldstate",{"_index":1171,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deepclone(this._gamestate",{"_index":1381,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1030,"title":{},"body":{"classes/GameElement.html":{}}}],["deepclone(this._transactionstate",{"_index":1382,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":93,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":466,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":1546,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["defining",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":1531,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["delete",{"_index":1465,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1468,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1471,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["dependencies",{"_index":1786,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":1153,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1391,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":184,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["display.model.ts",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"coverage.html":{}}}],["display.service",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:73",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:93",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["display/adaption",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":194,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":835,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":834,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":950,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":954,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":1555,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1033,"title":{},"body":{"classes/GameElement.html":{}}}],["dom",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":1299,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":913,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drawpoolgamecomponent",{"_index":162,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["ds",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1302,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":793,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":1275,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":867,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":868,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":883,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1053,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["element.model.ts",{"_index":1009,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{}}}],["element.model.ts:16",{"_index":1016,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:20",{"_index":1018,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:28",{"_index":1015,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:36",{"_index":1014,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:6",{"_index":1012,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:7",{"_index":1013,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:8",{"_index":1011,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1071,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1074,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["element/element.component",{"_index":201,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["element/game",{"_index":1035,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":630,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":166,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":359,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":249,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementenum",{"_index":882,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":900,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":893,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":903,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":897,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":906,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":889,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":881,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":224,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":391,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":1048,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":995,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elements.length).fill(null",{"_index":461,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementspace",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":168,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementssubject",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":657,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":766,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1294,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1525,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emitstate",{"_index":577,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":972,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["empty",{"_index":1262,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emptyelementspace",{"_index":468,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":1356,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/model/area.model",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/faction.model",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/piece.model",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["engine/model/pile.model",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["engine/service/game",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/util/misc",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["engine/util/predicate",{"_index":228,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1308,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":330,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":331,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":321,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":1646,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":1647,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":1644,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.elementarea",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":326,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":325,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":1891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1389,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":1682,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1290,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":667,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1072,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1068,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1808,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":773,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.clientid",{"_index":784,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":780,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environments/environment",{"_index":774,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["equal",{"_index":1889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":800,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1387,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1032,"title":{},"body":{"classes/GameElement.html":{}}}],["error('can",{"_index":1378,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('element",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1385,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1366,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":323,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["error('number",{"_index":620,"title":{},"body":{"classes/Area.html":{}}}],["error('pile",{"_index":942,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":1719,"title":{},"body":{"classes/Space.html":{}}}],["error('state",{"_index":616,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["error('transaction",{"_index":1244,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1052,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1076,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1375,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errorhandlerinterceptor",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":1493,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcoalescing",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1034,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["extends",{"_index":187,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":951,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":170,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":952,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":953,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":203,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":169,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":336,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":467,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction.id",{"_index":551,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.ownerid",{"_index":850,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":844,"title":{"interfaces/FactionAssignment.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.id",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignments[0",{"_index":845,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":989,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":492,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":818,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":811,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":982,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["factionstateservice",{"_index":988,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":992,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1533,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["failed",{"_index":1505,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1020,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["fetchgames",{"_index":1426,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((ids",{"_index":838,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((player",{"_index":1450,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":937,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":81,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["filter((space",{"_index":327,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["filter(isnotundefined",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filterplayers",{"_index":1427,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1434,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1082,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1096,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["first()).subscribe",{"_index":230,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["formbuilder",{"_index":1483,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formgroup",{"_index":1484,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["found",{"_index":1911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friends",{"_index":1123,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":1648,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1873,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":599,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":807,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":808,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":804,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:39",{"_index":827,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:40",{"_index":825,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":826,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":824,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":819,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:57",{"_index":821,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:68",{"_index":822,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:85",{"_index":823,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1463,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1451,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.players",{"_index":1449,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["game/draw",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["gamecollection",{"_index":1107,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1115,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":569,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["gameelement:28",{"_index":968,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:32",{"_index":595,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:36",{"_index":597,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:6",{"_index":585,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:7",{"_index":587,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:8",{"_index":586,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelementregistryservice",{"_index":629,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:16",{"_index":645,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":642,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":644,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:19",{"_index":647,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:23",{"_index":638,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:27",{"_index":641,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:31",{"_index":1000,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelements",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gameelementstate",{"_index":1023,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["gameelementstates",{"_index":1358,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gameelementstateservice",{"_index":653,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:14",{"_index":659,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":669,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:16",{"_index":668,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:18",{"_index":661,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:26",{"_index":664,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:37",{"_index":663,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:41",{"_index":666,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":1039,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":1093,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStatePatchService.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/variables.html":{}}}],["gamemanagementclientservice",{"_index":1077,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gamemanagementservice",{"_index":828,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamemanagementsvc",{"_index":836,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["games",{"_index":1424,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":1125,"title":{"injectables/GameService.html":{}},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestarted",{"_index":812,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":976,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"miscellaneous/variables.html":{}}}],["gamestate.gameelements.area",{"_index":1395,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.faction",{"_index":1398,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.pile",{"_index":1401,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1199,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1142,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":1330,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1263,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":1145,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["gamestatepatches",{"_index":1156,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1151,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":817,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1200,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1197,"title":{"injectables/GameStateStoreService.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1312,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":820,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gametablecolumns",{"_index":1425,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gecko",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1712,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":350,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getaddedelements",{"_index":480,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":476,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":478,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":415,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1224,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":930,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":352,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":670,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":656,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":662,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1226,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1083,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1349,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":1147,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":347,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":870,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlength",{"_index":932,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1084,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1314,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1322,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":138,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(imgpathbykind",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":1902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":556,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1047,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":978,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1714,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1228,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1085,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1100,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["getscore",{"_index":980,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":354,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1017,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getstoragekey",{"_index":1469,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1473,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettransactionstate",{"_index":1351,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1545,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":1839,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":970,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["gsp.patch",{"_index":1173,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gsp.patchid",{"_index":1176,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1198,"title":{},"body":{"injectables/GameStateService.html":{}}}],["handler.interceptor.ts",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":969,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["here",{"_index":1513,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["host",{"_index":1137,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1090,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1088,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":1883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":1881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1135,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1134,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":1892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":839,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":136,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":140,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1529,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["increasescore",{"_index":957,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":964,"title":{},"body":{"classes/Faction.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1508,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherentcount",{"_index":880,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":584,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initialization",{"_index":1893,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":770,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":787,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":771,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router).navigate(['/login",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["inputs",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":1819,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1261,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":1180,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1278,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameStateService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["inventory",{"_index":1582,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":1771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloggedin",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1772,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":1924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isready",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["istrue",{"_index":227,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":1925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":974,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["item.id",{"_index":1372,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":1917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":1901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1428,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1436,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["json",{"_index":1021,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["json.parse(playerauthdata",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1376,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":775,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":795,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":1903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key",{"_index":1279,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1364,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1273,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":591,"title":{},"body":{"classes/Area.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1108,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1118,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1116,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1122,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1111,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leaf",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":914,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["lengthsubject",{"_index":1523,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["level",{"_index":1272,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["list",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["lobby",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":171,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1478,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1477,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1479,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":687,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":813,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":175,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":1492,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1480,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":174,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":177,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":176,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":1687,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1257,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1258,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1820,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1079,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management.service",{"_index":829,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management/game",{"_index":1078,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":1442,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1126,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:10",{"_index":1128,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:16",{"_index":1131,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:26",{"_index":1133,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:30",{"_index":1129,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":1621,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":1631,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":1634,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":1625,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":1628,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":1627,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:50",{"_index":1630,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:11",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:18",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:24",{"_index":92,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:25",{"_index":95,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:26",{"_index":91,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:33",{"_index":96,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:46",{"_index":97,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["map",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1362,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((serviceready",{"_index":78,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["map((space",{"_index":328,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matbutton",{"_index":805,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1491,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":1664,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1410,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1416,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":617,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["matches",{"_index":1343,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":1420,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1419,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1408,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matgridlist",{"_index":406,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1409,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1415,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1411,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1413,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":1417,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matminifabbutton",{"_index":1418,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrow",{"_index":1412,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1414,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattable",{"_index":1407,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":806,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["meat",{"_index":1841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":1896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":1266,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":1807,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":648,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{}}}],["model/element.model",{"_index":225,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":987,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{}}}],["model/game",{"_index":1045,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1614,"title":{},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":1930,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1307,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1264,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["new",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newdocument",{"_index":1174,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newgamestateelement",{"_index":1328,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1373,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":596,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.gameelements",{"_index":1170,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.id",{"_index":614,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["newstate.kind",{"_index":1722,"title":{},"body":{"classes/Space.html":{}}}],["newstate.patchid",{"_index":1175,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.piece",{"_index":1723,"title":{},"body":{"classes/Space.html":{}}}],["newstate.space.foreach((spacestate",{"_index":622,"title":{},"body":{"classes/Area.html":{}}}],["newstate.space.length",{"_index":619,"title":{},"body":{"classes/Area.html":{}}}],["next",{"_index":1882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactionpawnspaceindex",{"_index":856,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":575,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":589,"title":{},"body":{"classes/Area.html":{}}}],["nextelementspaceindex",{"_index":858,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":320,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["nextspace.addpiece(element",{"_index":322,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ngclass",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngoninit",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["null",{"_index":141,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PlayerAuthData.html":{}}}],["object",{"_index":1291,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1563,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object1",{"_index":1890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1309,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1274,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["of(0",{"_index":944,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(undefined",{"_index":1150,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1161,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameelements",{"_index":1172,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameid",{"_index":1166,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.patchid",{"_index":1168,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1332,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":1284,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["oninit",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onpush",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1497,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1181,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":1132,"title":{},"body":{"injectables/GameService.html":{}}}],["others",{"_index":1260,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":613,"title":{},"body":{"classes/Area.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1926,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1292,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":959,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["package",{"_index":1785,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":183,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":1421,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":1422,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":1406,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1516,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:18",{"_index":1517,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:22",{"_index":1512,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1510,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1675,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":1511,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:41",{"_index":1676,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:48",{"_index":1439,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:49",{"_index":1440,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1430,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:62",{"_index":1435,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:69",{"_index":1433,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:73",{"_index":1432,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:78",{"_index":1431,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:83",{"_index":1437,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page/lobby",{"_index":1405,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1482,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":1515,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":1651,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1031,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1113,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["particular",{"_index":1283,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["passed",{"_index":1344,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1501,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1022,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["patch.service",{"_index":1231,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1152,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:12",{"_index":1163,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1160,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patchid",{"_index":1167,"title":{},"body":{"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":202,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":186,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":105,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":469,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["piece",{"_index":188,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1554,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piececount",{"_index":1572,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piecefactory",{"_index":1524,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":925,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(null",{"_index":1578,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1577,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount.length",{"_index":1573,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1574,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pile",{"_index":357,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile.constant",{"_index":1598,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pileadapter",{"_index":343,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":395,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":397,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1595,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":934,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1599,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1601,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1603,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1605,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1607,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1609,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1600,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1602,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1604,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1606,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1608,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1610,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":545,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":547,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":548,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":493,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":917,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pileservice",{"_index":1269,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1208,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["pilestateservice",{"_index":1612,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1613,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":77,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["placeholder",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["places",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":1103,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1124,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":1643,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":683,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1109,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":1642,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1121,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["playerids",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["players",{"_index":1138,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["playerservice",{"_index":418,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["please",{"_index":1681,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":164,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["pool.service.ts",{"_index":909,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:15",{"_index":926,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":927,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":929,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:18",{"_index":916,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:24",{"_index":918,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:37",{"_index":931,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:45",{"_index":933,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:53",{"_index":920,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:57",{"_index":924,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["possible",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["previous",{"_index":1293,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["processedfactionids",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1212,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":572,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provideanimationsasync('noop",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["provider.service.ts",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1177,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":911,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pull(count",{"_index":919,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1548,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany",{"_index":1526,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1541,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullone",{"_index":1527,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pulls",{"_index":1543,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put",{"_index":912,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put(pieces",{"_index":923,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["puts",{"_index":1551,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["quickly",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1522,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reactiveformsmodule",{"_index":1485,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["readonly",{"_index":333,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["readonlymap",{"_index":887,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["readyobs",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["readysubject",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["received",{"_index":971,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["refresh",{"_index":1461,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1282,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":779,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["register",{"_index":633,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":640,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":665,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1187,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1203,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":1054,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":631,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":632,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":938,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":654,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":658,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1061,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1004,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1616,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1188,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1205,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1189,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1207,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1315,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1327,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":628,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:14",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:16",{"_index":1044,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":1042,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":1043,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:19",{"_index":1038,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1001,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1003,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:23",{"_index":1040,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1002,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":999,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:27",{"_index":1041,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1183,"title":{},"body":{"injectables/GameStateService.html":{}}}],["remove",{"_index":1721,"title":{},"body":{"classes/Space.html":{}}}],["removeactionpawn",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":1720,"title":{},"body":{"classes/Space.html":{}}}],["removeelement",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":1624,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":1629,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":1699,"title":{},"body":{"classes/Space.html":{}}}],["removeremainingelements",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1532,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reptile",{"_index":1821,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":1884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1215,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["requiretransaction",{"_index":1190,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1256,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1178,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":142,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1393,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1191,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["router",{"_index":1488,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["routerlink",{"_index":1489,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["same",{"_index":1331,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["score",{"_index":960,"title":{},"body":{"classes/Faction.html":{}}}],["sdk/client",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1506,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":1842,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1536,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["selector(gamestate",{"_index":1363,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sendgsptobackend",{"_index":1143,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1144,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":1267,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service.ready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service.setup",{"_index":86,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service/action",{"_index":226,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":1490,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":1653,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":1441,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["serviceready",{"_index":82,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["serviceready.every((ready",{"_index":80,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["services",{"_index":1184,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["seta",{"_index":1918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setarea",{"_index":1192,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1217,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":1916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":1915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":655,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":660,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1193,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1219,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1086,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1102,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1288,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1337,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":1194,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1221,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":958,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":966,"title":{},"body":{"classes/Faction.html":{}}}],["setstate",{"_index":576,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":593,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstoragekey",{"_index":1470,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1475,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1316,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1340,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setup",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["several",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["sign",{"_index":179,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(undefined",{"_index":1438,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["signup",{"_index":755,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":765,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":772,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":797,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":1655,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":1649,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":178,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":1665,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":1679,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":1680,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":1684,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":1678,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":1663,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":182,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":1652,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["skip",{"_index":1066,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1452,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snake",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1277,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1453,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":197,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":155,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space.component",{"_index":222,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":198,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":199,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":196,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":200,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":949,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["space.model",{"_index":598,"title":{},"body":{"classes/Area.html":{}}}],["space.piece",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{}}}],["space.piece.kind",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":329,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state",{"_index":601,"title":{},"body":{"classes/Area.html":{}}}],["space.state$.subscribe((spacestate",{"_index":609,"title":{},"body":{"classes/Area.html":{}}}],["space/action",{"_index":195,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{}}}],["spaces.filter",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spaces.map((space",{"_index":600,"title":{},"body":{"classes/Area.html":{}}}],["spacessubject",{"_index":570,"title":{},"body":{"classes/Area.html":{}}}],["spacestate",{"_index":571,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["species",{"_index":338,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":362,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":337,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1544,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1810,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1811,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":1878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":1876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":1814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1877,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":1815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":1879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/lobby",{"_index":1404,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1481,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":1514,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":1650,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/local",{"_index":1845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":1738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":1740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":568,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:10",{"_index":579,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:22",{"_index":588,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:48",{"_index":590,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:7",{"_index":580,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:8",{"_index":582,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:9",{"_index":581,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":955,"title":{},"body":{"classes/Faction.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":981,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":965,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":962,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":967,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:5",{"_index":977,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":979,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1008,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1754,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1521,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:10",{"_index":1538,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:100",{"_index":1590,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:104",{"_index":1591,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:108",{"_index":1592,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:11",{"_index":1539,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:12",{"_index":1537,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:13",{"_index":1528,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:32",{"_index":1552,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1540,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:49",{"_index":1542,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:71",{"_index":1549,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:79",{"_index":1550,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:89",{"_index":1589,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:92",{"_index":1593,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:96",{"_index":1594,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1620,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1695,"title":{},"body":{"classes/Space.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:10",{"_index":1706,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:11",{"_index":1701,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:19",{"_index":1711,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:26",{"_index":1713,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:30",{"_index":1715,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:34",{"_index":1708,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:43",{"_index":1709,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:54",{"_index":1710,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:7",{"_index":1704,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:8",{"_index":1702,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:9",{"_index":1703,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":750,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":1688,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":627,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/local",{"_index":1466,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/util/misc.ts",{"_index":1766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":1770,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":803,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":866,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":869,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":871,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":872,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":873,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":877,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1596,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":332,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":353,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":355,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":473,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":472,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":477,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":474,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":475,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":479,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":481,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":345,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":344,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":346,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":341,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":348,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":349,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":351,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":947,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1724,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":908,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":864,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":1245,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startgame",{"_index":814,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["starttransaction",{"_index":1195,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":193,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["state.constant.ts",{"_index":1778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":1357,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.owner",{"_index":1557,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["state.service",{"_index":649,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":652,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":671,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:15",{"_index":1064,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:16",{"_index":1057,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":1065,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":1062,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:24",{"_index":1063,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:26",{"_index":1059,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:30",{"_index":1223,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1202,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:37",{"_index":1058,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:41",{"_index":1060,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:47",{"_index":1216,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:54",{"_index":1210,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:60",{"_index":1225,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1218,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1204,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1227,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1220,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:79",{"_index":1206,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1229,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1222,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:91",{"_index":1209,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":832,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":574,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["static",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1467,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1474,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1476,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1472,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.ts",{"_index":1813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store.service",{"_index":1230,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1255,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:106",{"_index":1350,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:110",{"_index":1352,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:118",{"_index":1320,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:123",{"_index":1338,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:131",{"_index":1345,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:139",{"_index":1321,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:148",{"_index":1334,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:158",{"_index":1353,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:162",{"_index":1335,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:166",{"_index":1324,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:170",{"_index":1354,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:174",{"_index":1336,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:178",{"_index":1325,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:182",{"_index":1355,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:186",{"_index":1339,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:190",{"_index":1326,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:39",{"_index":1347,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:40",{"_index":1348,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:41",{"_index":1318,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:47",{"_index":1323,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:63",{"_index":1341,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:89",{"_index":1329,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1333,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["subject",{"_index":1705,"title":{},"body":{"classes/Space.html":{}}}],["subscribe",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":83,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["subscribe((animal",{"_index":458,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribers",{"_index":1390,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":1894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["substatearray",{"_index":1368,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1371,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1380,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1374,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1502,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1268,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1564,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["sun",{"_index":1843,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":602,"title":{},"body":{"classes/Area.html":{}}}],["super(areastatesvc",{"_index":651,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":993,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1615,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1556,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["super.register(elements",{"_index":994,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1179,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":583,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":865,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":815,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1301,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1289,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tester2",{"_index":1457,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tester3",{"_index":1458,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tgameelement",{"_index":639,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":1037,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":1637,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._action",{"_index":1718,"title":{},"body":{"classes/Space.html":{}}}],["this._drawpool",{"_index":939,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1383,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.gameelements[key",{"_index":1379,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1717,"title":{},"body":{"classes/Space.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1392,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1386,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1388,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1024,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.id",{"_index":1029,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.inventory[key",{"_index":1565,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[kind",{"_index":1576,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[piece.kind",{"_index":1584,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.name",{"_index":983,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.ownerid",{"_index":984,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.score",{"_index":985,"title":{},"body":{"classes/Faction.html":{}}}],["this._transactionstate",{"_index":1365,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.gameelements",{"_index":1369,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaysetupmanager",{"_index":58,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.ready",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.setup",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionpawn?.name",{"_index":144,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":394,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":463,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawns.set(actionpawns",{"_index":232,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionserviceswithsetup",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.foreach((service",{"_index":85,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.map((service",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":231,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":857,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":860,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":233,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":859,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":229,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":861,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":840,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":553,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":398,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":554,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":854,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalssubject.asobservable",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":555,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1234,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":837,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":550,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":542,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":1635,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1114,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":1500,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":1518,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.buildanimal(faction",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.cognitoclient",{"_index":778,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclient.send(command",{"_index":790,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":1694,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":1693,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":1638,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1447,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":848,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayersubject.asobservable",{"_index":1632,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":1639,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.drawpool.length",{"_index":943,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":945,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":946,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":874,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":875,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":1050,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.set(elements",{"_index":234,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1067,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1579,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitstate",{"_index":986,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":460,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1504,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":1661,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.faction",{"_index":392,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":401,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":402,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":990,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":996,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":991,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":997,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":843,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":847,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":846,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":849,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.fetchgames",{"_index":1448,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.formbuilder.group",{"_index":1495,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":1056,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":1636,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1141,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1136,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":1641,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1140,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":1645,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":841,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.games.set(await",{"_index":1454,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1459,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(['tester1",{"_index":1456,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1455,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestarted",{"_index":852,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1232,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1242,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.area",{"_index":1246,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1241,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1249,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1240,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1252,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1248,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1251,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1254,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1243,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1247,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1250,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1235,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1253,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1236,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1237,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1359,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1361,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1384,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":672,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":863,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1005,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1617,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":673,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1006,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1618,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":674,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1007,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1619,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":853,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1070,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1394,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1119,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.create",{"_index":1239,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.http.get('/game",{"_index":1112,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1120,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":615,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["this.initialize",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.isloggedin",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":876,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{}}}],["this.length",{"_index":1561,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject",{"_index":1559,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1562,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1566,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1494,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1498,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1499,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.owner",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piececounts.get(key",{"_index":1567,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piecefactory",{"_index":1558,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.length",{"_index":1585,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullmany(count",{"_index":1586,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.put(pieces",{"_index":1587,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":549,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":552,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":940,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":936,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1446,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer.id",{"_index":851,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.processedfactionids",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":1580,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.ready",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(allready",{"_index":84,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.readysubject.next(this.ready",{"_index":941,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":646,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1055,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1051,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1049,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1069,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1073,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1397,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1400,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1403,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.replenish",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.router.navigate(['/lobby",{"_index":1503,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1519,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.router.navigate(['/sign",{"_index":1674,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.setentitystate(state",{"_index":1075,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1396,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1399,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1402,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signupconfirmform",{"_index":1656,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":1657,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":1658,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":1666,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":1671,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":1672,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":1659,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":1673,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.spaces",{"_index":603,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.foreach((space",{"_index":608,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.length",{"_index":618,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":623,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject",{"_index":604,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.asobservable",{"_index":606,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":612,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate",{"_index":607,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate[index",{"_index":610,"title":{},"body":{"classes/Area.html":{}}}],["this.speciespile",{"_index":396,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":465,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1027,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject",{"_index":1025,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.asobservable",{"_index":1028,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.next(this.state",{"_index":611,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.transactionstate",{"_index":1377,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":1276,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["title",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["token",{"_index":762,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["top",{"_index":1271,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["total",{"_index":1553,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["track",{"_index":235,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["transaction",{"_index":1211,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1317,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":788,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tsc",{"_index":1569,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["tslib",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1303,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1285,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1933,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1370,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["types/src/auth",{"_index":777,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":192,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["types/src/player",{"_index":1110,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1296,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":1899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1233,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unknown",{"_index":1571,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":180,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":1654,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":1689,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":1692,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":1691,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":1690,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":1342,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":1281,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updateon",{"_index":1669,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":1214,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1367,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["url.interceptor.ts",{"_index":1741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":1534,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["used",{"_index":1297,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_password_auth",{"_index":782,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":796,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":1265,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PlayerService.html":{}}}],["v",{"_index":1913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1683,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["validators",{"_index":1486,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":1667,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":1668,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1496,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1295,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1935,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1182,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1931,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1287,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":1677,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":1844,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1286,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1280,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":1908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1520,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":592,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionDisplaySetupManager\n                            \n                            \n                                ready$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionDisplaySetupManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionDisplayServiceWithSetup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayServiceWithSetup.html":{"url":"interfaces/ActionDisplayServiceWithSetup.html","title":"interface - ActionDisplayServiceWithSetup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayServiceWithSetup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                                \n                                        \n                                            setup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setup:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayServiceWithSetup {\n  ready$: Observable;\n  setup: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionDisplaySetupManager.html":{"url":"classes/ActionDisplaySetupManager.html","title":"class - ActionDisplaySetupManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionDisplaySetupManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionServicesWithSetup\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[])\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionServicesWithSetup\n                                                  \n                                                        \n                                                                    ActionDisplayServiceWithSetup[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionServicesWithSetup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionDisplayServiceWithSetup[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns = signal([]);\n  elements = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns.set(actionPawns);\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements.set(elements);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements(); track $index) {                  }                    @for (actionPawn of actionPawns(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  setup(): void {\n    this.replenish();\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n      if (nextSpace) {\n        nextSpace.addPiece(element as Piece);\n      } else {\n        throw new Error('No Spaces available');\n      }\n    });\n    this.elementsSubject.next(this.elements);\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.id),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space } from './space.model';\nimport { GameElement } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AreaState, SpaceState } from 'api-types/src/game-state';\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cognitoClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cognitoClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CognitoIdentityProviderClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  private cognitoClient: CognitoIdentityProviderClient;\n\n  constructor() {\n    this.cognitoClient = new CognitoIdentityProviderClient({\n      region: environment.cognito.region,\n    });\n  }\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                gameStarted\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startGame\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, areaRegistryService: AreaRegistryService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n// import { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  gameStarted = false;\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    // private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private areaRegistryService: AreaRegistryService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  startGame(): void {\n    // this.gameManagementSvc.createGame();\n    // console.log('Create Game');\n    // this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n    //   const factionAssignment = factionAssignments[0];\n    //   this.factions = [this.factionRegistrySvc.get(factionAssignment.id)];\n    //\n    //   this.factions = factionAssignments.map((factionAssignment) =>\n    //     this.factionRegistrySvc.get(factionAssignment.id),\n    //   );\n    //   this.currentPlayerFaction = this.factions.find(\n    //     (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n    //   );\n    // });\n    // this.gameStarted = true;\n  }\n\n  takeAction(): void {\n    // this.gameStateSvc.startTransaction();\n    // const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    // const actionPawn = animal.actionPawn.pullOne();\n    // if (actionPawn) {\n    //   const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n    //     (value) => value === null,\n    //   );\n    //   const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n    //     (value) => value !== null,\n    //   );\n    //   this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n    //   const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n    //   animal.elements.addElement(element);\n    // }\n    // this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Start Game\n      Take Action\n    \n    @if (gameStarted) {\n      \n        \n        \n          @for (faction of factions; track faction.id) {\n            \n          }\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Game      Take Action        @if (gameStarted) {                                @for (faction of factions; track faction.id) {                      }                  }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\n\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementKind } from '../constant/element.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { FactionState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:28\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\nimport { GameElementState } from 'api-types/src/game-state';\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      players: [this.authService.loggedInUsername, ...otherPlayers],\n    });\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { GameStatePatch } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(oldState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { applyPatch, compare, deepClone } from 'fast-json-patch';\nimport { GameState, GameStatePatch } from 'api-types/src/game-state';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      gameId: oldState.gameId,\n      patchId: oldState.patchId + 1,\n      patch: compare(oldState.gameElements, newState.gameElements),\n    };\n  }\n\n  apply(oldState: GameState, gsp: GameStatePatch): GameState {\n    const newState = deepClone(oldState) as GameState;\n    newState.gameElements = applyPatch(\n      oldState.gameElements,\n      gsp.patch,\n      undefined,\n      false,\n    ).newDocument;\n    newState.patchId = gsp.patchId;\n    return newState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { AreaState, FactionState, GameStatePatch, PileState } from 'api-types/src/game-state';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    this.gameStateStore.setGameState(this.gspService.apply(this.gameStateStore.gameState, gsp));\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:170\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:182\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, map, Observable } from 'rxjs';\nimport { emptyGameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\n\nimport {\n  AreaState,\n  FactionState,\n  GameElementState,\n  GameElementStates,\n  GameState,\n  PileState,\n} from 'api-types/src/game-state';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState.gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState.gameElements[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGame\n                        \n                    \n                \n            \n            \n                \njoinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'players', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'players', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.players\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    await this.gameService.createGame(['tester1', 'tester2', 'tester3']);\n    await this.fetchGames();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  joinGame(gameId: string): void {\n    console.log(`Joining game ${gameId}`);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:13\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:49\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:79\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:32\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addfriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addfriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addfriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addfriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                        Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\nimport { Piece, SpaceState } from 'api-types/src/game-state';\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayServiceWithSetup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            class\n            ActionDisplaySetupManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            baseGameState   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(Router).navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        [ElementEnum.GRASS]: 18,\n        [ElementEnum.GRUB]: 18,\n        [ElementEnum.MEAT]: 18,\n        [ElementEnum.SEED]: 18,\n        [ElementEnum.SUN]: 18,\n        [ElementEnum.WATER]: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: {\n    area: [],\n    faction: [],\n    pile: [],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
